/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */img,legend{border:0}@font-face{font-family:Lato;font-style:normal;font-weight:400;src:local('Lato Regular'),local('Lato-Regular'),url(https://fonts.gstatic.com/s/lato/v14/S6uyw4BMUTPHjx4wWw.ttf) format('truetype')}@font-face{font-family:Lato;font-style:normal;font-weight:700;src:local('Lato Bold'),local('Lato-Bold'),url(https://fonts.gstatic.com/s/lato/v14/S6u9w4BMUTPHh6UVSwiPHA.ttf) format('truetype')}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=radio],input[type=checkbox]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{padding:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.banner{width:100vw;overflow-x:hidden}.banner__content{max-width:700px;position:relative;max-height:100vh;padding-bottom:25px}.banner__content .banner__background{position:absolute;top:160px;left:-550px;width:573px;height:409px;background:url(../img/home-background.svg) center center no-repeat}.banner__content::after{content:'';position:absolute;left:720px;top:0;width:100vw;height:100%;background:url(../img/background-cube.svg) left top no-repeat #0B71BC}.banner__content .header{padding-top:42px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.banner__content .header .logo{line-height:0}.banner__content .header .navi{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.banner__content .header .navi .navi__item{margin:0 20px}.banner__content .header .navi a{color:#000;text-decoration:none}.banner__content .title{font-size:52px;line-height:1.33;font-weight:700;margin:240px 0;position:relative}@media screen and (max-width:768px){.banner__content::after{left:30%}}.about .container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.about .about__item{padding:40px 40px 40px 0;max-width:580px;box-sizing:border-box}.about .about__item:nth-child(even){background-color:#ededed;padding:40px}.about .type{text-transform:uppercase;font-size:12px}.about .title{font-size:22px;margin:27px 0 18px;line-height:1.5}.about .description{min-height:60px;font-size:20px;margin:18px 0 24px;line-height:1.4}.about .link{font-size:14px;color:#000}.technologies h2{text-align:center;font-size:30px;margin:38px 5px}.technologies .container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.technologies__item{width:575px;box-sizing:border-box;padding:40px 40px 93px;transition:.3s ease-in-out}.technologies__item:hover{box-shadow:0 6px 10px 2px rgba(18,18,18,.4);transform:scale(1.01)}.technologies__item.basecore{outline:#ededed solid 1px;background:url(../img/bc-platform.jpg) right bottom no-repeat;color:#0195a1}.technologies__item.basecore .link{background-color:#0195a1}.technologies__item.excalibur{background:url(../img/excalibur-logo-bg.svg) right 54px top no-repeat #333;background-size:contain;color:#fff}.technologies__item.excalibur .link{background-color:#ef5777}.technologies__item .description{font-size:15px;margin-bottom:46px}.technologies__item .link{width:190px;height:56px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:#fff;font-size:14px;text-decoration:none}body{font-family:Lato,sans-serif;width:100vw}section:not(:last-of-type){margin-bottom:100px}.container{margin:0 auto;max-width:1200px}@media screen and (max-width:1300px){.container{padding:0 30px;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}}.footer{background:#1b1b1b;color:#fff}.footer header{padding:50px 0 73px}.footer footer{padding:38px 0;background:#333;font-size:12px}.footer footer a{color:#fff}.footer .container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.footer .lists{display:-ms-flexbox;display:flex}.footer .footer__list{list-style-type:none;margin:0;padding:0}.footer .footer__list:not(:last-child){margin-right:37px}.footer .footer__list-item{font-size:16px}.footer .footer__list-item:not(:last-child){margin-bottom:8px}.footer .footer__list-item.--title{margin-bottom:10px}.footer .footer__list-item a{color:#fff;text-decoration:none}.footer .cpr{display:-ms-flexbox;display:flex}.footer .cpr div:first-child{margin-right:60px}.footer .cpr .link{margin-right:31px}.footer .cpr .link a{text-decoration:none}.footer .media__item{display:inline-block;width:15px;height:13px}.footer .media__item:not(:last-child){margin-right:30px}.footer .media__item.tw{background:url(../img/tw.svg) left top no-repeat}.footer .media__item.med{background:url(../img/medium.svg) left top no-repeat}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
