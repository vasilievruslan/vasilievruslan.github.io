!function(e){var t={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,slideZIndex:50,wrapperClass:"bx-wrapper",touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,ariaLive:!0,ariaHidden:!0,keyboardEnabled:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",stopAutoOnClick:!1,autoHover:!1,autoDelay:0,autoSlideForOnePage:!1,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,shrinkItems:!1,onSliderLoad:function(){return!0},onSlideBefore:function(){return!0},onSlideAfter:function(){return!0},onSlideNext:function(){return!0},onSlidePrev:function(){return!0},onSliderResize:function(){return!0}};e.fn.bxSlider=function(n){if(0===this.length)return this;if(this.length>1)return this.each(function(){e(this).bxSlider(n)}),this;var s={},o=this,r=e(window).width(),a=e(window).height();if(!e(o).data("bxSlider")){var l=function(){e(o).data("bxSlider")||(s.settings=e.extend({},t,n),s.settings.slideWidth=parseInt(s.settings.slideWidth),s.children=o.children(s.settings.slideSelector),s.children.length<s.settings.minSlides&&(s.settings.minSlides=s.children.length),s.children.length<s.settings.maxSlides&&(s.settings.maxSlides=s.children.length),s.settings.randomStart&&(s.settings.startSlide=Math.floor(Math.random()*s.children.length)),s.active={index:s.settings.startSlide},s.carousel=s.settings.minSlides>1||s.settings.maxSlides>1,s.carousel&&(s.settings.preloadImages="all"),s.minThreshold=s.settings.minSlides*s.settings.slideWidth+(s.settings.minSlides-1)*s.settings.slideMargin,s.maxThreshold=s.settings.maxSlides*s.settings.slideWidth+(s.settings.maxSlides-1)*s.settings.slideMargin,s.working=!1,s.controls={},s.interval=null,s.animProp="vertical"===s.settings.mode?"top":"left",s.usingCSS=s.settings.useCSS&&"fade"!==s.settings.mode&&function(){for(var e=document.createElement("div"),t=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"],i=0;i<t.length;i++)if(void 0!==e.style[t[i]])return s.cssPrefix=t[i].replace("Perspective","").toLowerCase(),s.animProp="-"+s.cssPrefix+"-transform",!0;return!1}(),"vertical"===s.settings.mode&&(s.settings.maxSlides=s.settings.minSlides),o.data("origStyle",o.attr("style")),o.children(s.settings.slideSelector).each(function(){e(this).data("origStyle",e(this).attr("style"))}),d())},d=function(){var t=s.children.eq(s.settings.startSlide);o.wrap('<div class="'+s.settings.wrapperClass+'"><div class="bx-viewport"></div></div>'),s.viewport=o.parent(),s.settings.ariaLive&&!s.settings.ticker&&s.viewport.attr("aria-live","polite"),s.loader=e('<div class="bx-loading" />'),s.viewport.prepend(s.loader),o.css({width:"horizontal"===s.settings.mode?1e3*s.children.length+215+"%":"auto",position:"relative"}),s.usingCSS&&s.settings.easing?o.css("-"+s.cssPrefix+"-transition-timing-function",s.settings.easing):s.settings.easing||(s.settings.easing="swing"),s.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),s.viewport.parent().css({maxWidth:p()}),s.children.css({"float":"horizontal"===s.settings.mode?"left":"none",listStyle:"none",position:"relative"}),s.children.css("width",h()),"horizontal"===s.settings.mode&&s.settings.slideMargin>0&&s.children.css("marginRight",s.settings.slideMargin),"vertical"===s.settings.mode&&s.settings.slideMargin>0&&s.children.css("marginBottom",s.settings.slideMargin),"fade"===s.settings.mode&&(s.children.css({position:"absolute",zIndex:0,display:"none"}),s.children.eq(s.settings.startSlide).css({zIndex:s.settings.slideZIndex,display:"block"})),s.controls.el=e('<div class="bx-controls" />'),s.settings.captions&&y(),s.active.last=s.settings.startSlide===f()-1,s.settings.video&&o.fitVids(),("all"===s.settings.preloadImages||s.settings.ticker)&&(t=s.children),s.settings.ticker?s.settings.pager=!1:(s.settings.controls&&k(),s.settings.auto&&s.settings.autoControls&&C(),s.settings.pager&&w(),(s.settings.controls||s.settings.autoControls||s.settings.pager)&&s.viewport.after(s.controls.el)),c(t,g)},c=function(t,i){var n=t.find('img:not([src=""]), iframe').length,s=0;return 0===n?void i():void t.find('img:not([src=""]), iframe').each(function(){e(this).one("load error",function(){++s===n&&i()}).each(function(){this.complete&&e(this).trigger("load")})})},g=function(){if(s.settings.infiniteLoop&&"fade"!==s.settings.mode&&!s.settings.ticker){var t="vertical"===s.settings.mode?s.settings.minSlides:s.settings.maxSlides,i=s.children.slice(0,t).clone(!0).addClass("bx-clone"),n=s.children.slice(-t).clone(!0).addClass("bx-clone");s.settings.ariaHidden&&(i.attr("aria-hidden",!0),n.attr("aria-hidden",!0)),o.append(i).prepend(n)}s.loader.remove(),x(),"vertical"===s.settings.mode&&(s.settings.adaptiveHeight=!0),s.viewport.height(u()),o.redrawSlider(),s.settings.onSliderLoad.call(o,s.active.index),s.initialized=!0,s.settings.responsive&&e(window).bind("resize",V),s.settings.auto&&s.settings.autoStart&&(f()>1||s.settings.autoSlideForOnePage)&&A(),s.settings.ticker&&q(),s.settings.pager&&P(s.settings.startSlide),s.settings.controls&&z(),s.settings.touchEnabled&&!s.settings.ticker&&F(),s.settings.keyboardEnabled&&!s.settings.ticker&&e(document).keydown(L)},u=function(){var t=0,n=e();if("vertical"===s.settings.mode||s.settings.adaptiveHeight)if(s.carousel){var o=1===s.settings.moveSlides?s.active.index:s.active.index*m();for(n=s.children.eq(o),i=1;i<=s.settings.maxSlides-1;i++)n=o+i>=s.children.length?n.add(s.children.eq(i-1)):n.add(s.children.eq(o+i))}else n=s.children.eq(s.active.index);else n=s.children;return"vertical"===s.settings.mode?(n.each(function(i){t+=e(this).outerHeight()}),s.settings.slideMargin>0&&(t+=s.settings.slideMargin*(s.settings.minSlides-1))):t=Math.max.apply(Math,n.map(function(){return e(this).outerHeight(!1)}).get()),"border-box"===s.viewport.css("box-sizing")?t+=parseFloat(s.viewport.css("padding-top"))+parseFloat(s.viewport.css("padding-bottom"))+parseFloat(s.viewport.css("border-top-width"))+parseFloat(s.viewport.css("border-bottom-width")):"padding-box"===s.viewport.css("box-sizing")&&(t+=parseFloat(s.viewport.css("padding-top"))+parseFloat(s.viewport.css("padding-bottom"))),t},p=function(){var e="100%";return s.settings.slideWidth>0&&(e="horizontal"===s.settings.mode?s.settings.maxSlides*s.settings.slideWidth+(s.settings.maxSlides-1)*s.settings.slideMargin:s.settings.slideWidth),e},h=function(){var e=s.settings.slideWidth,t=s.viewport.width();if(0===s.settings.slideWidth||s.settings.slideWidth>t&&!s.carousel||"vertical"===s.settings.mode)e=t;else if(s.settings.maxSlides>1&&"horizontal"===s.settings.mode){if(t>s.maxThreshold)return e;t<s.minThreshold?e=(t-s.settings.slideMargin*(s.settings.minSlides-1))/s.settings.minSlides:s.settings.shrinkItems&&(e=Math.floor((t+s.settings.slideMargin)/Math.ceil((t+s.settings.slideMargin)/(e+s.settings.slideMargin))-s.settings.slideMargin))}return e},v=function(){var e=1,t=null;return"horizontal"===s.settings.mode&&s.settings.slideWidth>0?s.viewport.width()<s.minThreshold?e=s.settings.minSlides:s.viewport.width()>s.maxThreshold?e=s.settings.maxSlides:(t=s.children.first().width()+s.settings.slideMargin,e=Math.floor((s.viewport.width()+s.settings.slideMargin)/t)):"vertical"===s.settings.mode&&(e=s.settings.minSlides),e},f=function(){var e=0,t=0,i=0;if(s.settings.moveSlides>0)if(s.settings.infiniteLoop)e=Math.ceil(s.children.length/m());else for(;t<s.children.length;)++e,t=i+v(),i+=s.settings.moveSlides<=v()?s.settings.moveSlides:v();else e=Math.ceil(s.children.length/v());return e},m=function(){return s.settings.moveSlides>0&&s.settings.moveSlides<=v()?s.settings.moveSlides:v()},x=function(){var e,t,i;s.children.length>s.settings.maxSlides&&s.active.last&&!s.settings.infiniteLoop?"horizontal"===s.settings.mode?(t=s.children.last(),e=t.position(),b(-(e.left-(s.viewport.width()-t.outerWidth())),"reset",0)):"vertical"===s.settings.mode&&(i=s.children.length-s.settings.minSlides,e=s.children.eq(i).position(),b(-e.top,"reset",0)):(e=s.children.eq(s.active.index*m()).position(),s.active.index===f()-1&&(s.active.last=!0),void 0!==e&&("horizontal"===s.settings.mode?b(-e.left,"reset",0):"vertical"===s.settings.mode&&b(-e.top,"reset",0)))},b=function(t,i,n,r){var a,l;s.usingCSS?(l="vertical"===s.settings.mode?"translate3d(0, "+t+"px, 0)":"translate3d("+t+"px, 0, 0)",o.css("-"+s.cssPrefix+"-transition-duration",n/1e3+"s"),"slide"===i?(o.css(s.animProp,l),0!==n?o.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(t){e(t.target).is(o)&&(o.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),D())}):D()):"reset"===i?o.css(s.animProp,l):"ticker"===i&&(o.css("-"+s.cssPrefix+"-transition-timing-function","linear"),o.css(s.animProp,l),0!==n?o.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(t){e(t.target).is(o)&&(o.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),b(r.resetValue,"reset",0),H())}):(b(r.resetValue,"reset",0),H()))):(a={},a[s.animProp]=t,"slide"===i?o.animate(a,n,s.settings.easing,function(){D()}):"reset"===i?o.css(s.animProp,t):"ticker"===i&&o.animate(a,n,"linear",function(){b(r.resetValue,"reset",0),H()}))},S=function(){for(var t="",i="",n=f(),o=0;o<n;o++)i="",s.settings.buildPager&&e.isFunction(s.settings.buildPager)||s.settings.pagerCustom?(i=s.settings.buildPager(o),s.pagerEl.addClass("bx-custom-pager")):(i=o+1,s.pagerEl.addClass("bx-default-pager")),t+='<div class="bx-pager-item"><a href="" data-slide-index="'+o+'" class="bx-pager-link">'+i+"</a></div>";s.pagerEl.html(t)},w=function(){s.settings.pagerCustom?s.pagerEl=e(s.settings.pagerCustom):(s.pagerEl=e('<div class="bx-pager" />'),s.settings.pagerSelector?e(s.settings.pagerSelector).html(s.pagerEl):s.controls.el.addClass("bx-has-pager").append(s.pagerEl),S()),s.pagerEl.on("click touchend","a",T)},k=function(){s.controls.next=e('<a class="bx-next" href="">'+s.settings.nextText+"</a>"),s.controls.prev=e('<a class="bx-prev" href="">'+s.settings.prevText+"</a>"),s.controls.next.bind("click touchend",E),s.controls.prev.bind("click touchend",I),s.settings.nextSelector&&e(s.settings.nextSelector).append(s.controls.next),s.settings.prevSelector&&e(s.settings.prevSelector).append(s.controls.prev),s.settings.nextSelector||s.settings.prevSelector||(s.controls.directionEl=e('<div class="bx-controls-direction" />'),s.controls.directionEl.append(s.controls.prev).append(s.controls.next),s.controls.el.addClass("bx-has-controls-direction").append(s.controls.directionEl))},C=function(){s.controls.start=e('<div class="bx-controls-auto-item"><a class="bx-start" href="">'+s.settings.startText+"</a></div>"),s.controls.stop=e('<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+s.settings.stopText+"</a></div>"),s.controls.autoEl=e('<div class="bx-controls-auto" />'),s.controls.autoEl.on("click",".bx-start",M),s.controls.autoEl.on("click",".bx-stop",$),s.settings.autoControlsCombine?s.controls.autoEl.append(s.controls.start):s.controls.autoEl.append(s.controls.start).append(s.controls.stop),s.settings.autoControlsSelector?e(s.settings.autoControlsSelector).html(s.controls.autoEl):s.controls.el.addClass("bx-has-controls-auto").append(s.controls.autoEl),O(s.settings.autoStart?"stop":"start")},y=function(){s.children.each(function(t){var i=e(this).find("img:first").attr("title");void 0!==i&&(""+i).length&&e(this).append('<div class="bx-caption"><span>'+i+"</span></div>")})},E=function(e){e.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),o.goToNextSlide())},I=function(e){e.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),o.goToPrevSlide())},M=function(e){o.startAuto(),e.preventDefault()},$=function(e){o.stopAuto(),e.preventDefault()},T=function(t){var i,n;t.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),i=e(t.currentTarget),void 0!==i.attr("data-slide-index")&&(n=parseInt(i.attr("data-slide-index")),n!==s.active.index&&o.goToSlide(n)))},P=function(t){var i=s.children.length;return"short"===s.settings.pagerType?(s.settings.maxSlides>1&&(i=Math.ceil(s.children.length/s.settings.maxSlides)),void s.pagerEl.html(t+1+s.settings.pagerShortSeparator+i)):(s.pagerEl.find("a").removeClass("active"),void s.pagerEl.each(function(i,n){e(n).find("a").eq(t).addClass("active")}))},D=function(){if(s.settings.infiniteLoop){var e="";0===s.active.index?e=s.children.eq(0).position():s.active.index===f()-1&&s.carousel?e=s.children.eq((f()-1)*m()).position():s.active.index===s.children.length-1&&(e=s.children.eq(s.children.length-1).position()),e&&("horizontal"===s.settings.mode?b(-e.left,"reset",0):"vertical"===s.settings.mode&&b(-e.top,"reset",0))}s.working=!1,s.settings.onSlideAfter.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)},O=function(e){s.settings.autoControlsCombine?s.controls.autoEl.html(s.controls[e]):(s.controls.autoEl.find("a").removeClass("active"),s.controls.autoEl.find("a:not(.bx-"+e+")").addClass("active"))},z=function(){1===f()?(s.controls.prev.addClass("disabled"),s.controls.next.addClass("disabled")):!s.settings.infiniteLoop&&s.settings.hideControlOnEnd&&(0===s.active.index?(s.controls.prev.addClass("disabled"),s.controls.next.removeClass("disabled")):s.active.index===f()-1?(s.controls.next.addClass("disabled"),s.controls.prev.removeClass("disabled")):(s.controls.prev.removeClass("disabled"),s.controls.next.removeClass("disabled")))},A=function(){if(s.settings.autoDelay>0){setTimeout(o.startAuto,s.settings.autoDelay)}else o.startAuto(),e(window).focus(function(){o.startAuto()}).blur(function(){o.stopAuto()});s.settings.autoHover&&o.hover(function(){s.interval&&(o.stopAuto(!0),s.autoPaused=!0)},function(){s.autoPaused&&(o.startAuto(!0),s.autoPaused=null)})},q=function(){var t,i,n,r,a,l,d,c,g=0;"next"===s.settings.autoDirection?o.append(s.children.clone().addClass("bx-clone")):(o.prepend(s.children.clone().addClass("bx-clone")),t=s.children.first().position(),g="horizontal"===s.settings.mode?-t.left:-t.top),b(g,"reset",0),s.settings.pager=!1,s.settings.controls=!1,s.settings.autoControls=!1,s.settings.tickerHover&&(s.usingCSS?(r="horizontal"===s.settings.mode?4:5,s.viewport.hover(function(){i=o.css("-"+s.cssPrefix+"-transform"),n=parseFloat(i.split(",")[r]),b(n,"reset",0)},function(){c=0,s.children.each(function(t){c+="horizontal"===s.settings.mode?e(this).outerWidth(!0):e(this).outerHeight(!0)}),a=s.settings.speed/c,l="horizontal"===s.settings.mode?"left":"top",d=a*(c-Math.abs(parseInt(n))),H(d)})):s.viewport.hover(function(){o.stop()},function(){c=0,s.children.each(function(t){c+="horizontal"===s.settings.mode?e(this).outerWidth(!0):e(this).outerHeight(!0)}),a=s.settings.speed/c,l="horizontal"===s.settings.mode?"left":"top",d=a*(c-Math.abs(parseInt(o.css(l)))),H(d)})),H()},H=function(e){var t,i,n,r=e?e:s.settings.speed,a={left:0,top:0},l={left:0,top:0};"next"===s.settings.autoDirection?a=o.find(".bx-clone").first().position():l=s.children.first().position(),t="horizontal"===s.settings.mode?-a.left:-a.top,i="horizontal"===s.settings.mode?-l.left:-l.top,n={resetValue:i},b(t,"ticker",r,n)},W=function(t){var i=e(window),n={top:i.scrollTop(),left:i.scrollLeft()},s=t.offset();return n.right=n.left+i.width(),n.bottom=n.top+i.height(),s.right=s.left+t.outerWidth(),s.bottom=s.top+t.outerHeight(),!(n.right<s.left||n.left>s.right||n.bottom<s.top||n.top>s.bottom)},L=function(e){var t=document.activeElement.tagName.toLowerCase(),i="input|textarea",n=new RegExp(t,["i"]),s=n.exec(i);if(null==s&&W(o)){if(39===e.keyCode)return E(e),!1;if(37===e.keyCode)return I(e),!1}},F=function(){s.touch={start:{x:0,y:0},end:{x:0,y:0}},s.viewport.bind("touchstart MSPointerDown pointerdown",N),s.viewport.on("click",".bxslider a",function(e){s.viewport.hasClass("click-disabled")&&(e.preventDefault(),s.viewport.removeClass("click-disabled"))})},N=function(e){if(s.controls.el.addClass("disabled"),s.working)e.preventDefault(),s.controls.el.removeClass("disabled");else{s.touch.originalPos=o.position();var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t];s.touch.start.x=i[0].pageX,s.touch.start.y=i[0].pageY,s.viewport.get(0).setPointerCapture&&(s.pointerId=t.pointerId,s.viewport.get(0).setPointerCapture(s.pointerId)),s.viewport.bind("touchmove MSPointerMove pointermove",_),s.viewport.bind("touchend MSPointerUp pointerup",X),s.viewport.bind("MSPointerCancel pointercancel",Y)}},Y=function(e){b(s.touch.originalPos.left,"reset",0),s.controls.el.removeClass("disabled"),s.viewport.unbind("MSPointerCancel pointercancel",Y),s.viewport.unbind("touchmove MSPointerMove pointermove",_),s.viewport.unbind("touchend MSPointerUp pointerup",X),s.viewport.get(0).releasePointerCapture&&s.viewport.get(0).releasePointerCapture(s.pointerId)},_=function(e){var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t],n=Math.abs(i[0].pageX-s.touch.start.x),o=Math.abs(i[0].pageY-s.touch.start.y),r=0,a=0;3*n>o&&s.settings.preventDefaultSwipeX?e.preventDefault():3*o>n&&s.settings.preventDefaultSwipeY&&e.preventDefault(),"fade"!==s.settings.mode&&s.settings.oneToOneTouch&&("horizontal"===s.settings.mode?(a=i[0].pageX-s.touch.start.x,r=s.touch.originalPos.left+a):(a=i[0].pageY-s.touch.start.y,r=s.touch.originalPos.top+a),b(r,"reset",0))},X=function(e){s.viewport.unbind("touchmove MSPointerMove pointermove",_),s.controls.el.removeClass("disabled");var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t],n=0,r=0;s.touch.end.x=i[0].pageX,s.touch.end.y=i[0].pageY,"fade"===s.settings.mode?(r=Math.abs(s.touch.start.x-s.touch.end.x),r>=s.settings.swipeThreshold&&(s.touch.start.x>s.touch.end.x?o.goToNextSlide():o.goToPrevSlide(),o.stopAuto())):("horizontal"===s.settings.mode?(r=s.touch.end.x-s.touch.start.x,n=s.touch.originalPos.left):(r=s.touch.end.y-s.touch.start.y,n=s.touch.originalPos.top),!s.settings.infiniteLoop&&(0===s.active.index&&r>0||s.active.last&&r<0)?b(n,"reset",200):Math.abs(r)>=s.settings.swipeThreshold?(r<0?o.goToNextSlide():o.goToPrevSlide(),o.stopAuto()):b(n,"reset",200)),s.viewport.unbind("touchend MSPointerUp pointerup",X),s.viewport.get(0).releasePointerCapture&&s.viewport.get(0).releasePointerCapture(s.pointerId)},V=function(t){if(s.initialized)if(s.working)window.setTimeout(V,10);else{var i=e(window).width(),n=e(window).height();r===i&&a===n||(r=i,a=n,o.redrawSlider(),s.settings.onSliderResize.call(o,s.active.index))}},R=function(e){var t=v();s.settings.ariaHidden&&!s.settings.ticker&&(s.children.attr("aria-hidden","true"),s.children.slice(e,e+t).attr("aria-hidden","false"))},Z=function(e){return e<0?s.settings.infiniteLoop?f()-1:s.active.index:e>=f()?s.settings.infiniteLoop?0:s.active.index:e};return o.goToSlide=function(t,i){var n,r,a,l,d=!0,c=0,g={left:0,top:0},p=null;if(s.oldIndex=s.active.index,s.active.index=Z(t),!s.working&&s.active.index!==s.oldIndex){if(s.working=!0,d=s.settings.onSlideBefore.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index),"undefined"!=typeof d&&!d)return s.active.index=s.oldIndex,void(s.working=!1);"next"===i?s.settings.onSlideNext.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)||(d=!1):"prev"===i&&(s.settings.onSlidePrev.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)||(d=!1)),s.active.last=s.active.index>=f()-1,(s.settings.pager||s.settings.pagerCustom)&&P(s.active.index),s.settings.controls&&z(),"fade"===s.settings.mode?(s.settings.adaptiveHeight&&s.viewport.height()!==u()&&s.viewport.animate({height:u()},s.settings.adaptiveHeightSpeed),s.children.filter(":visible").fadeOut(s.settings.speed).css({zIndex:0}),s.children.eq(s.active.index).css("zIndex",s.settings.slideZIndex+1).fadeIn(s.settings.speed,function(){e(this).css("zIndex",s.settings.slideZIndex),D()})):(s.settings.adaptiveHeight&&s.viewport.height()!==u()&&s.viewport.animate({height:u()},s.settings.adaptiveHeightSpeed),!s.settings.infiniteLoop&&s.carousel&&s.active.last?"horizontal"===s.settings.mode?(p=s.children.eq(s.children.length-1),g=p.position(),c=s.viewport.width()-p.outerWidth()):(n=s.children.length-s.settings.minSlides,g=s.children.eq(n).position()):s.carousel&&s.active.last&&"prev"===i?(r=1===s.settings.moveSlides?s.settings.maxSlides-m():(f()-1)*m()-(s.children.length-s.settings.maxSlides),p=o.children(".bx-clone").eq(r),g=p.position()):"next"===i&&0===s.active.index?(g=o.find("> .bx-clone").eq(s.settings.maxSlides).position(),s.active.last=!1):t>=0&&(l=t*parseInt(m()),g=s.children.eq(l).position()),"undefined"!=typeof g?(a="horizontal"===s.settings.mode?-(g.left-c):-g.top,b(a,"slide",s.settings.speed)):s.working=!1),s.settings.ariaHidden&&R(s.active.index*m())}},o.goToNextSlide=function(){if(s.settings.infiniteLoop||!s.active.last){var e=parseInt(s.active.index)+1;o.goToSlide(e,"next")}},o.goToPrevSlide=function(){if(s.settings.infiniteLoop||0!==s.active.index){var e=parseInt(s.active.index)-1;o.goToSlide(e,"prev")}},o.startAuto=function(e){s.interval||(s.interval=setInterval(function(){"next"===s.settings.autoDirection?o.goToNextSlide():o.goToPrevSlide()},s.settings.pause),s.settings.autoControls&&e!==!0&&O("stop"))},o.stopAuto=function(e){s.interval&&(clearInterval(s.interval),s.interval=null,s.settings.autoControls&&e!==!0&&O("start"))},o.getCurrentSlide=function(){return s.active.index},o.getCurrentSlideElement=function(){return s.children.eq(s.active.index)},o.getSlideElement=function(e){return s.children.eq(e)},o.getSlideCount=function(){return s.children.length},o.isWorking=function(){return s.working},o.redrawSlider=function(){s.children.add(o.find(".bx-clone")).outerWidth(h()),s.viewport.css("height",u()),s.settings.ticker||x(),s.active.last&&(s.active.index=f()-1),s.active.index>=f()&&(s.active.last=!0),s.settings.pager&&!s.settings.pagerCustom&&(S(),P(s.active.index)),s.settings.ariaHidden&&R(s.active.index*m())},o.destroySlider=function(){s.initialized&&(s.initialized=!1,e(".bx-clone",this).remove(),s.children.each(function(){void 0!==e(this).data("origStyle")?e(this).attr("style",e(this).data("origStyle")):e(this).removeAttr("style")}),void 0!==e(this).data("origStyle")?this.attr("style",e(this).data("origStyle")):e(this).removeAttr("style"),e(this).unwrap().unwrap(),s.controls.el&&s.controls.el.remove(),s.controls.next&&s.controls.next.remove(),s.controls.prev&&s.controls.prev.remove(),s.pagerEl&&s.settings.controls&&!s.settings.pagerCustom&&s.pagerEl.remove(),e(".bx-caption",this).remove(),s.controls.autoEl&&s.controls.autoEl.remove(),clearInterval(s.interval),s.settings.responsive&&e(window).unbind("resize",V),s.settings.keyboardEnabled&&e(document).unbind("keydown",L),e(this).removeData("bxSlider"))},o.reloadSlider=function(t){void 0!==t&&(n=t),o.destroySlider(),l(),e(o).data("bxSlider",this)},l(),e(o).data("bxSlider",this),this}}}(jQuery),$(function(){var e=$(".sidebar"),t=$(".navbar__links"),i=$("#burger");$(".links__item");e.click(function(){t.toggleClass("--visible"),e.toggleClass("--on"),i.toggleClass("close").toggleClass("opened")}),$;var n=$("#show-pop-up"),s=$(".wpbtn-footer"),o=$(".cover"),r=$(".close-button"),a=$(".whitepapper"),l=$("#show-feedback"),d=$(".feedback-wrap"),c=$(".space-close"),g=$("#qr-wechat"),u=$("#link-wechat"),p=$(".feedback-ico");g.hide().click(function(){g.fadeToggle(600),p.delay(600).fadeToggle(400)}),u.click(function(e){e.preventDefault(),g.delay(400).fadeToggle(600),p.fadeToggle(400)}),l.click(function(e){e.preventDefault(),d.fadeToggle("400"),l.toggleClass("white"),c.toggle(400)}),c.click(function(){d.fadeOut(400),l.removeClass("white"),c.hide()}),n.click(function(e){e.preventDefault(),o.fadeIn(400),a.fadeIn(400)}),s.click(function(e){e.preventDefault(),o.fadeIn(400),a.fadeIn(400)}),r.click(function(){o.fadeOut(400),a.fadeOut(400)}),o.click(function(){o.fadeOut(400),a.fadeOut(400)});var h=$(".hexogon"),v=$(".line"),f=$("g.text"),m=$(".roadmap");v.hide(),f.hide(),h.click(function(){m.addClass("step1"),setTimeout(function(){m.addClass("step2")},1200),setTimeout(function(){v.fadeIn("1000"),f.delay(1e3).fadeIn("400")},2e3)});var x=($("a.lang"),$("#lang-us"),$("#lang-cn"),$("#lang-in"),$(".langswitch-wrap")),b=$(".langswitch"),S=$(".langswitch-carusel");x.click(function(){b.toggle(400),$(".links__item").toggleClass("hided")}),S.bxSlider({auto:!0,controls:!1,pause:2e3,pager:!1});var w=$(".pop-up-video"),k=$("#play-video-eng-btn"),C=$("#play-video-cn-btn");k.click(function(){w.append('<iframe id="video" src="https://www.youtube.com/embed/p1YiDKlSe8k?rel=0&autoplay=1" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'),w.fadeIn(700)}),C.click(function(){w.append('<video id="video" controls autoplay><source src="http://onplace.io/img/video/onplace-china-subtitle.mp4" type="video/mp4"/></video>'),w.fadeIn(700)}),$(".close-button-video").click(function(e){var t=$("#video"),i=$("#video-pop-up");e.preventDefault(),w.hide(700),i.remove(),t.remove()});var y={Empty:$("#picture-empty"),Edward:$("#picture-Edward"),Andrei:$("#picture-Andrei"),Dmitriy:$("#picture-Dmitriy"),Ilya:$("#picture-Ilya"),Mike:$("#picture-Mike"),Oleg:$("#picture-Oleg"),Michael:$("#picture-Michael"),Eugene:$("#picture-Eugene")},E={team:$("#team-description"),Edward:$("#Edward-description"),Andrei:$("#Andrei-description"),Dmitriy:$("#Dmitriy-description"),Ilya:$("#Ilya-description"),Mike:$("#Mike-description"),Oleg:$("#Oleg-description"),Michael:$("#Michael-description"),Eugene:$("#Eugene-description")},I={total:$(".backgrounds-item"),Edward:$("#Edward-background"),Andrei:$("#Andrei-background"),Mike:$("#Mike-background"),Dmitriy:$("#Dmitriy-background"),Ilya:$("#Ilya-background"),Oleg:$("#Oleg-background"),Michael:$("#Michael-background"),Eugene:$("#Eugene-background")},M=$(".member-picture"),T=$(".blue_polygons"),P=$(".team");E.team.show(),M.click(function(){T.fadeOut(800),P.addClass("white")}),y.Empty.click(function(e){e.preventDefault(),I.total.fadeOut(800),E.team.fadeIn(800).siblings().fadeOut(800),T.fadeIn(800),P.removeClass("white")}),y.Andrei.click(function(e){e.preventDefault(),I.Andrei.fadeIn(800).siblings().fadeOut(800),E.Andrei.fadeIn(800).siblings().fadeOut(800)}),y.Edward.click(function(e){e.preventDefault(),I.Edward.fadeIn(800).siblings().fadeOut(800),E.Edward.fadeIn(800).siblings().fadeOut(800)}),y.Dmitriy.click(function(e){e.preventDefault(),I.Dmitriy.fadeIn(800).siblings().fadeOut(800),E.Dmitriy.fadeIn(800).siblings().fadeOut(800)}),y.Ilya.click(function(e){e.preventDefault(),I.Ilya.fadeIn(800).siblings().fadeOut(800),E.Ilya.fadeIn(800).siblings().fadeOut(800)}),y.Mike.click(function(e){e.preventDefault(),I.Mike.fadeIn(800).siblings().fadeOut(800),E.Mike.fadeIn(800).siblings().fadeOut(800)}),y.Oleg.click(function(e){e.preventDefault(),I.Oleg.fadeIn(800).siblings().fadeOut(800),E.Oleg.fadeIn(800).siblings().fadeOut(800)}),y.Michael.click(function(e){e.preventDefault(),I.Michael.fadeIn(800).siblings().fadeOut(800),E.Michael.fadeIn(800).siblings().fadeOut(800)}),y.Eugene.click(function(e){e.preventDefault(),I.Eugene.fadeIn(800).siblings().fadeOut(800),E.Eugene.fadeIn(800).siblings().fadeOut(800)});var D=$(".disabled");D.click(function(e){e.preventDefault()}),$(window).scroll(function(){var e=$(this).scrollTop();I.total.css({transform:"translate(0px, -"+e/3+"px)"})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRlZmF1bHRzIiwibW9kZSIsInNsaWRlU2VsZWN0b3IiLCJpbmZpbml0ZUxvb3AiLCJoaWRlQ29udHJvbE9uRW5kIiwic3BlZWQiLCJlYXNpbmciLCJzbGlkZU1hcmdpbiIsInN0YXJ0U2xpZGUiLCJyYW5kb21TdGFydCIsImNhcHRpb25zIiwidGlja2VyIiwidGlja2VySG92ZXIiLCJhZGFwdGl2ZUhlaWdodCIsImFkYXB0aXZlSGVpZ2h0U3BlZWQiLCJ2aWRlbyIsInVzZUNTUyIsInByZWxvYWRJbWFnZXMiLCJyZXNwb25zaXZlIiwic2xpZGVaSW5kZXgiLCJ3cmFwcGVyQ2xhc3MiLCJ0b3VjaEVuYWJsZWQiLCJzd2lwZVRocmVzaG9sZCIsIm9uZVRvT25lVG91Y2giLCJwcmV2ZW50RGVmYXVsdFN3aXBlWCIsInByZXZlbnREZWZhdWx0U3dpcGVZIiwiYXJpYUxpdmUiLCJhcmlhSGlkZGVuIiwia2V5Ym9hcmRFbmFibGVkIiwicGFnZXIiLCJwYWdlclR5cGUiLCJwYWdlclNob3J0U2VwYXJhdG9yIiwicGFnZXJTZWxlY3RvciIsImJ1aWxkUGFnZXIiLCJwYWdlckN1c3RvbSIsImNvbnRyb2xzIiwibmV4dFRleHQiLCJwcmV2VGV4dCIsIm5leHRTZWxlY3RvciIsInByZXZTZWxlY3RvciIsImF1dG9Db250cm9scyIsInN0YXJ0VGV4dCIsInN0b3BUZXh0IiwiYXV0b0NvbnRyb2xzQ29tYmluZSIsImF1dG9Db250cm9sc1NlbGVjdG9yIiwiYXV0byIsInBhdXNlIiwiYXV0b1N0YXJ0IiwiYXV0b0RpcmVjdGlvbiIsInN0b3BBdXRvT25DbGljayIsImF1dG9Ib3ZlciIsImF1dG9EZWxheSIsImF1dG9TbGlkZUZvck9uZVBhZ2UiLCJtaW5TbGlkZXMiLCJtYXhTbGlkZXMiLCJtb3ZlU2xpZGVzIiwic2xpZGVXaWR0aCIsInNocmlua0l0ZW1zIiwib25TbGlkZXJMb2FkIiwib25TbGlkZUJlZm9yZSIsIm9uU2xpZGVBZnRlciIsIm9uU2xpZGVOZXh0Iiwib25TbGlkZVByZXYiLCJvblNsaWRlclJlc2l6ZSIsImZuIiwiYnhTbGlkZXIiLCJvcHRpb25zIiwidGhpcyIsImxlbmd0aCIsImVhY2giLCJzbGlkZXIiLCJlbCIsIndpbmRvd1dpZHRoIiwid2luZG93Iiwid2lkdGgiLCJ3aW5kb3dIZWlnaHQiLCJoZWlnaHQiLCJkYXRhIiwiaW5pdCIsInNldHRpbmdzIiwiZXh0ZW5kIiwicGFyc2VJbnQiLCJjaGlsZHJlbiIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImFjdGl2ZSIsImluZGV4IiwiY2Fyb3VzZWwiLCJtaW5UaHJlc2hvbGQiLCJtYXhUaHJlc2hvbGQiLCJ3b3JraW5nIiwiaW50ZXJ2YWwiLCJhbmltUHJvcCIsInVzaW5nQ1NTIiwiZGl2IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicHJvcHMiLCJpIiwidW5kZWZpbmVkIiwic3R5bGUiLCJjc3NQcmVmaXgiLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJhdHRyIiwic2V0dXAiLCJwcmVsb2FkU2VsZWN0b3IiLCJlcSIsIndyYXAiLCJ2aWV3cG9ydCIsInBhcmVudCIsImxvYWRlciIsInByZXBlbmQiLCJjc3MiLCJwb3NpdGlvbiIsIm92ZXJmbG93IiwibWF4V2lkdGgiLCJnZXRWaWV3cG9ydE1heFdpZHRoIiwiZmxvYXQiLCJsaXN0U3R5bGUiLCJnZXRTbGlkZVdpZHRoIiwiekluZGV4IiwiZGlzcGxheSIsImFwcGVuZENhcHRpb25zIiwibGFzdCIsImdldFBhZ2VyUXR5IiwiZml0VmlkcyIsImFwcGVuZENvbnRyb2xzIiwiYXBwZW5kQ29udHJvbHNBdXRvIiwiYXBwZW5kUGFnZXIiLCJhZnRlciIsImxvYWRFbGVtZW50cyIsInN0YXJ0Iiwic2VsZWN0b3IiLCJjYWxsYmFjayIsInRvdGFsIiwiZmluZCIsImNvdW50Iiwib25lIiwiY29tcGxldGUiLCJ0cmlnZ2VyIiwic2xpY2UiLCJzbGljZUFwcGVuZCIsImNsb25lIiwiYWRkQ2xhc3MiLCJzbGljZVByZXBlbmQiLCJhcHBlbmQiLCJyZW1vdmUiLCJzZXRTbGlkZVBvc2l0aW9uIiwiZ2V0Vmlld3BvcnRIZWlnaHQiLCJyZWRyYXdTbGlkZXIiLCJjYWxsIiwiaW5pdGlhbGl6ZWQiLCJiaW5kIiwicmVzaXplV2luZG93IiwiaW5pdEF1dG8iLCJpbml0VGlja2VyIiwidXBkYXRlUGFnZXJBY3RpdmUiLCJ1cGRhdGVEaXJlY3Rpb25Db250cm9scyIsImluaXRUb3VjaCIsImtleWRvd24iLCJrZXlQcmVzcyIsImN1cnJlbnRJbmRleCIsImdldE1vdmVCeSIsImFkZCIsIm91dGVySGVpZ2h0IiwibWF4IiwiYXBwbHkiLCJtYXAiLCJnZXQiLCJwYXJzZUZsb2F0IiwibmV3RWxXaWR0aCIsIndyYXBXaWR0aCIsImNlaWwiLCJnZXROdW1iZXJTbGlkZXNTaG93aW5nIiwic2xpZGVzU2hvd2luZyIsImNoaWxkV2lkdGgiLCJmaXJzdCIsInBhZ2VyUXR5IiwiYnJlYWtQb2ludCIsImNvdW50ZXIiLCJsYXN0Q2hpbGQiLCJsYXN0U2hvd2luZ0luZGV4Iiwic2V0UG9zaXRpb25Qcm9wZXJ0eSIsImxlZnQiLCJvdXRlcldpZHRoIiwidG9wIiwidmFsdWUiLCJ0eXBlIiwiZHVyYXRpb24iLCJwYXJhbXMiLCJhbmltYXRlT2JqIiwicHJvcFZhbHVlIiwiZSIsInRhcmdldCIsImlzIiwidW5iaW5kIiwidXBkYXRlQWZ0ZXJTbGlkZVRyYW5zaXRpb24iLCJyZXNldFZhbHVlIiwidGlja2VyTG9vcCIsImFuaW1hdGUiLCJwb3B1bGF0ZVBhZ2VyIiwicGFnZXJIdG1sIiwibGlua0NvbnRlbnQiLCJpc0Z1bmN0aW9uIiwicGFnZXJFbCIsImh0bWwiLCJvbiIsImNsaWNrUGFnZXJCaW5kIiwibmV4dCIsInByZXYiLCJjbGlja05leHRCaW5kIiwiY2xpY2tQcmV2QmluZCIsImRpcmVjdGlvbkVsIiwic3RvcCIsImF1dG9FbCIsImNsaWNrU3RhcnRCaW5kIiwiY2xpY2tTdG9wQmluZCIsInVwZGF0ZUF1dG9Db250cm9scyIsInRpdGxlIiwicHJldmVudERlZmF1bHQiLCJoYXNDbGFzcyIsInN0b3BBdXRvIiwiZ29Ub05leHRTbGlkZSIsImdvVG9QcmV2U2xpZGUiLCJzdGFydEF1dG8iLCJwYWdlckxpbmsiLCJwYWdlckluZGV4IiwiY3VycmVudFRhcmdldCIsImdvVG9TbGlkZSIsInNsaWRlSW5kZXgiLCJsZW4iLCJyZW1vdmVDbGFzcyIsIm9sZEluZGV4Iiwic3RhdGUiLCJzZXRUaW1lb3V0IiwiZm9jdXMiLCJibHVyIiwiaG92ZXIiLCJhdXRvUGF1c2VkIiwidHJhbnNmb3JtIiwiaWR4IiwicmF0aW8iLCJwcm9wZXJ0eSIsIm5ld1NwZWVkIiwidG90YWxEaW1lbnMiLCJzdGFydFBvc2l0aW9uIiwic3BsaXQiLCJhYnMiLCJyZXN1bWVTcGVlZCIsImFuaW1hdGVQcm9wZXJ0eSIsInJlc2V0IiwiaXNPblNjcmVlbiIsIndpbiIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJib3VuZHMiLCJvZmZzZXQiLCJyaWdodCIsImJvdHRvbSIsImFjdGl2ZUVsZW1lbnRUYWciLCJhY3RpdmVFbGVtZW50IiwidGFnTmFtZSIsInRhZ0ZpbHRlcnMiLCJwIiwiUmVnRXhwIiwicmVzdWx0IiwiZXhlYyIsImtleUNvZGUiLCJ0b3VjaCIsIngiLCJ5IiwiZW5kIiwib25Ub3VjaFN0YXJ0Iiwib3JpZ2luYWxQb3MiLCJvcmlnIiwib3JpZ2luYWxFdmVudCIsInRvdWNoUG9pbnRzIiwiY2hhbmdlZFRvdWNoZXMiLCJwYWdlWCIsInBhZ2VZIiwic2V0UG9pbnRlckNhcHR1cmUiLCJwb2ludGVySWQiLCJvblRvdWNoTW92ZSIsIm9uVG91Y2hFbmQiLCJvblBvaW50ZXJDYW5jZWwiLCJyZWxlYXNlUG9pbnRlckNhcHR1cmUiLCJ4TW92ZW1lbnQiLCJ5TW92ZW1lbnQiLCJjaGFuZ2UiLCJkaXN0YW5jZSIsIndpbmRvd1dpZHRoTmV3Iiwid2luZG93SGVpZ2h0TmV3IiwiYXBwbHlBcmlhSGlkZGVuQXR0cmlidXRlcyIsInN0YXJ0VmlzaWJsZUluZGV4IiwibnVtYmVyT2ZTbGlkZXNTaG93aW5nIiwic2V0U2xpZGVJbmRleCIsImRpcmVjdGlvbiIsInJlcXVlc3RFbCIsInBlcmZvcm1UcmFuc2l0aW9uIiwibW92ZUJ5IiwiZmlsdGVyIiwiZmFkZU91dCIsImZhZGVJbiIsInByZXZlbnRDb250cm9sVXBkYXRlIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiZ2V0Q3VycmVudFNsaWRlIiwiZ2V0Q3VycmVudFNsaWRlRWxlbWVudCIsImdldFNsaWRlRWxlbWVudCIsImdldFNsaWRlQ291bnQiLCJpc1dvcmtpbmciLCJkZXN0cm95U2xpZGVyIiwicmVtb3ZlQXR0ciIsInVud3JhcCIsInJlbW92ZURhdGEiLCJyZWxvYWRTbGlkZXIiLCJqUXVlcnkiLCIkc2lkZWJhciIsIiRuYXZiYXIiLCIkYnVyZ2VyIiwiY2xpY2siLCJ0b2dnbGVDbGFzcyIsIiR3aGl0ZVBhcHBlciIsIiR3aGl0ZVBhcHBlckJ0biIsIiRvdmVybGF5IiwiJGNsb3NlQnRuIiwiJHBvcFVwV2hpdGVwYXBwZXIiLCIkZmVlZGJhY2siLCIkcG9wVXBGZWVkYmFjayIsIiRjbG9zZVNwYWNlIiwiJHFyV2VDaGF0IiwiJGxpbmtXZUNoYXQiLCIkZmVlZGJhY2tMaW5rcyIsImhpZGUiLCJmYWRlVG9nZ2xlIiwiZGVsYXkiLCJ0b2dnbGUiLCJldmVudCIsIiRoZXhhZ29uZSIsIiRsaW5lQ29ubmVjdCIsIiR0ZXh0UG9pbnRzIiwiJHJvYWRtYXAiLCIkbGFuZ0J0biIsIiRsYW5nU3dpdGNoIiwiJGxhbmdTd2l0Y2hDYXJ1c2VsIiwiJHBvcFVwVmlkZW9Db250YWluZXIiLCIkcG9wVXBWaWRlb0J0biIsIiRwb3BVcFZpZGVvQ25CdG4iLCIkdmlkZW8iLCIkdmlkZW9TY3JlZW4iLCJwaWN0dXJlcyIsIkVtcHR5IiwiRWR3YXJkIiwiQW5kcmVpIiwiRG1pdHJpeSIsIklseWEiLCJNaWtlIiwiT2xlZyIsIk1pY2hhZWwiLCJFdWdlbmUiLCJkZXNjcmlwdGlvbiIsInRlYW0iLCJiYWNrZ3JvdW5kcyIsImhleG9saW5rcyIsImJsdWVoZXhlcyIsInRlYW1TZWN0aW9uIiwic2hvdyIsInNpYmxpbmdzIiwiZGlzYWJsZWRMaW5rIiwic2Nyb2xsIiwic3QiXSwibWFwcGluZ3MiOiJDQUFDLFNBQVVBLEdBRVQsR0FBSUMsSUFHRkMsS0FBTSxhQUNOQyxjQUFlLEdBQ2ZDLGNBQWMsRUFDZEMsa0JBQWtCLEVBQ2xCQyxNQUFPLElBQ1BDLE9BQVEsS0FDUkMsWUFBYSxFQUNiQyxXQUFZLEVBQ1pDLGFBQWEsRUFDYkMsVUFBVSxFQUNWQyxRQUFRLEVBQ1JDLGFBQWEsRUFDYkMsZ0JBQWdCLEVBQ2hCQyxvQkFBcUIsSUFDckJDLE9BQU8sRUFDUEMsUUFBUSxFQUNSQyxjQUFlLFVBQ2ZDLFlBQVksRUFDWkMsWUFBYSxHQUNiQyxhQUFjLGFBR2RDLGNBQWMsRUFDZEMsZUFBZ0IsR0FDaEJDLGVBQWUsRUFDZkMsc0JBQXNCLEVBQ3RCQyxzQkFBc0IsRUFHdEJDLFVBQVUsRUFDVkMsWUFBWSxFQUdaQyxpQkFBaUIsRUFHakJDLE9BQU8sRUFDUEMsVUFBVyxPQUNYQyxvQkFBcUIsTUFDckJDLGNBQWUsS0FDZkMsV0FBWSxLQUNaQyxZQUFhLEtBR2JDLFVBQVUsRUFDVkMsU0FBVSxPQUNWQyxTQUFVLE9BQ1ZDLGFBQWMsS0FDZEMsYUFBYyxLQUNkQyxjQUFjLEVBQ2RDLFVBQVcsUUFDWEMsU0FBVSxPQUNWQyxxQkFBcUIsRUFDckJDLHFCQUFzQixLQUd0QkMsTUFBTSxFQUNOQyxNQUFPLElBQ1BDLFdBQVcsRUFDWEMsY0FBZSxPQUNmQyxpQkFBaUIsRUFDakJDLFdBQVcsRUFDWEMsVUFBVyxFQUNYQyxxQkFBcUIsRUFHckJDLFVBQVcsRUFDWEMsVUFBVyxFQUNYQyxXQUFZLEVBQ1pDLFdBQVksRUFDWkMsYUFBYSxFQUdiQyxhQUFjLFdBQWEsT0FBTyxHQUNsQ0MsY0FBZSxXQUFhLE9BQU8sR0FDbkNDLGFBQWMsV0FBYSxPQUFPLEdBQ2xDQyxZQUFhLFdBQWEsT0FBTyxHQUNqQ0MsWUFBYSxXQUFhLE9BQU8sR0FDakNDLGVB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QUtpRSxXQUFXbEUsUUFBUSxPQUVsRGlELEVBQVNRLFFBQVF0QyxNQUFNLFNBQVNoSSxHQUM5QkEsRUFBRTJCLGlCQUNGK0ksRUFBWUosUUFBUXhELE9BQU8sS0FBS2lFLFdBQVdsRSxRQUFRLEtBQ25EMkQsRUFBWUYsUUFBUXhELE9BQU8sS0FBS2lFLFdBQVdsRSxRQUFRLE9BRXJEaUQsRUFBU1MsT0FBT3ZDLE1BQU0sU0FBU2hJLEdBQzdCQSxFQUFFMkIsaUJBQ0YrSSxFQUFZSCxPQUFPekQsT0FBTyxLQUFLaUUsV0FBV2xFLFFBQVEsS0FDbEQyRCxFQUFZRCxPQUFPekQsT0FBTyxLQUFLaUUsV0FBV2xFLFFBQVEsTUFHcEQsSUFBSW1FLEdBQWVuWCxFQUFFLFlBRXJCbVgsR0FBYWhELE1BQU0sU0FBU2lCLEdBQzFCQSxFQUFNdEgsbUJBTVI5TixFQUFFMEUsUUFBUTBTLE9BQU8sV0FDZixHQUFJQyxHQUFLclgsRUFBRW9FLE1BQU00TCxXQUVqQjZHLEdBQVlwTyxNQUFNdEIsS0FBTStILFVBQVcsbUJBQXFCbUksRUFBRyxFQUFHIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uKCQpIHtcclxuXHJcbiAgdmFyIGRlZmF1bHRzID0ge1xyXG5cclxuICAgIC8vIEdFTkVSQUxcclxuICAgIG1vZGU6ICdob3Jpem9udGFsJyxcclxuICAgIHNsaWRlU2VsZWN0b3I6ICcnLFxyXG4gICAgaW5maW5pdGVMb29wOiB0cnVlLFxyXG4gICAgaGlkZUNvbnRyb2xPbkVuZDogZmFsc2UsXHJcbiAgICBzcGVlZDogNTAwLFxyXG4gICAgZWFzaW5nOiBudWxsLFxyXG4gICAgc2xpZGVNYXJnaW46IDAsXHJcbiAgICBzdGFydFNsaWRlOiAwLFxyXG4gICAgcmFuZG9tU3RhcnQ6IGZhbHNlLFxyXG4gICAgY2FwdGlvbnM6IGZhbHNlLFxyXG4gICAgdGlja2VyOiBmYWxzZSxcclxuICAgIHRpY2tlckhvdmVyOiBmYWxzZSxcclxuICAgIGFkYXB0aXZlSGVpZ2h0OiBmYWxzZSxcclxuICAgIGFkYXB0aXZlSGVpZ2h0U3BlZWQ6IDUwMCxcclxuICAgIHZpZGVvOiBmYWxzZSxcclxuICAgIHVzZUNTUzogdHJ1ZSxcclxuICAgIHByZWxvYWRJbWFnZXM6ICd2aXNpYmxlJyxcclxuICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICBzbGlkZVpJbmRleDogNTAsXHJcbiAgICB3cmFwcGVyQ2xhc3M6ICdieC13cmFwcGVyJyxcclxuXHJcbiAgICAvLyBUT1VDSFxyXG4gICAgdG91Y2hFbmFibGVkOiB0cnVlLFxyXG4gICAgc3dpcGVUaHJlc2hvbGQ6IDUwLFxyXG4gICAgb25lVG9PbmVUb3VjaDogdHJ1ZSxcclxuICAgIHByZXZlbnREZWZhdWx0U3dpcGVYOiB0cnVlLFxyXG4gICAgcHJldmVudERlZmF1bHRTd2lwZVk6IGZhbHNlLFxyXG5cclxuICAgIC8vIEFDQ0VTU0lCSUxJVFlcclxuICAgIGFyaWFMaXZlOiB0cnVlLFxyXG4gICAgYXJpYUhpZGRlbjogdHJ1ZSxcclxuXHJcbiAgICAvLyBLRVlCT0FSRFxyXG4gICAga2V5Ym9hcmRFbmFibGVkOiBmYWxzZSxcclxuXHJcbiAgICAvLyBQQUdFUlxyXG4gICAgcGFnZXI6IHRydWUsXHJcbiAgICBwYWdlclR5cGU6ICdmdWxsJyxcclxuICAgIHBhZ2VyU2hvcnRTZXBhcmF0b3I6ICcgLyAnLFxyXG4gICAgcGFnZXJTZWxlY3RvcjogbnVsbCxcclxuICAgIGJ1aWxkUGFnZXI6IG51bGwsXHJcbiAgICBwYWdlckN1c3RvbTogbnVsbCxcclxuXHJcbiAgICAvLyBDT05UUk9MU1xyXG4gICAgY29udHJvbHM6IHRydWUsXHJcbiAgICBuZXh0VGV4dDogJ05leHQnLFxyXG4gICAgcHJldlRleHQ6ICdQcmV2JyxcclxuICAgIG5leHRTZWxlY3RvcjogbnVsbCxcclxuICAgIHByZXZTZWxlY3RvcjogbnVsbCxcclxuICAgIGF1dG9Db250cm9sczogZmFsc2UsXHJcbiAgICBzdGFydFRleHQ6ICdTdGFydCcsXHJcbiAgICBzdG9wVGV4dDogJ1N0b3AnLFxyXG4gICAgYXV0b0NvbnRyb2xzQ29tYmluZTogZmFsc2UsXHJcbiAgICBhdXRvQ29udHJvbHNTZWxlY3RvcjogbnVsbCxcclxuXHJcbiAgICAvLyBBVVRPXHJcbiAgICBhdXRvOiBmYWxzZSxcclxuICAgIHBhdXNlOiA0MDAwLFxyXG4gICAgYXV0b1N0YXJ0OiB0cnVlLFxyXG4gICAgYXV0b0RpcmVjdGlvbjogJ25leHQnLFxyXG4gICAgc3RvcEF1dG9PbkNsaWNrOiBmYWxzZSxcclxuICAgIGF1dG9Ib3ZlcjogZmFsc2UsXHJcbiAgICBhdXRvRGVsYXk6IDAsXHJcbiAgICBhdXRvU2xpZGVGb3JPbmVQYWdlOiBmYWxzZSxcclxuXHJcbiAgICAvLyBDQVJPVVNFTFxyXG4gICAgbWluU2xpZGVzOiAxLFxyXG4gICAgbWF4U2xpZGVzOiAxLFxyXG4gICAgbW92ZVNsaWRlczogMCxcclxuICAgIHNsaWRlV2lkdGg6IDAsXHJcbiAgICBzaHJpbmtJdGVtczogZmFsc2UsXHJcblxyXG4gICAgLy8gQ0FMTEJBQ0tTXHJcbiAgICBvblNsaWRlckxvYWQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcclxuICAgIG9uU2xpZGVCZWZvcmU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcclxuICAgIG9uU2xpZGVBZnRlcjogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxyXG4gICAgb25TbGlkZU5leHQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcclxuICAgIG9uU2xpZGVQcmV2OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXHJcbiAgICBvblNsaWRlclJlc2l6ZTogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9XHJcbiAgfTtcclxuXHJcbiAgJC5mbi5ieFNsaWRlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcclxuXHJcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gc3VwcG9ydCBtdWx0aXBsZSBlbGVtZW50c1xyXG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMSkge1xyXG4gICAgICB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCh0aGlzKS5ieFNsaWRlcihvcHRpb25zKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGNyZWF0ZSBhIG5hbWVzcGFjZSB0byBiZSB1c2VkIHRocm91Z2hvdXQgdGhlIHBsdWdpblxyXG4gICAgdmFyIHNsaWRlciA9IHt9LFxyXG4gICAgLy8gc2V0IGEgcmVmZXJlbmNlIHRvIG91ciBzbGlkZXIgZWxlbWVudFxyXG4gICAgZWwgPSB0aGlzLFxyXG4gICAgLy8gZ2V0IHRoZSBvcmlnaW5hbCB3aW5kb3cgZGltZW5zICh0aGFua3MgYSBsb3QgSUUpXHJcbiAgICB3aW5kb3dXaWR0aCA9ICQod2luZG93KS53aWR0aCgpLFxyXG4gICAgd2luZG93SGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpO1xyXG5cclxuICAgIC8vIFJldHVybiBpZiBzbGlkZXIgaXMgYWxyZWFkeSBpbml0aWFsaXplZFxyXG4gICAgaWYgKCQoZWwpLmRhdGEoJ2J4U2xpZGVyJykpIHsgcmV0dXJuOyB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgICogPSBQUklWQVRFIEZVTkNUSU9OU1xyXG4gICAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgICAqL1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogSW5pdGlhbGl6ZXMgbmFtZXNwYWNlIHNldHRpbmdzIHRvIGJlIHVzZWQgdGhyb3VnaG91dCBwbHVnaW5cclxuICAgICAqL1xyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgLy8gUmV0dXJuIGlmIHNsaWRlciBpcyBhbHJlYWR5IGluaXRpYWxpemVkXHJcbiAgICAgIGlmICgkKGVsKS5kYXRhKCdieFNsaWRlcicpKSB7IHJldHVybjsgfVxyXG4gICAgICAvLyBtZXJnZSB1c2VyLXN1cHBsaWVkIG9wdGlvbnMgd2l0aCB0aGUgZGVmYXVsdHNcclxuICAgICAgc2xpZGVyLnNldHRpbmdzID0gJC5leHRlbmQoe30sIGRlZmF1bHRzLCBvcHRpb25zKTtcclxuICAgICAgLy8gcGFyc2Ugc2xpZGVXaWR0aCBzZXR0aW5nXHJcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoID0gcGFyc2VJbnQoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGgpO1xyXG4gICAgICAvLyBzdG9yZSB0aGUgb3JpZ2luYWwgY2hpbGRyZW5cclxuICAgICAgc2xpZGVyLmNoaWxkcmVuID0gZWwuY2hpbGRyZW4oc2xpZGVyLnNldHRpbmdzLnNsaWRlU2VsZWN0b3IpO1xyXG4gICAgICAvLyBjaGVjayBpZiBhY3R1YWwgbnVtYmVyIG9mIHNsaWRlcyBpcyBsZXNzIHRoYW4gbWluU2xpZGVzIC8gbWF4U2xpZGVzXHJcbiAgICAgIGlmIChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIDwgc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcykgeyBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzID0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aDsgfVxyXG4gICAgICBpZiAoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCA8IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpIHsgc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7IH1cclxuICAgICAgLy8gaWYgcmFuZG9tIHN0YXJ0LCBzZXQgdGhlIHN0YXJ0U2xpZGUgc2V0dGluZyB0byByYW5kb20gbnVtYmVyXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucmFuZG9tU3RhcnQpIHsgc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoKTsgfVxyXG4gICAgICAvLyBzdG9yZSBhY3RpdmUgc2xpZGUgaW5mb3JtYXRpb25cclxuICAgICAgc2xpZGVyLmFjdGl2ZSA9IHsgaW5kZXg6IHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlIH07XHJcbiAgICAgIC8vIHN0b3JlIGlmIHRoZSBzbGlkZXIgaXMgaW4gY2Fyb3VzZWwgbW9kZSAoZGlzcGxheWluZyAvIG1vdmluZyBtdWx0aXBsZSBzbGlkZXMpXHJcbiAgICAgIHNsaWRlci5jYXJvdXNlbCA9IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgPiAxIHx8IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgPiAxID8gdHJ1ZSA6IGZhbHNlO1xyXG4gICAgICAvLyBpZiBjYXJvdXNlbCwgZm9yY2UgcHJlbG9hZEltYWdlcyA9ICdhbGwnXHJcbiAgICAgIGlmIChzbGlkZXIuY2Fyb3VzZWwpIHsgc2xpZGVyLnNldHRpbmdzLnByZWxvYWRJbWFnZXMgPSAnYWxsJzsgfVxyXG4gICAgICAvLyBjYWxjdWxhdGUgdGhlIG1pbiAvIG1heCB3aWR0aCB0aHJlc2hvbGRzIGJhc2VkIG9uIG1pbiAvIG1heCBudW1iZXIgb2Ygc2xpZGVzXHJcbiAgICAgIC8vIHVzZWQgdG8gc2V0dXAgYW5kIHVwZGF0ZSBjYXJvdXNlbCBzbGlkZXMgZGltZW5zaW9uc1xyXG4gICAgICBzbGlkZXIubWluVGhyZXNob2xkID0gKHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgKiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCkgKyAoKHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgLSAxKSAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7XHJcbiAgICAgIHNsaWRlci5tYXhUaHJlc2hvbGQgPSAoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoKSArICgoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAtIDEpICogc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTtcclxuICAgICAgLy8gc3RvcmUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHNsaWRlciAoaWYgY3VycmVudGx5IGFuaW1hdGluZywgd29ya2luZyBpcyB0cnVlKVxyXG4gICAgICBzbGlkZXIud29ya2luZyA9IGZhbHNlO1xyXG4gICAgICAvLyBpbml0aWFsaXplIHRoZSBjb250cm9scyBvYmplY3RcclxuICAgICAgc2xpZGVyLmNvbnRyb2xzID0ge307XHJcbiAgICAgIC8vIGluaXRpYWxpemUgYW4gYXV0byBpbnRlcnZhbFxyXG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgICAvLyBkZXRlcm1pbmUgd2hpY2ggcHJvcGVydHkgdG8gdXNlIGZvciB0cmFuc2l0aW9uc1xyXG4gICAgICBzbGlkZXIuYW5pbVByb3AgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJyA/ICd0b3AnIDogJ2xlZnQnO1xyXG4gICAgICAvLyBkZXRlcm1pbmUgaWYgaGFyZHdhcmUgYWNjZWxlcmF0aW9uIGNhbiBiZSB1c2VkXHJcbiAgICAgIHNsaWRlci51c2luZ0NTUyA9IHNsaWRlci5zZXR0aW5ncy51c2VDU1MgJiYgc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICdmYWRlJyAmJiAoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gY3JlYXRlIG91ciB0ZXN0IGRpdiBlbGVtZW50XHJcbiAgICAgICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxyXG4gICAgICAgIC8vIGNzcyB0cmFuc2l0aW9uIHByb3BlcnRpZXNcclxuICAgICAgICBwcm9wcyA9IFsnV2Via2l0UGVyc3BlY3RpdmUnLCAnTW96UGVyc3BlY3RpdmUnLCAnT1BlcnNwZWN0aXZlJywgJ21zUGVyc3BlY3RpdmUnXTtcclxuICAgICAgICAvLyB0ZXN0IGZvciBlYWNoIHByb3BlcnR5XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgaWYgKGRpdi5zdHlsZVtwcm9wc1tpXV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBzbGlkZXIuY3NzUHJlZml4ID0gcHJvcHNbaV0ucmVwbGFjZSgnUGVyc3BlY3RpdmUnLCAnJykudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICAgICAgc2xpZGVyLmFuaW1Qcm9wID0gJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNmb3JtJztcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfSgpKTtcclxuICAgICAgLy8gaWYgdmVydGljYWwgbW9kZSBhbHdheXMgbWFrZSBtYXhTbGlkZXMgYW5kIG1pblNsaWRlcyBlcXVhbFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHsgc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA9IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7IH1cclxuICAgICAgLy8gc2F2ZSBvcmlnaW5hbCBzdHlsZSBkYXRhXHJcbiAgICAgIGVsLmRhdGEoJ29yaWdTdHlsZScsIGVsLmF0dHIoJ3N0eWxlJykpO1xyXG4gICAgICBlbC5jaGlsZHJlbihzbGlkZXIuc2V0dGluZ3Muc2xpZGVTZWxlY3RvcikuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScsICQodGhpcykuYXR0cignc3R5bGUnKSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gcGVyZm9ybSBhbGwgRE9NIC8gQ1NTIG1vZGlmaWNhdGlvbnNcclxuICAgICAgc2V0dXAoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtcyBhbGwgRE9NIGFuZCBDU1MgbW9kaWZpY2F0aW9uc1xyXG4gICAgICovXHJcbiAgICB2YXIgc2V0dXAgPSBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIHByZWxvYWRTZWxlY3RvciA9IHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuc2V0dGluZ3Muc3RhcnRTbGlkZSk7IC8vIHNldCB0aGUgZGVmYXVsdCBwcmVsb2FkIHNlbGVjdG9yICh2aXNpYmxlKVxyXG5cclxuICAgICAgLy8gd3JhcCBlbCBpbiBhIHdyYXBwZXJcclxuICAgICAgZWwud3JhcCgnPGRpdiBjbGFzcz1cIicgKyBzbGlkZXIuc2V0dGluZ3Mud3JhcHBlckNsYXNzICsgJ1wiPjxkaXYgY2xhc3M9XCJieC12aWV3cG9ydFwiPjwvZGl2PjwvZGl2PicpO1xyXG4gICAgICAvLyBzdG9yZSBhIG5hbWVzcGFjZSByZWZlcmVuY2UgdG8gLmJ4LXZpZXdwb3J0XHJcbiAgICAgIHNsaWRlci52aWV3cG9ydCA9IGVsLnBhcmVudCgpO1xyXG5cclxuICAgICAgLy8gYWRkIGFyaWEtbGl2ZSBpZiB0aGUgc2V0dGluZyBpcyBlbmFibGVkIGFuZCB0aWNrZXIgbW9kZSBpcyBkaXNhYmxlZFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFMaXZlICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7XHJcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmF0dHIoJ2FyaWEtbGl2ZScsICdwb2xpdGUnKTtcclxuICAgICAgfVxyXG4gICAgICAvLyBhZGQgYSBsb2FkaW5nIGRpdiB0byBkaXNwbGF5IHdoaWxlIGltYWdlcyBhcmUgbG9hZGluZ1xyXG4gICAgICBzbGlkZXIubG9hZGVyID0gJCgnPGRpdiBjbGFzcz1cImJ4LWxvYWRpbmdcIiAvPicpO1xyXG4gICAgICBzbGlkZXIudmlld3BvcnQucHJlcGVuZChzbGlkZXIubG9hZGVyKTtcclxuICAgICAgLy8gc2V0IGVsIHRvIGEgbWFzc2l2ZSB3aWR0aCwgdG8gaG9sZCBhbnkgbmVlZGVkIHNsaWRlc1xyXG4gICAgICAvLyBhbHNvIHN0cmlwIGFueSBtYXJnaW4gYW5kIHBhZGRpbmcgZnJvbSBlbFxyXG4gICAgICBlbC5jc3Moe1xyXG4gICAgICAgIHdpZHRoOiBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggKiAxMDAwICsgMjE1KSArICclJyA6ICdhdXRvJyxcclxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xyXG4gICAgICB9KTtcclxuICAgICAgLy8gaWYgdXNpbmcgQ1NTLCBhZGQgdGhlIGVhc2luZyBwcm9wZXJ0eVxyXG4gICAgICBpZiAoc2xpZGVyLnVzaW5nQ1NTICYmIHNsaWRlci5zZXR0aW5ncy5lYXNpbmcpIHtcclxuICAgICAgICBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24nLCBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nKTtcclxuICAgICAgLy8gaWYgbm90IHVzaW5nIENTUyBhbmQgbm8gZWFzaW5nIHZhbHVlIHdhcyBzdXBwbGllZCwgdXNlIHRoZSBkZWZhdWx0IEpTIGFuaW1hdGlvbiBlYXNpbmcgKHN3aW5nKVxyXG4gICAgICB9IGVsc2UgaWYgKCFzbGlkZXIuc2V0dGluZ3MuZWFzaW5nKSB7XHJcbiAgICAgICAgc2xpZGVyLnNldHRpbmdzLmVhc2luZyA9ICdzd2luZyc7XHJcbiAgICAgIH1cclxuICAgICAgLy8gbWFrZSBtb2RpZmljYXRpb25zIHRvIHRoZSB2aWV3cG9ydCAoLmJ4LXZpZXdwb3J0KVxyXG4gICAgICBzbGlkZXIudmlld3BvcnQuY3NzKHtcclxuICAgICAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcclxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xyXG4gICAgICB9KTtcclxuICAgICAgc2xpZGVyLnZpZXdwb3J0LnBhcmVudCgpLmNzcyh7XHJcbiAgICAgICAgbWF4V2lkdGg6IGdldFZpZXdwb3J0TWF4V2lkdGgoKVxyXG4gICAgICB9KTtcclxuICAgICAgLy8gYXBwbHkgY3NzIHRvIGFsbCBzbGlkZXIgY2hpbGRyZW5cclxuICAgICAgc2xpZGVyLmNoaWxkcmVuLmNzcyh7XHJcbiAgICAgICAgZmxvYXQ6IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAnbGVmdCcgOiAnbm9uZScsXHJcbiAgICAgICAgbGlzdFN0eWxlOiAnbm9uZScsXHJcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcclxuICAgICAgfSk7XHJcbiAgICAgIC8vIGFwcGx5IHRoZSBjYWxjdWxhdGVkIHdpZHRoIGFmdGVyIHRoZSBmbG9hdCBpcyBhcHBsaWVkIHRvIHByZXZlbnQgc2Nyb2xsYmFyIGludGVyZmVyZW5jZVxyXG4gICAgICBzbGlkZXIuY2hpbGRyZW4uY3NzKCd3aWR0aCcsIGdldFNsaWRlV2lkdGgoKSk7XHJcbiAgICAgIC8vIGlmIHNsaWRlTWFyZ2luIGlzIHN1cHBsaWVkLCBhZGQgdGhlIGNzc1xyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyAmJiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gPiAwKSB7IHNsaWRlci5jaGlsZHJlbi5jc3MoJ21hcmdpblJpZ2h0Jywgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTsgfVxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgJiYgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luID4gMCkgeyBzbGlkZXIuY2hpbGRyZW4uY3NzKCdtYXJnaW5Cb3R0b20nLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pOyB9XHJcbiAgICAgIC8vIGlmIFwiZmFkZVwiIG1vZGUsIGFkZCBwb3NpdGlvbmluZyBhbmQgei1pbmRleCBDU1NcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnZmFkZScpIHtcclxuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uY3NzKHtcclxuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICAgICAgekluZGV4OiAwLFxyXG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gcHJlcGFyZSB0aGUgei1pbmRleCBvbiB0aGUgc2hvd2luZyBlbGVtZW50XHJcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlKS5jc3Moe3pJbmRleDogc2xpZGVyLnNldHRpbmdzLnNsaWRlWkluZGV4LCBkaXNwbGF5OiAnYmxvY2snfSk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gY3JlYXRlIGFuIGVsZW1lbnQgdG8gY29udGFpbiBhbGwgc2xpZGVyIGNvbnRyb2xzIChwYWdlciwgc3RhcnQgLyBzdG9wLCBldGMpXHJcbiAgICAgIHNsaWRlci5jb250cm9scy5lbCA9ICQoJzxkaXYgY2xhc3M9XCJieC1jb250cm9sc1wiIC8+Jyk7XHJcbiAgICAgIC8vIGlmIGNhcHRpb25zIGFyZSByZXF1ZXN0ZWQsIGFkZCB0aGVtXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuY2FwdGlvbnMpIHsgYXBwZW5kQ2FwdGlvbnMoKTsgfVxyXG4gICAgICAvLyBjaGVjayBpZiBzdGFydFNsaWRlIGlzIGxhc3Qgc2xpZGVcclxuICAgICAgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUgPT09IGdldFBhZ2VyUXR5KCkgLSAxO1xyXG4gICAgICAvLyBpZiB2aWRlbyBpcyB0cnVlLCBzZXQgdXAgdGhlIGZpdFZpZHMgcGx1Z2luXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MudmlkZW8pIHsgZWwuZml0VmlkcygpOyB9XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucHJlbG9hZEltYWdlcyA9PT0gJ2FsbCcgfHwgc2xpZGVyLnNldHRpbmdzLnRpY2tlcikgeyBwcmVsb2FkU2VsZWN0b3IgPSBzbGlkZXIuY2hpbGRyZW47IH1cclxuICAgICAgLy8gb25seSBjaGVjayBmb3IgY29udHJvbCBhZGRpdGlvbiBpZiBub3QgaW4gXCJ0aWNrZXJcIiBtb2RlXHJcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xyXG4gICAgICAgIC8vIGlmIGNvbnRyb2xzIGFyZSByZXF1ZXN0ZWQsIGFkZCB0aGVtXHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5jb250cm9scykgeyBhcHBlbmRDb250cm9scygpOyB9XHJcbiAgICAgICAgLy8gaWYgYXV0byBpcyB0cnVlLCBhbmQgYXV0byBjb250cm9scyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0byAmJiBzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzKSB7IGFwcGVuZENvbnRyb2xzQXV0bygpOyB9XHJcbiAgICAgICAgLy8gaWYgcGFnZXIgaXMgcmVxdWVzdGVkLCBhZGQgaXRcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IGFwcGVuZFBhZ2VyKCk7IH1cclxuICAgICAgICAvLyBpZiBhbnkgY29udHJvbCBvcHRpb24gaXMgcmVxdWVzdGVkLCBhZGQgdGhlIGNvbnRyb2xzIHdyYXBwZXJcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzIHx8IHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgfHwgc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IHNsaWRlci52aWV3cG9ydC5hZnRlcihzbGlkZXIuY29udHJvbHMuZWwpOyB9XHJcbiAgICAgIC8vIGlmIHRpY2tlciBtb2RlLCBkbyBub3QgYWxsb3cgYSBwYWdlclxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNsaWRlci5zZXR0aW5ncy5wYWdlciA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGxvYWRFbGVtZW50cyhwcmVsb2FkU2VsZWN0b3IsIHN0YXJ0KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGxvYWRFbGVtZW50cyA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjYWxsYmFjaykge1xyXG4gICAgICB2YXIgdG90YWwgPSBzZWxlY3Rvci5maW5kKCdpbWc6bm90KFtzcmM9XCJcIl0pLCBpZnJhbWUnKS5sZW5ndGgsXHJcbiAgICAgIGNvdW50ID0gMDtcclxuICAgICAgaWYgKHRvdGFsID09PSAwKSB7XHJcbiAgICAgICAgY2FsbGJhY2soKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgc2VsZWN0b3IuZmluZCgnaW1nOm5vdChbc3JjPVwiXCJdKSwgaWZyYW1lJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAkKHRoaXMpLm9uZSgnbG9hZCBlcnJvcicsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgaWYgKCsrY291bnQgPT09IHRvdGFsKSB7IGNhbGxiYWNrKCk7IH1cclxuICAgICAgICB9KS5lYWNoKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgaWYgKHRoaXMuY29tcGxldGUpIHsgJCh0aGlzKS50cmlnZ2VyKCdsb2FkJyk7IH1cclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RhcnQgdGhlIHNsaWRlclxyXG4gICAgICovXHJcbiAgICB2YXIgc3RhcnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgLy8gaWYgaW5maW5pdGUgbG9vcCwgcHJlcGFyZSBhZGRpdGlvbmFsIHNsaWRlc1xyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuc2V0dGluZ3MubW9kZSAhPT0gJ2ZhZGUnICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7XHJcbiAgICAgICAgdmFyIHNsaWNlICAgID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgPyBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzIDogc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyxcclxuICAgICAgICBzbGljZUFwcGVuZCAgPSBzbGlkZXIuY2hpbGRyZW4uc2xpY2UoMCwgc2xpY2UpLmNsb25lKHRydWUpLmFkZENsYXNzKCdieC1jbG9uZScpLFxyXG4gICAgICAgIHNsaWNlUHJlcGVuZCA9IHNsaWRlci5jaGlsZHJlbi5zbGljZSgtc2xpY2UpLmNsb25lKHRydWUpLmFkZENsYXNzKCdieC1jbG9uZScpO1xyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbikge1xyXG4gICAgICAgICAgc2xpY2VBcHBlbmQuYXR0cignYXJpYS1oaWRkZW4nLCB0cnVlKTtcclxuICAgICAgICAgIHNsaWNlUHJlcGVuZC5hdHRyKCdhcmlhLWhpZGRlbicsIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbC5hcHBlbmQoc2xpY2VBcHBlbmQpLnByZXBlbmQoc2xpY2VQcmVwZW5kKTtcclxuICAgICAgfVxyXG4gICAgICAvLyByZW1vdmUgdGhlIGxvYWRpbmcgRE9NIGVsZW1lbnRcclxuICAgICAgc2xpZGVyLmxvYWRlci5yZW1vdmUoKTtcclxuICAgICAgLy8gc2V0IHRoZSBsZWZ0IC8gdG9wIHBvc2l0aW9uIG9mIFwiZWxcIlxyXG4gICAgICBzZXRTbGlkZVBvc2l0aW9uKCk7XHJcbiAgICAgIC8vIGlmIFwidmVydGljYWxcIiBtb2RlLCBhbHdheXMgdXNlIGFkYXB0aXZlSGVpZ2h0IHRvIHByZXZlbnQgb2RkIGJlaGF2aW9yXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykgeyBzbGlkZXIuc2V0dGluZ3MuYWRhcHRpdmVIZWlnaHQgPSB0cnVlOyB9XHJcbiAgICAgIC8vIHNldCB0aGUgdmlld3BvcnQgaGVpZ2h0XHJcbiAgICAgIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoZ2V0Vmlld3BvcnRIZWlnaHQoKSk7XHJcbiAgICAgIC8vIG1ha2Ugc3VyZSBldmVyeXRoaW5nIGlzIHBvc2l0aW9uZWQganVzdCByaWdodCAoc2FtZSBhcyBhIHdpbmRvdyByZXNpemUpXHJcbiAgICAgIGVsLnJlZHJhd1NsaWRlcigpO1xyXG4gICAgICAvLyBvblNsaWRlckxvYWQgY2FsbGJhY2tcclxuICAgICAgc2xpZGVyLnNldHRpbmdzLm9uU2xpZGVyTG9hZC5jYWxsKGVsLCBzbGlkZXIuYWN0aXZlLmluZGV4KTtcclxuICAgICAgLy8gc2xpZGVyIGhhcyBiZWVuIGZ1bGx5IGluaXRpYWxpemVkXHJcbiAgICAgIHNsaWRlci5pbml0aWFsaXplZCA9IHRydWU7XHJcbiAgICAgIC8vIGJpbmQgdGhlIHJlc2l6ZSBjYWxsIHRvIHRoZSB3aW5kb3dcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5yZXNwb25zaXZlKSB7ICQod2luZG93KS5iaW5kKCdyZXNpemUnLCByZXNpemVXaW5kb3cpOyB9XHJcbiAgICAgIC8vIGlmIGF1dG8gaXMgdHJ1ZSBhbmQgaGFzIG1vcmUgdGhhbiAxIHBhZ2UsIHN0YXJ0IHRoZSBzaG93XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0byAmJiBzbGlkZXIuc2V0dGluZ3MuYXV0b1N0YXJ0ICYmIChnZXRQYWdlclF0eSgpID4gMSB8fCBzbGlkZXIuc2V0dGluZ3MuYXV0b1NsaWRlRm9yT25lUGFnZSkpIHsgaW5pdEF1dG8oKTsgfVxyXG4gICAgICAvLyBpZiB0aWNrZXIgaXMgdHJ1ZSwgc3RhcnQgdGhlIHRpY2tlclxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnRpY2tlcikgeyBpbml0VGlja2VyKCk7IH1cclxuICAgICAgLy8gaWYgcGFnZXIgaXMgcmVxdWVzdGVkLCBtYWtlIHRoZSBhcHByb3ByaWF0ZSBwYWdlciBsaW5rIGFjdGl2ZVxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IHVwZGF0ZVBhZ2VyQWN0aXZlKHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlKTsgfVxyXG4gICAgICAvLyBjaGVjayBmb3IgYW55IHVwZGF0ZXMgdG8gdGhlIGNvbnRyb2xzIChsaWtlIGhpZGVDb250cm9sT25FbmQgdXBkYXRlcylcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5jb250cm9scykgeyB1cGRhdGVEaXJlY3Rpb25Db250cm9scygpOyB9XHJcbiAgICAgIC8vIGlmIHRvdWNoRW5hYmxlZCBpcyB0cnVlLCBzZXR1cCB0aGUgdG91Y2ggZXZlbnRzXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MudG91Y2hFbmFibGVkICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7IGluaXRUb3VjaCgpOyB9XHJcbiAgICAgIC8vIGlmIGtleWJvYXJkRW5hYmxlZCBpcyB0cnVlLCBzZXR1cCB0aGUga2V5Ym9hcmQgZXZlbnRzXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Mua2V5Ym9hcmRFbmFibGVkICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7XHJcbiAgICAgICAgJChkb2N1bWVudCkua2V5ZG93bihrZXlQcmVzcyk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIGhlaWdodCBvZiB0aGUgdmlld3BvcnQsIHVzZWQgdG8gZGV0ZXJtaW5lIGVpdGhlciBhZGFwdGl2ZUhlaWdodCBvciB0aGUgbWF4SGVpZ2h0IHZhbHVlXHJcbiAgICAgKi9cclxuICAgIHZhciBnZXRWaWV3cG9ydEhlaWdodCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICB2YXIgaGVpZ2h0ID0gMDtcclxuICAgICAgLy8gZmlyc3QgZGV0ZXJtaW5lIHdoaWNoIGNoaWxkcmVuIChzbGlkZXMpIHNob3VsZCBiZSB1c2VkIGluIG91ciBoZWlnaHQgY2FsY3VsYXRpb25cclxuICAgICAgdmFyIGNoaWxkcmVuID0gJCgpO1xyXG4gICAgICAvLyBpZiBtb2RlIGlzIG5vdCBcInZlcnRpY2FsXCIgYW5kIGFkYXB0aXZlSGVpZ2h0IGlzIGZhbHNlLCBpbmNsdWRlIGFsbCBjaGlsZHJlblxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICd2ZXJ0aWNhbCcgJiYgIXNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodCkge1xyXG4gICAgICAgIGNoaWxkcmVuID0gc2xpZGVyLmNoaWxkcmVuO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIGlmIG5vdCBjYXJvdXNlbCwgcmV0dXJuIHRoZSBzaW5nbGUgYWN0aXZlIGNoaWxkXHJcbiAgICAgICAgaWYgKCFzbGlkZXIuY2Fyb3VzZWwpIHtcclxuICAgICAgICAgIGNoaWxkcmVuID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXgpO1xyXG4gICAgICAgIC8vIGlmIGNhcm91c2VsLCByZXR1cm4gYSBzbGljZSBvZiBjaGlsZHJlblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAvLyBnZXQgdGhlIGluZGl2aWR1YWwgc2xpZGUgaW5kZXhcclxuICAgICAgICAgIHZhciBjdXJyZW50SW5kZXggPSBzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA9PT0gMSA/IHNsaWRlci5hY3RpdmUuaW5kZXggOiBzbGlkZXIuYWN0aXZlLmluZGV4ICogZ2V0TW92ZUJ5KCk7XHJcbiAgICAgICAgICAvLyBhZGQgdGhlIGN1cnJlbnQgc2xpZGUgdG8gdGhlIGNoaWxkcmVuXHJcbiAgICAgICAgICBjaGlsZHJlbiA9IHNsaWRlci5jaGlsZHJlbi5lcShjdXJyZW50SW5kZXgpO1xyXG4gICAgICAgICAgLy8gY3ljbGUgdGhyb3VnaCB0aGUgcmVtYWluaW5nIFwic2hvd2luZ1wiIHNsaWRlc1xyXG4gICAgICAgICAgZm9yIChpID0gMTsgaSA8PSBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzIC0gMTsgaSsrKSB7XHJcbiAgICAgICAgICAgIC8vIGlmIGxvb3BlZCBiYWNrIHRvIHRoZSBzdGFydFxyXG4gICAgICAgICAgICBpZiAoY3VycmVudEluZGV4ICsgaSA+PSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbi5hZGQoc2xpZGVyLmNoaWxkcmVuLmVxKGkgLSAxKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbi5hZGQoc2xpZGVyLmNoaWxkcmVuLmVxKGN1cnJlbnRJbmRleCArIGkpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvLyBpZiBcInZlcnRpY2FsXCIgbW9kZSwgY2FsY3VsYXRlIHRoZSBzdW0gb2YgdGhlIGhlaWdodHMgb2YgdGhlIGNoaWxkcmVuXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykge1xyXG4gICAgICAgIGNoaWxkcmVuLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcclxuICAgICAgICAgIGhlaWdodCArPSAkKHRoaXMpLm91dGVySGVpZ2h0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gYWRkIHVzZXItc3VwcGxpZWQgbWFyZ2luc1xyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gPiAwKSB7XHJcbiAgICAgICAgICBoZWlnaHQgKz0gc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luICogKHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgLSAxKTtcclxuICAgICAgICB9XHJcbiAgICAgIC8vIGlmIG5vdCBcInZlcnRpY2FsXCIgbW9kZSwgY2FsY3VsYXRlIHRoZSBtYXggaGVpZ2h0IG9mIHRoZSBjaGlsZHJlblxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGhlaWdodCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGNoaWxkcmVuLm1hcChmdW5jdGlvbigpIHtcclxuICAgICAgICAgIHJldHVybiAkKHRoaXMpLm91dGVySGVpZ2h0KGZhbHNlKTtcclxuICAgICAgICB9KS5nZXQoKSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChzbGlkZXIudmlld3BvcnQuY3NzKCdib3gtc2l6aW5nJykgPT09ICdib3JkZXItYm94Jykge1xyXG4gICAgICAgIGhlaWdodCArPSBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ3BhZGRpbmctdG9wJykpICsgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdwYWRkaW5nLWJvdHRvbScpKSArXHJcbiAgICAgICAgICAgICAgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdib3JkZXItdG9wLXdpZHRoJykpICsgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdib3JkZXItYm90dG9tLXdpZHRoJykpO1xyXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci52aWV3cG9ydC5jc3MoJ2JveC1zaXppbmcnKSA9PT0gJ3BhZGRpbmctYm94Jykge1xyXG4gICAgICAgIGhlaWdodCArPSBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ3BhZGRpbmctdG9wJykpICsgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdwYWRkaW5nLWJvdHRvbScpKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIGhlaWdodDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIHdpZHRoIHRvIGJlIHVzZWQgZm9yIHRoZSBvdXRlciB3cmFwcGVyIC8gdmlld3BvcnRcclxuICAgICAqL1xyXG4gICAgdmFyIGdldFZpZXdwb3J0TWF4V2lkdGggPSBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIHdpZHRoID0gJzEwMCUnO1xyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPiAwKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcpIHtcclxuICAgICAgICAgIHdpZHRoID0gKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgKiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCkgKyAoKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgLSAxKSAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHdpZHRoID0gc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB3aWR0aDtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIHdpZHRoIHRvIGJlIGFwcGxpZWQgdG8gZWFjaCBzbGlkZVxyXG4gICAgICovXHJcbiAgICB2YXIgZ2V0U2xpZGVXaWR0aCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICB2YXIgbmV3RWxXaWR0aCA9IHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoLCAvLyBzdGFydCB3aXRoIGFueSB1c2VyLXN1cHBsaWVkIHNsaWRlIHdpZHRoXHJcbiAgICAgIHdyYXBXaWR0aCAgICAgID0gc2xpZGVyLnZpZXdwb3J0LndpZHRoKCk7ICAgIC8vIGdldCB0aGUgY3VycmVudCB2aWV3cG9ydCB3aWR0aFxyXG4gICAgICAvLyBpZiBzbGlkZSB3aWR0aCB3YXMgbm90IHN1cHBsaWVkLCBvciBpcyBsYXJnZXIgdGhhbiB0aGUgdmlld3BvcnQgdXNlIHRoZSB2aWV3cG9ydCB3aWR0aFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPT09IDAgfHxcclxuICAgICAgICAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPiB3cmFwV2lkdGggJiYgIXNsaWRlci5jYXJvdXNlbCkgfHxcclxuICAgICAgICBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykge1xyXG4gICAgICAgIG5ld0VsV2lkdGggPSB3cmFwV2lkdGg7XHJcbiAgICAgIC8vIGlmIGNhcm91c2VsLCB1c2UgdGhlIHRocmVzaG9sZHMgdG8gZGV0ZXJtaW5lIHRoZSB3aWR0aFxyXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgPiAxICYmIHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcpIHtcclxuICAgICAgICBpZiAod3JhcFdpZHRoID4gc2xpZGVyLm1heFRocmVzaG9sZCkge1xyXG4gICAgICAgICAgcmV0dXJuIG5ld0VsV2lkdGg7XHJcbiAgICAgICAgfSBlbHNlIGlmICh3cmFwV2lkdGggPCBzbGlkZXIubWluVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICBuZXdFbFdpZHRoID0gKHdyYXBXaWR0aCAtIChzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gKiAoc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyAtIDEpKSkgLyBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLnNldHRpbmdzLnNocmlua0l0ZW1zKSB7XHJcbiAgICAgICAgICBuZXdFbFdpZHRoID0gTWF0aC5mbG9vcigod3JhcFdpZHRoICsgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKSAvIChNYXRoLmNlaWwoKHdyYXBXaWR0aCArIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbikgLyAobmV3RWxXaWR0aCArIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbikpKSAtIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBuZXdFbFdpZHRoO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBzbGlkZXMgY3VycmVudGx5IHZpc2libGUgaW4gdGhlIHZpZXdwb3J0IChpbmNsdWRlcyBwYXJ0aWFsbHkgdmlzaWJsZSBzbGlkZXMpXHJcbiAgICAgKi9cclxuICAgIHZhciBnZXROdW1iZXJTbGlkZXNTaG93aW5nID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBzbGlkZXNTaG93aW5nID0gMSxcclxuICAgICAgY2hpbGRXaWR0aCA9IG51bGw7XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnICYmIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoID4gMCkge1xyXG4gICAgICAgIC8vIGlmIHZpZXdwb3J0IGlzIHNtYWxsZXIgdGhhbiBtaW5UaHJlc2hvbGQsIHJldHVybiBtaW5TbGlkZXNcclxuICAgICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LndpZHRoKCkgPCBzbGlkZXIubWluVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICBzbGlkZXNTaG93aW5nID0gc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcztcclxuICAgICAgICAvLyBpZiB2aWV3cG9ydCBpcyBsYXJnZXIgdGhhbiBtYXhUaHJlc2hvbGQsIHJldHVybiBtYXhTbGlkZXNcclxuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci52aWV3cG9ydC53aWR0aCgpID4gc2xpZGVyLm1heFRocmVzaG9sZCkge1xyXG4gICAgICAgICAgc2xpZGVzU2hvd2luZyA9IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXM7XHJcbiAgICAgICAgLy8gaWYgdmlld3BvcnQgaXMgYmV0d2VlbiBtaW4gLyBtYXggdGhyZXNob2xkcywgZGl2aWRlIHZpZXdwb3J0IHdpZHRoIGJ5IGZpcnN0IGNoaWxkIHdpZHRoXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNoaWxkV2lkdGggPSBzbGlkZXIuY2hpbGRyZW4uZmlyc3QoKS53aWR0aCgpICsgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luO1xyXG4gICAgICAgICAgc2xpZGVzU2hvd2luZyA9IE1hdGguZmxvb3IoKHNsaWRlci52aWV3cG9ydC53aWR0aCgpICtcclxuICAgICAgICAgICAgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKSAvIGNoaWxkV2lkdGgpO1xyXG4gICAgICAgIH1cclxuICAgICAgLy8gaWYgXCJ2ZXJ0aWNhbFwiIG1vZGUsIHNsaWRlcyBzaG93aW5nIHdpbGwgYWx3YXlzIGJlIG1pblNsaWRlc1xyXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7XHJcbiAgICAgICAgc2xpZGVzU2hvd2luZyA9IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHNsaWRlc1Nob3dpbmc7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHBhZ2VzIChvbmUgZnVsbCB2aWV3cG9ydCBvZiBzbGlkZXMgaXMgb25lIFwicGFnZVwiKVxyXG4gICAgICovXHJcbiAgICB2YXIgZ2V0UGFnZXJRdHkgPSBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIHBhZ2VyUXR5ID0gMCxcclxuICAgICAgYnJlYWtQb2ludCA9IDAsXHJcbiAgICAgIGNvdW50ZXIgPSAwO1xyXG4gICAgICAvLyBpZiBtb3ZlU2xpZGVzIGlzIHNwZWNpZmllZCBieSB0aGUgdXNlclxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPiAwKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcclxuICAgICAgICAgIHBhZ2VyUXR5ID0gTWF0aC5jZWlsKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLyBnZXRNb3ZlQnkoKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIC8vIHdoZW4gYnJlYWtwb2ludCBnb2VzIGFib3ZlIGNoaWxkcmVuIGxlbmd0aCwgY291bnRlciBpcyB0aGUgbnVtYmVyIG9mIHBhZ2VzXHJcbiAgICAgICAgICB3aGlsZSAoYnJlYWtQb2ludCA8IHNsaWRlci5jaGlsZHJlbi5sZW5ndGgpIHtcclxuICAgICAgICAgICAgKytwYWdlclF0eTtcclxuICAgICAgICAgICAgYnJlYWtQb2ludCA9IGNvdW50ZXIgKyBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XHJcbiAgICAgICAgICAgIGNvdW50ZXIgKz0gc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPD0gZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpID8gc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgOiBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAvLyBpZiBtb3ZlU2xpZGVzIGlzIDAgKGF1dG8pIGRpdmlkZSBjaGlsZHJlbiBsZW5ndGggYnkgc2lkZXMgc2hvd2luZywgdGhlbiByb3VuZCB1cFxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHBhZ2VyUXR5ID0gTWF0aC5jZWlsKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLyBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCkpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBwYWdlclF0eTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgaW5kaXZpZHVhbCBzbGlkZXMgYnkgd2hpY2ggdG8gc2hpZnQgdGhlIHNsaWRlclxyXG4gICAgICovXHJcbiAgICB2YXIgZ2V0TW92ZUJ5ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIC8vIGlmIG1vdmVTbGlkZXMgd2FzIHNldCBieSB0aGUgdXNlciBhbmQgbW92ZVNsaWRlcyBpcyBsZXNzIHRoYW4gbnVtYmVyIG9mIHNsaWRlcyBzaG93aW5nXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA+IDAgJiYgc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPD0gZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpKSB7XHJcbiAgICAgICAgcmV0dXJuIHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIG1vdmVTbGlkZXMgaXMgMCAoYXV0bylcclxuICAgICAgcmV0dXJuIGdldE51bWJlclNsaWRlc1Nob3dpbmcoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBzbGlkZXIncyAoZWwpIGxlZnQgb3IgdG9wIHBvc2l0aW9uXHJcbiAgICAgKi9cclxuICAgIHZhciBzZXRTbGlkZVBvc2l0aW9uID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBwb3NpdGlvbiwgbGFzdENoaWxkLCBsYXN0U2hvd2luZ0luZGV4O1xyXG4gICAgICAvLyBpZiBsYXN0IHNsaWRlLCBub3QgaW5maW5pdGUgbG9vcCwgYW5kIG51bWJlciBvZiBjaGlsZHJlbiBpcyBsYXJnZXIgdGhhbiBzcGVjaWZpZWQgbWF4U2xpZGVzXHJcbiAgICAgIGlmIChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoID4gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAmJiBzbGlkZXIuYWN0aXZlLmxhc3QgJiYgIXNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xyXG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNoaWxkJ3MgcG9zaXRpb25cclxuICAgICAgICAgIGxhc3RDaGlsZCA9IHNsaWRlci5jaGlsZHJlbi5sYXN0KCk7XHJcbiAgICAgICAgICBwb3NpdGlvbiA9IGxhc3RDaGlsZC5wb3NpdGlvbigpO1xyXG4gICAgICAgICAgLy8gc2V0IHRoZSBsZWZ0IHBvc2l0aW9uXHJcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KC0ocG9zaXRpb24ubGVmdCAtIChzbGlkZXIudmlld3BvcnQud2lkdGgoKSAtIGxhc3RDaGlsZC5vdXRlcldpZHRoKCkpKSwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykge1xyXG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IHNob3dpbmcgaW5kZXgncyBwb3NpdGlvblxyXG4gICAgICAgICAgbGFzdFNob3dpbmdJbmRleCA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xyXG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEobGFzdFNob3dpbmdJbmRleCkucG9zaXRpb24oKTtcclxuICAgICAgICAgIC8vIHNldCB0aGUgdG9wIHBvc2l0aW9uXHJcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KC1wb3NpdGlvbi50b3AsICdyZXNldCcsIDApO1xyXG4gICAgICAgIH1cclxuICAgICAgLy8gaWYgbm90IGxhc3Qgc2xpZGVcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBnZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBzaG93aW5nIHNsaWRlXHJcbiAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCAqIGdldE1vdmVCeSgpKS5wb3NpdGlvbigpO1xyXG4gICAgICAgIC8vIGNoZWNrIGZvciBsYXN0IHNsaWRlXHJcbiAgICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IGdldFBhZ2VyUXR5KCkgLSAxKSB7IHNsaWRlci5hY3RpdmUubGFzdCA9IHRydWU7IH1cclxuICAgICAgICAvLyBzZXQgdGhlIHJlc3BlY3RpdmUgcG9zaXRpb25cclxuICAgICAgICBpZiAocG9zaXRpb24gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcpIHsgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtcG9zaXRpb24ubGVmdCwgJ3Jlc2V0JywgMCk7IH1cclxuICAgICAgICAgIGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7IHNldFBvc2l0aW9uUHJvcGVydHkoLXBvc2l0aW9uLnRvcCwgJ3Jlc2V0JywgMCk7IH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBlbCdzIGFuaW1hdGluZyBwcm9wZXJ0eSBwb3NpdGlvbiAod2hpY2ggaW4gdHVybiB3aWxsIHNvbWV0aW1lcyBhbmltYXRlIGVsKS5cclxuICAgICAqIElmIHVzaW5nIENTUywgc2V0cyB0aGUgdHJhbnNmb3JtIHByb3BlcnR5LiBJZiBub3QgdXNpbmcgQ1NTLCBzZXRzIHRoZSB0b3AgLyBsZWZ0IHByb3BlcnR5LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB2YWx1ZSAoaW50KVxyXG4gICAgICogIC0gdGhlIGFuaW1hdGluZyBwcm9wZXJ0eSdzIHZhbHVlXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHR5cGUgKHN0cmluZykgJ3NsaWRlJywgJ3Jlc2V0JywgJ3RpY2tlcidcclxuICAgICAqICAtIHRoZSB0eXBlIG9mIGluc3RhbmNlIGZvciB3aGljaCB0aGUgZnVuY3Rpb24gaXMgYmVpbmdcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZHVyYXRpb24gKGludClcclxuICAgICAqICAtIHRoZSBhbW91bnQgb2YgdGltZSAoaW4gbXMpIHRoZSB0cmFuc2l0aW9uIHNob3VsZCBvY2N1cHlcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGFyYW1zIChhcnJheSkgb3B0aW9uYWxcclxuICAgICAqICAtIGFuIG9wdGlvbmFsIHBhcmFtZXRlciBjb250YWluaW5nIGFueSB2YXJpYWJsZXMgdGhhdCBuZWVkIHRvIGJlIHBhc3NlZCBpblxyXG4gICAgICovXHJcbiAgICB2YXIgc2V0UG9zaXRpb25Qcm9wZXJ0eSA9IGZ1bmN0aW9uKHZhbHVlLCB0eXBlLCBkdXJhdGlvbiwgcGFyYW1zKSB7XHJcbiAgICAgIHZhciBhbmltYXRlT2JqLCBwcm9wVmFsdWU7XHJcbiAgICAgIC8vIHVzZSBDU1MgdHJhbnNmb3JtXHJcbiAgICAgIGlmIChzbGlkZXIudXNpbmdDU1MpIHtcclxuICAgICAgICAvLyBkZXRlcm1pbmUgdGhlIHRyYW5zbGF0ZTNkIHZhbHVlXHJcbiAgICAgICAgcHJvcFZhbHVlID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgPyAndHJhbnNsYXRlM2QoMCwgJyArIHZhbHVlICsgJ3B4LCAwKScgOiAndHJhbnNsYXRlM2QoJyArIHZhbHVlICsgJ3B4LCAwLCAwKSc7XHJcbiAgICAgICAgLy8gYWRkIHRoZSBDU1MgdHJhbnNpdGlvbi1kdXJhdGlvblxyXG4gICAgICAgIGVsLmNzcygnLScgKyBzbGlkZXIuY3NzUHJlZml4ICsgJy10cmFuc2l0aW9uLWR1cmF0aW9uJywgZHVyYXRpb24gLyAxMDAwICsgJ3MnKTtcclxuICAgICAgICBpZiAodHlwZSA9PT0gJ3NsaWRlJykge1xyXG4gICAgICAgICAgLy8gc2V0IHRoZSBwcm9wZXJ0eSB2YWx1ZVxyXG4gICAgICAgICAgZWwuY3NzKHNsaWRlci5hbmltUHJvcCwgcHJvcFZhbHVlKTtcclxuICAgICAgICAgIGlmIChkdXJhdGlvbiAhPT0gMCkge1xyXG4gICAgICAgICAgICAvLyBiaW5kIGEgY2FsbGJhY2sgbWV0aG9kIC0gZXhlY3V0ZXMgd2hlbiBDU1MgdHJhbnNpdGlvbiBjb21wbGV0ZXNcclxuICAgICAgICAgICAgZWwuYmluZCgndHJhbnNpdGlvbmVuZCB3ZWJraXRUcmFuc2l0aW9uRW5kIG9UcmFuc2l0aW9uRW5kIE1TVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBpdCdzIHRoZSBjb3JyZWN0IG9uZVxyXG4gICAgICAgICAgICAgIGlmICghJChlLnRhcmdldCkuaXMoZWwpKSB7IHJldHVybjsgfVxyXG4gICAgICAgICAgICAgIC8vIHVuYmluZCB0aGUgY2FsbGJhY2tcclxuICAgICAgICAgICAgICBlbC51bmJpbmQoJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnKTtcclxuICAgICAgICAgICAgICB1cGRhdGVBZnRlclNsaWRlVHJhbnNpdGlvbigpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSB7IC8vZHVyYXRpb24gPSAwXHJcbiAgICAgICAgICAgIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAncmVzZXQnKSB7XHJcbiAgICAgICAgICBlbC5jc3Moc2xpZGVyLmFuaW1Qcm9wLCBwcm9wVmFsdWUpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3RpY2tlcicpIHtcclxuICAgICAgICAgIC8vIG1ha2UgdGhlIHRyYW5zaXRpb24gdXNlICdsaW5lYXInXHJcbiAgICAgICAgICBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24nLCAnbGluZWFyJyk7XHJcbiAgICAgICAgICBlbC5jc3Moc2xpZGVyLmFuaW1Qcm9wLCBwcm9wVmFsdWUpO1xyXG4gICAgICAgICAgaWYgKGR1cmF0aW9uICE9PSAwKSB7XHJcbiAgICAgICAgICAgIGVsLmJpbmQoJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgLy9tYWtlIHN1cmUgaXQncyB0aGUgY29ycmVjdCBvbmVcclxuICAgICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmlzKGVsKSkgeyByZXR1cm47IH1cclxuICAgICAgICAgICAgICAvLyB1bmJpbmQgdGhlIGNhbGxiYWNrXHJcbiAgICAgICAgICAgICAgZWwudW5iaW5kKCd0cmFuc2l0aW9uZW5kIHdlYmtpdFRyYW5zaXRpb25FbmQgb1RyYW5zaXRpb25FbmQgTVNUcmFuc2l0aW9uRW5kJyk7XHJcbiAgICAgICAgICAgICAgLy8gcmVzZXQgdGhlIHBvc2l0aW9uXHJcbiAgICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShwYXJhbXMucmVzZXRWYWx1ZSwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgICAgICAgICAgLy8gc3RhcnQgdGhlIGxvb3AgYWdhaW5cclxuICAgICAgICAgICAgICB0aWNrZXJMb29wKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSBlbHNlIHsgLy9kdXJhdGlvbiA9IDBcclxuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShwYXJhbXMucmVzZXRWYWx1ZSwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgICAgICAgIHRpY2tlckxvb3AoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIC8vIHVzZSBKUyBhbmltYXRlXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYW5pbWF0ZU9iaiA9IHt9O1xyXG4gICAgICAgIGFuaW1hdGVPYmpbc2xpZGVyLmFuaW1Qcm9wXSA9IHZhbHVlO1xyXG4gICAgICAgIGlmICh0eXBlID09PSAnc2xpZGUnKSB7XHJcbiAgICAgICAgICBlbC5hbmltYXRlKGFuaW1hdGVPYmosIGR1cmF0aW9uLCBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdXBkYXRlQWZ0ZXJTbGlkZVRyYW5zaXRpb24oKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3Jlc2V0Jykge1xyXG4gICAgICAgICAgZWwuY3NzKHNsaWRlci5hbmltUHJvcCwgdmFsdWUpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3RpY2tlcicpIHtcclxuICAgICAgICAgIGVsLmFuaW1hdGUoYW5pbWF0ZU9iaiwgZHVyYXRpb24sICdsaW5lYXInLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShwYXJhbXMucmVzZXRWYWx1ZSwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgICAgICAgIC8vIHJ1biB0aGUgcmVjdXJzaXZlIGxvb3AgYWZ0ZXIgYW5pbWF0aW9uXHJcbiAgICAgICAgICAgIHRpY2tlckxvb3AoKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBvcHVsYXRlcyB0aGUgcGFnZXIgd2l0aCBwcm9wZXIgYW1vdW50IG9mIHBhZ2VzXHJcbiAgICAgKi9cclxuICAgIHZhciBwb3B1bGF0ZVBhZ2VyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBwYWdlckh0bWwgPSAnJyxcclxuICAgICAgbGlua0NvbnRlbnQgPSAnJyxcclxuICAgICAgcGFnZXJRdHkgPSBnZXRQYWdlclF0eSgpO1xyXG4gICAgICAvLyBsb29wIHRocm91Z2ggZWFjaCBwYWdlciBpdGVtXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFnZXJRdHk7IGkrKykge1xyXG4gICAgICAgIGxpbmtDb250ZW50ID0gJyc7XHJcbiAgICAgICAgLy8gaWYgYSBidWlsZFBhZ2VyIGZ1bmN0aW9uIGlzIHN1cHBsaWVkLCB1c2UgaXQgdG8gZ2V0IHBhZ2VyIGxpbmsgdmFsdWUsIGVsc2UgdXNlIGluZGV4ICsgMVxyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlciAmJiAkLmlzRnVuY3Rpb24oc2xpZGVyLnNldHRpbmdzLmJ1aWxkUGFnZXIpIHx8IHNsaWRlci5zZXR0aW5ncy5wYWdlckN1c3RvbSkge1xyXG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKTtcclxuICAgICAgICAgIHNsaWRlci5wYWdlckVsLmFkZENsYXNzKCdieC1jdXN0b20tcGFnZXInKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBpICsgMTtcclxuICAgICAgICAgIHNsaWRlci5wYWdlckVsLmFkZENsYXNzKCdieC1kZWZhdWx0LXBhZ2VyJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHZhciBsaW5rQ29udGVudCA9IHNsaWRlci5zZXR0aW5ncy5idWlsZFBhZ2VyICYmICQuaXNGdW5jdGlvbihzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcikgPyBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKSA6IGkgKyAxO1xyXG4gICAgICAgIC8vIGFkZCB0aGUgbWFya3VwIHRvIHRoZSBzdHJpbmdcclxuICAgICAgICBwYWdlckh0bWwgKz0gJzxkaXYgY2xhc3M9XCJieC1wYWdlci1pdGVtXCI+PGEgaHJlZj1cIlwiIGRhdGEtc2xpZGUtaW5kZXg9XCInICsgaSArICdcIiBjbGFzcz1cImJ4LXBhZ2VyLWxpbmtcIj4nICsgbGlua0NvbnRlbnQgKyAnPC9hPjwvZGl2Pic7XHJcbiAgICAgIH1cclxuICAgICAgLy8gcG9wdWxhdGUgdGhlIHBhZ2VyIGVsZW1lbnQgd2l0aCBwYWdlciBsaW5rc1xyXG4gICAgICBzbGlkZXIucGFnZXJFbC5odG1sKHBhZ2VySHRtbCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQXBwZW5kcyB0aGUgcGFnZXIgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgdmFyIGFwcGVuZFBhZ2VyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XHJcbiAgICAgICAgLy8gY3JlYXRlIHRoZSBwYWdlciBET00gZWxlbWVudFxyXG4gICAgICAgIHNsaWRlci5wYWdlckVsID0gJCgnPGRpdiBjbGFzcz1cImJ4LXBhZ2VyXCIgLz4nKTtcclxuICAgICAgICAvLyBpZiBhIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXQgd2l0aCB0aGUgcGFnZXJcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyU2VsZWN0b3IpIHtcclxuICAgICAgICAgICQoc2xpZGVyLnNldHRpbmdzLnBhZ2VyU2VsZWN0b3IpLmh0bWwoc2xpZGVyLnBhZ2VyRWwpO1xyXG4gICAgICAgIC8vIGlmIG5vIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgYWRkIGl0IGFmdGVyIHRoZSB3cmFwcGVyXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNsaWRlci5jb250cm9scy5lbC5hZGRDbGFzcygnYngtaGFzLXBhZ2VyJykuYXBwZW5kKHNsaWRlci5wYWdlckVsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gcG9wdWxhdGUgdGhlIHBhZ2VyXHJcbiAgICAgICAgcG9wdWxhdGVQYWdlcigpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNsaWRlci5wYWdlckVsID0gJChzbGlkZXIuc2V0dGluZ3MucGFnZXJDdXN0b20pO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGFzc2lnbiB0aGUgcGFnZXIgY2xpY2sgYmluZGluZ1xyXG4gICAgICBzbGlkZXIucGFnZXJFbC5vbignY2xpY2sgdG91Y2hlbmQnLCAnYScsIGNsaWNrUGFnZXJCaW5kKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIHByZXYgLyBuZXh0IGNvbnRyb2xzIHRvIHRoZSBjb250cm9scyBlbGVtZW50XHJcbiAgICAgKi9cclxuICAgIHZhciBhcHBlbmRDb250cm9scyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICBzbGlkZXIuY29udHJvbHMubmV4dCA9ICQoJzxhIGNsYXNzPVwiYngtbmV4dFwiIGhyZWY9XCJcIj4nICsgc2xpZGVyLnNldHRpbmdzLm5leHRUZXh0ICsgJzwvYT4nKTtcclxuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYgPSAkKCc8YSBjbGFzcz1cImJ4LXByZXZcIiBocmVmPVwiXCI+JyArIHNsaWRlci5zZXR0aW5ncy5wcmV2VGV4dCArICc8L2E+Jyk7XHJcbiAgICAgIC8vIGJpbmQgY2xpY2sgYWN0aW9ucyB0byB0aGUgY29udHJvbHNcclxuICAgICAgc2xpZGVyLmNvbnRyb2xzLm5leHQuYmluZCgnY2xpY2sgdG91Y2hlbmQnLCBjbGlja05leHRCaW5kKTtcclxuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYuYmluZCgnY2xpY2sgdG91Y2hlbmQnLCBjbGlja1ByZXZCaW5kKTtcclxuICAgICAgLy8gaWYgbmV4dFNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXRcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5uZXh0U2VsZWN0b3IpIHtcclxuICAgICAgICAkKHNsaWRlci5zZXR0aW5ncy5uZXh0U2VsZWN0b3IpLmFwcGVuZChzbGlkZXIuY29udHJvbHMubmV4dCk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgcHJldlNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXRcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5wcmV2U2VsZWN0b3IpIHtcclxuICAgICAgICAkKHNsaWRlci5zZXR0aW5ncy5wcmV2U2VsZWN0b3IpLmFwcGVuZChzbGlkZXIuY29udHJvbHMucHJldik7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgbm8gY3VzdG9tIHNlbGVjdG9ycyB3ZXJlIHN1cHBsaWVkXHJcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLm5leHRTZWxlY3RvciAmJiAhc2xpZGVyLnNldHRpbmdzLnByZXZTZWxlY3Rvcikge1xyXG4gICAgICAgIC8vIGFkZCB0aGUgY29udHJvbHMgdG8gdGhlIERPTVxyXG4gICAgICAgIHNsaWRlci5jb250cm9scy5kaXJlY3Rpb25FbCA9ICQoJzxkaXYgY2xhc3M9XCJieC1jb250cm9scy1kaXJlY3Rpb25cIiAvPicpO1xyXG4gICAgICAgIC8vIGFkZCB0aGUgY29udHJvbCBlbGVtZW50cyB0byB0aGUgZGlyZWN0aW9uRWxcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZGlyZWN0aW9uRWwuYXBwZW5kKHNsaWRlci5jb250cm9scy5wcmV2KS5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLm5leHQpO1xyXG4gICAgICAgIC8vIHNsaWRlci52aWV3cG9ydC5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLmRpcmVjdGlvbkVsKTtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZWwuYWRkQ2xhc3MoJ2J4LWhhcy1jb250cm9scy1kaXJlY3Rpb24nKS5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLmRpcmVjdGlvbkVsKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEFwcGVuZHMgc3RhcnQgLyBzdG9wIGF1dG8gY29udHJvbHMgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgdmFyIGFwcGVuZENvbnRyb2xzQXV0byA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICBzbGlkZXIuY29udHJvbHMuc3RhcnQgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtYXV0by1pdGVtXCI+PGEgY2xhc3M9XCJieC1zdGFydFwiIGhyZWY9XCJcIj4nICsgc2xpZGVyLnNldHRpbmdzLnN0YXJ0VGV4dCArICc8L2E+PC9kaXY+Jyk7XHJcbiAgICAgIHNsaWRlci5jb250cm9scy5zdG9wID0gJCgnPGRpdiBjbGFzcz1cImJ4LWNvbnRyb2xzLWF1dG8taXRlbVwiPjxhIGNsYXNzPVwiYngtc3RvcFwiIGhyZWY9XCJcIj4nICsgc2xpZGVyLnNldHRpbmdzLnN0b3BUZXh0ICsgJzwvYT48L2Rpdj4nKTtcclxuICAgICAgLy8gYWRkIHRoZSBjb250cm9scyB0byB0aGUgRE9NXHJcbiAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtYXV0b1wiIC8+Jyk7XHJcbiAgICAgIC8vIGJpbmQgY2xpY2sgYWN0aW9ucyB0byB0aGUgY29udHJvbHNcclxuICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5vbignY2xpY2snLCAnLmJ4LXN0YXJ0JywgY2xpY2tTdGFydEJpbmQpO1xyXG4gICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLm9uKCdjbGljaycsICcuYngtc3RvcCcsIGNsaWNrU3RvcEJpbmQpO1xyXG4gICAgICAvLyBpZiBhdXRvQ29udHJvbHNDb21iaW5lLCBpbnNlcnQgb25seSB0aGUgXCJzdGFydFwiIGNvbnRyb2xcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNDb21iaW5lKSB7XHJcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLnN0YXJ0KTtcclxuICAgICAgLy8gaWYgYXV0b0NvbnRyb2xzQ29tYmluZSBpcyBmYWxzZSwgaW5zZXJ0IGJvdGggY29udHJvbHNcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLmFwcGVuZChzbGlkZXIuY29udHJvbHMuc3RhcnQpLmFwcGVuZChzbGlkZXIuY29udHJvbHMuc3RvcCk7XHJcbiAgICAgIH1cclxuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBzZWxlY3RvciB3YXMgc3VwcGxpZWQsIHBvcHVsYXRlIGl0IHdpdGggdGhlIGNvbnRyb2xzXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzU2VsZWN0b3IpIHtcclxuICAgICAgICAkKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNTZWxlY3RvcikuaHRtbChzbGlkZXIuY29udHJvbHMuYXV0b0VsKTtcclxuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBzZWxlY3RvciB3YXMgbm90IHN1cHBsaWVkLCBhZGQgaXQgYWZ0ZXIgdGhlIHdyYXBwZXJcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZWwuYWRkQ2xhc3MoJ2J4LWhhcy1jb250cm9scy1hdXRvJykuYXBwZW5kKHNsaWRlci5jb250cm9scy5hdXRvRWwpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIHVwZGF0ZSB0aGUgYXV0byBjb250cm9sc1xyXG4gICAgICB1cGRhdGVBdXRvQ29udHJvbHMoc2xpZGVyLnNldHRpbmdzLmF1dG9TdGFydCA/ICdzdG9wJyA6ICdzdGFydCcpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEFwcGVuZHMgaW1hZ2UgY2FwdGlvbnMgdG8gdGhlIERPTVxyXG4gICAgICovXHJcbiAgICB2YXIgYXBwZW5kQ2FwdGlvbnMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgLy8gY3ljbGUgdGhyb3VnaCBlYWNoIGNoaWxkXHJcbiAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XHJcbiAgICAgICAgLy8gZ2V0IHRoZSBpbWFnZSB0aXRsZSBhdHRyaWJ1dGVcclxuICAgICAgICB2YXIgdGl0bGUgPSAkKHRoaXMpLmZpbmQoJ2ltZzpmaXJzdCcpLmF0dHIoJ3RpdGxlJyk7XHJcbiAgICAgICAgLy8gYXBwZW5kIHRoZSBjYXB0aW9uXHJcbiAgICAgICAgaWYgKHRpdGxlICE9PSB1bmRlZmluZWQgJiYgKCcnICsgdGl0bGUpLmxlbmd0aCkge1xyXG4gICAgICAgICAgJCh0aGlzKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJieC1jYXB0aW9uXCI+PHNwYW4+JyArIHRpdGxlICsgJzwvc3Bhbj48L2Rpdj4nKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENsaWNrIG5leHQgYmluZGluZ1xyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBlIChldmVudClcclxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcclxuICAgICAqL1xyXG4gICAgdmFyIGNsaWNrTmV4dEJpbmQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5lbC5oYXNDbGFzcygnZGlzYWJsZWQnKSkgeyByZXR1cm47IH1cclxuICAgICAgLy8gaWYgYXV0byBzaG93IGlzIHJ1bm5pbmcsIHN0b3AgaXRcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvICYmIHNsaWRlci5zZXR0aW5ncy5zdG9wQXV0b09uQ2xpY2spIHsgZWwuc3RvcEF1dG8oKTsgfVxyXG4gICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2xpY2sgcHJldiBiaW5kaW5nXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxyXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxyXG4gICAgICovXHJcbiAgICB2YXIgY2xpY2tQcmV2QmluZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLmVsLmhhc0NsYXNzKCdkaXNhYmxlZCcpKSB7IHJldHVybjsgfVxyXG4gICAgICAvLyBpZiBhdXRvIHNob3cgaXMgcnVubmluZywgc3RvcCBpdFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLnN0b3BBdXRvT25DbGljaykgeyBlbC5zdG9wQXV0bygpOyB9XHJcbiAgICAgIGVsLmdvVG9QcmV2U2xpZGUoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDbGljayBzdGFydCBiaW5kaW5nXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxyXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxyXG4gICAgICovXHJcbiAgICB2YXIgY2xpY2tTdGFydEJpbmQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGVsLnN0YXJ0QXV0bygpO1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2xpY2sgc3RvcCBiaW5kaW5nXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxyXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxyXG4gICAgICovXHJcbiAgICB2YXIgY2xpY2tTdG9wQmluZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZWwuc3RvcEF1dG8oKTtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIENsaWNrIHBhZ2VyIGJpbmRpbmdcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXHJcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIHZhciBjbGlja1BhZ2VyQmluZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgdmFyIHBhZ2VyTGluaywgcGFnZXJJbmRleDtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLmVsLmhhc0NsYXNzKCdkaXNhYmxlZCcpKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmIGF1dG8gc2hvdyBpcyBydW5uaW5nLCBzdG9wIGl0XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0byAgJiYgc2xpZGVyLnNldHRpbmdzLnN0b3BBdXRvT25DbGljaykgeyBlbC5zdG9wQXV0bygpOyB9XHJcbiAgICAgIHBhZ2VyTGluayA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgaWYgKHBhZ2VyTGluay5hdHRyKCdkYXRhLXNsaWRlLWluZGV4JykgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHBhZ2VySW5kZXggPSBwYXJzZUludChwYWdlckxpbmsuYXR0cignZGF0YS1zbGlkZS1pbmRleCcpKTtcclxuICAgICAgICAvLyBpZiBjbGlja2VkIHBhZ2VyIGxpbmsgaXMgbm90IGFjdGl2ZSwgY29udGludWUgd2l0aCB0aGUgZ29Ub1NsaWRlIGNhbGxcclxuICAgICAgICBpZiAocGFnZXJJbmRleCAhPT0gc2xpZGVyLmFjdGl2ZS5pbmRleCkgeyBlbC5nb1RvU2xpZGUocGFnZXJJbmRleCk7IH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgdGhlIHBhZ2VyIGxpbmtzIHdpdGggYW4gYWN0aXZlIGNsYXNzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHNsaWRlSW5kZXggKGludClcclxuICAgICAqICAtIGluZGV4IG9mIHNsaWRlIHRvIG1ha2UgYWN0aXZlXHJcbiAgICAgKi9cclxuICAgIHZhciB1cGRhdGVQYWdlckFjdGl2ZSA9IGZ1bmN0aW9uKHNsaWRlSW5kZXgpIHtcclxuICAgICAgLy8gaWYgXCJzaG9ydFwiIHBhZ2VyIHR5cGVcclxuICAgICAgdmFyIGxlbiA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7IC8vIG5iIG9mIGNoaWxkcmVuXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucGFnZXJUeXBlID09PSAnc2hvcnQnKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgPiAxKSB7XHJcbiAgICAgICAgICBsZW4gPSBNYXRoLmNlaWwoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAvIHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzbGlkZXIucGFnZXJFbC5odG1sKChzbGlkZUluZGV4ICsgMSkgKyBzbGlkZXIuc2V0dGluZ3MucGFnZXJTaG9ydFNlcGFyYXRvciArIGxlbik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIHJlbW92ZSBhbGwgcGFnZXIgYWN0aXZlIGNsYXNzZXNcclxuICAgICAgc2xpZGVyLnBhZ2VyRWwuZmluZCgnYScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgLy8gYXBwbHkgdGhlIGFjdGl2ZSBjbGFzcyBmb3IgYWxsIHBhZ2Vyc1xyXG4gICAgICBzbGlkZXIucGFnZXJFbC5lYWNoKGZ1bmN0aW9uKGksIGVsKSB7ICQoZWwpLmZpbmQoJ2EnKS5lcShzbGlkZUluZGV4KS5hZGRDbGFzcygnYWN0aXZlJyk7IH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBlcmZvcm1zIG5lZWRlZCBhY3Rpb25zIGFmdGVyIGEgc2xpZGUgdHJhbnNpdGlvblxyXG4gICAgICovXHJcbiAgICB2YXIgdXBkYXRlQWZ0ZXJTbGlkZVRyYW5zaXRpb24gPSBmdW5jdGlvbigpIHtcclxuICAgICAgLy8gaWYgaW5maW5pdGUgbG9vcCBpcyB0cnVlXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wKSB7XHJcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gJyc7XHJcbiAgICAgICAgLy8gZmlyc3Qgc2xpZGVcclxuICAgICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkge1xyXG4gICAgICAgICAgLy8gc2V0IHRoZSBuZXcgcG9zaXRpb25cclxuICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKDApLnBvc2l0aW9uKCk7XHJcbiAgICAgICAgLy8gY2Fyb3VzZWwsIGxhc3Qgc2xpZGVcclxuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IGdldFBhZ2VyUXR5KCkgLSAxICYmIHNsaWRlci5jYXJvdXNlbCkge1xyXG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEoKGdldFBhZ2VyUXR5KCkgLSAxKSAqIGdldE1vdmVCeSgpKS5wb3NpdGlvbigpO1xyXG4gICAgICAgIC8vIGxhc3Qgc2xpZGVcclxuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gMSkucG9zaXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykgeyBzZXRQb3NpdGlvblByb3BlcnR5KC1wb3NpdGlvbi5sZWZ0LCAncmVzZXQnLCAwKTsgfVxyXG4gICAgICAgICAgZWxzZSBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHsgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtcG9zaXRpb24udG9wLCAncmVzZXQnLCAwKTsgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvLyBkZWNsYXJlIHRoYXQgdGhlIHRyYW5zaXRpb24gaXMgY29tcGxldGVcclxuICAgICAgc2xpZGVyLndvcmtpbmcgPSBmYWxzZTtcclxuICAgICAgLy8gb25TbGlkZUFmdGVyIGNhbGxiYWNrXHJcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5vblNsaWRlQWZ0ZXIuY2FsbChlbCwgc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXgpLCBzbGlkZXIub2xkSW5kZXgsIHNsaWRlci5hY3RpdmUuaW5kZXgpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgdGhlIGF1dG8gY29udHJvbHMgc3RhdGUgKGVpdGhlciBhY3RpdmUsIG9yIGNvbWJpbmVkIHN3aXRjaClcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc3RhdGUgKHN0cmluZykgXCJzdGFydFwiLCBcInN0b3BcIlxyXG4gICAgICogIC0gdGhlIG5ldyBzdGF0ZSBvZiB0aGUgYXV0byBzaG93XHJcbiAgICAgKi9cclxuICAgIHZhciB1cGRhdGVBdXRvQ29udHJvbHMgPSBmdW5jdGlvbihzdGF0ZSkge1xyXG4gICAgICAvLyBpZiBhdXRvQ29udHJvbHNDb21iaW5lIGlzIHRydWUsIHJlcGxhY2UgdGhlIGN1cnJlbnQgY29udHJvbCB3aXRoIHRoZSBuZXcgc3RhdGVcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNDb21iaW5lKSB7XHJcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5odG1sKHNsaWRlci5jb250cm9sc1tzdGF0ZV0pO1xyXG4gICAgICAvLyBpZiBhdXRvQ29udHJvbHNDb21iaW5lIGlzIGZhbHNlLCBhcHBseSB0aGUgXCJhY3RpdmVcIiBjbGFzcyB0byB0aGUgYXBwcm9wcmlhdGUgY29udHJvbFxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwuZmluZCgnYScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLmZpbmQoJ2E6bm90KC5ieC0nICsgc3RhdGUgKyAnKScpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgdGhlIGRpcmVjdGlvbiBjb250cm9scyAoY2hlY2tzIGlmIGVpdGhlciBzaG91bGQgYmUgaGlkZGVuKVxyXG4gICAgICovXHJcbiAgICB2YXIgdXBkYXRlRGlyZWN0aW9uQ29udHJvbHMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgaWYgKGdldFBhZ2VyUXR5KCkgPT09IDEpIHtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMucHJldi5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgfSBlbHNlIGlmICghc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuc2V0dGluZ3MuaGlkZUNvbnRyb2xPbkVuZCkge1xyXG4gICAgICAgIC8vIGlmIGZpcnN0IHNsaWRlXHJcbiAgICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IDApIHtcclxuICAgICAgICAgIHNsaWRlci5jb250cm9scy5wcmV2LmFkZENsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLm5leHQucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgLy8gaWYgbGFzdCBzbGlkZVxyXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gZ2V0UGFnZXJRdHkoKSAtIDEpIHtcclxuICAgICAgICAgIHNsaWRlci5jb250cm9scy5uZXh0LmFkZENsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgLy8gaWYgYW55IHNsaWRlIGluIHRoZSBtaWRkbGVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgYXV0byBwcm9jZXNzXHJcbiAgICAgKi9cclxuICAgIHZhciBpbml0QXV0byA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAvLyBpZiBhdXRvRGVsYXkgd2FzIHN1cHBsaWVkLCBsYXVuY2ggdGhlIGF1dG8gc2hvdyB1c2luZyBhIHNldFRpbWVvdXQoKSBjYWxsXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RlbGF5ID4gMCkge1xyXG4gICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChlbC5zdGFydEF1dG8sIHNsaWRlci5zZXR0aW5ncy5hdXRvRGVsYXkpO1xyXG4gICAgICAvLyBpZiBhdXRvRGVsYXkgd2FzIG5vdCBzdXBwbGllZCwgc3RhcnQgdGhlIGF1dG8gc2hvdyBub3JtYWxseVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGVsLnN0YXJ0QXV0bygpO1xyXG5cclxuICAgICAgICAvL2FkZCBmb2N1cyBhbmQgYmx1ciBldmVudHMgdG8gZW5zdXJlIGl0cyBydW5uaW5nIGlmIHRpbWVvdXQgZ2V0cyBwYXVzZWRcclxuICAgICAgICAkKHdpbmRvdykuZm9jdXMoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICBlbC5zdGFydEF1dG8oKTtcclxuICAgICAgICB9KS5ibHVyKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgZWwuc3RvcEF1dG8oKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgICAvLyBpZiBhdXRvSG92ZXIgaXMgcmVxdWVzdGVkXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0hvdmVyKSB7XHJcbiAgICAgICAgLy8gb24gZWwgaG92ZXJcclxuICAgICAgICBlbC5ob3ZlcihmdW5jdGlvbigpIHtcclxuICAgICAgICAgIC8vIGlmIHRoZSBhdXRvIHNob3cgaXMgY3VycmVudGx5IHBsYXlpbmcgKGhhcyBhbiBhY3RpdmUgaW50ZXJ2YWwpXHJcbiAgICAgICAgICBpZiAoc2xpZGVyLmludGVydmFsKSB7XHJcbiAgICAgICAgICAgIC8vIHN0b3AgdGhlIGF1dG8gc2hvdyBhbmQgcGFzcyB0cnVlIGFyZ3VtZW50IHdoaWNoIHdpbGwgcHJldmVudCBjb250cm9sIHVwZGF0ZVxyXG4gICAgICAgICAgICBlbC5zdG9wQXV0byh0cnVlKTtcclxuICAgICAgICAgICAgLy8gY3JlYXRlIGEgbmV3IGF1dG9QYXVzZWQgdmFsdWUgd2hpY2ggd2lsbCBiZSB1c2VkIGJ5IHRoZSByZWxhdGl2ZSBcIm1vdXNlb3V0XCIgZXZlbnRcclxuICAgICAgICAgICAgc2xpZGVyLmF1dG9QYXVzZWQgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgLy8gaWYgdGhlIGF1dG9QYXVzZWQgdmFsdWUgd2FzIGNyZWF0ZWQgYmUgdGhlIHByaW9yIFwibW91c2VvdmVyXCIgZXZlbnRcclxuICAgICAgICAgIGlmIChzbGlkZXIuYXV0b1BhdXNlZCkge1xyXG4gICAgICAgICAgICAvLyBzdGFydCB0aGUgYXV0byBzaG93IGFuZCBwYXNzIHRydWUgYXJndW1lbnQgd2hpY2ggd2lsbCBwcmV2ZW50IGNvbnRyb2wgdXBkYXRlXHJcbiAgICAgICAgICAgIGVsLnN0YXJ0QXV0byh0cnVlKTtcclxuICAgICAgICAgICAgLy8gcmVzZXQgdGhlIGF1dG9QYXVzZWQgdmFsdWVcclxuICAgICAgICAgICAgc2xpZGVyLmF1dG9QYXVzZWQgPSBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIHRpY2tlciBwcm9jZXNzXHJcbiAgICAgKi9cclxuICAgIHZhciBpbml0VGlja2VyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBzdGFydFBvc2l0aW9uID0gMCxcclxuICAgICAgcG9zaXRpb24sIHRyYW5zZm9ybSwgdmFsdWUsIGlkeCwgcmF0aW8sIHByb3BlcnR5LCBuZXdTcGVlZCwgdG90YWxEaW1lbnM7XHJcbiAgICAgIC8vIGlmIGF1dG9EaXJlY3Rpb24gaXMgXCJuZXh0XCIsIGFwcGVuZCBhIGNsb25lIG9mIHRoZSBlbnRpcmUgc2xpZGVyXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RpcmVjdGlvbiA9PT0gJ25leHQnKSB7XHJcbiAgICAgICAgZWwuYXBwZW5kKHNsaWRlci5jaGlsZHJlbi5jbG9uZSgpLmFkZENsYXNzKCdieC1jbG9uZScpKTtcclxuICAgICAgLy8gaWYgYXV0b0RpcmVjdGlvbiBpcyBcInByZXZcIiwgcHJlcGVuZCBhIGNsb25lIG9mIHRoZSBlbnRpcmUgc2xpZGVyLCBhbmQgc2V0IHRoZSBsZWZ0IHBvc2l0aW9uXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZWwucHJlcGVuZChzbGlkZXIuY2hpbGRyZW4uY2xvbmUoKS5hZGRDbGFzcygnYngtY2xvbmUnKSk7XHJcbiAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZmlyc3QoKS5wb3NpdGlvbigpO1xyXG4gICAgICAgIHN0YXJ0UG9zaXRpb24gPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLXBvc2l0aW9uLmxlZnQgOiAtcG9zaXRpb24udG9wO1xyXG4gICAgICB9XHJcbiAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoc3RhcnRQb3NpdGlvbiwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgIC8vIGRvIG5vdCBhbGxvdyBjb250cm9scyBpbiB0aWNrZXIgbW9kZVxyXG4gICAgICBzbGlkZXIuc2V0dGluZ3MucGFnZXIgPSBmYWxzZTtcclxuICAgICAgc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzID0gZmFsc2U7XHJcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgPSBmYWxzZTtcclxuICAgICAgLy8gaWYgYXV0b0hvdmVyIGlzIHJlcXVlc3RlZFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnRpY2tlckhvdmVyKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci51c2luZ0NTUykge1xyXG4gICAgICAgICAgaWR4ID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IDQgOiA1O1xyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmhvdmVyKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0gPSBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNmb3JtJyk7XHJcbiAgICAgICAgICAgIHZhbHVlID0gcGFyc2VGbG9hdCh0cmFuc2Zvcm0uc3BsaXQoJywnKVtpZHhdKTtcclxuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMCk7XHJcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdG90YWxEaW1lbnMgPSAwO1xyXG4gICAgICAgICAgICBzbGlkZXIuY2hpbGRyZW4uZWFjaChmdW5jdGlvbihpbmRleCkge1xyXG4gICAgICAgICAgICAgIHRvdGFsRGltZW5zICs9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAkKHRoaXMpLm91dGVyV2lkdGgodHJ1ZSkgOiAkKHRoaXMpLm91dGVySGVpZ2h0KHRydWUpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBzcGVlZCByYXRpbyAodXNlZCB0byBkZXRlcm1pbmUgdGhlIG5ldyBzcGVlZCB0byBmaW5pc2ggdGhlIHBhdXNlZCBhbmltYXRpb24pXHJcbiAgICAgICAgICAgIHJhdGlvID0gc2xpZGVyLnNldHRpbmdzLnNwZWVkIC8gdG90YWxEaW1lbnM7XHJcbiAgICAgICAgICAgIC8vIGRldGVybWluZSB3aGljaCBwcm9wZXJ0eSB0byB1c2VcclxuICAgICAgICAgICAgcHJvcGVydHkgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gJ2xlZnQnIDogJ3RvcCc7XHJcbiAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgbmV3IHNwZWVkXHJcbiAgICAgICAgICAgIG5ld1NwZWVkID0gcmF0aW8gKiAodG90YWxEaW1lbnMgLSAoTWF0aC5hYnMocGFyc2VJbnQodmFsdWUpKSkpO1xyXG4gICAgICAgICAgICB0aWNrZXJMb29wKG5ld1NwZWVkKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAvLyBvbiBlbCBob3ZlclxyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmhvdmVyKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBlbC5zdG9wKCk7XHJcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSB0b3RhbCB3aWR0aCBvZiBjaGlsZHJlbiAodXNlZCB0byBjYWxjdWxhdGUgdGhlIHNwZWVkIHJhdGlvKVxyXG4gICAgICAgICAgICB0b3RhbERpbWVucyA9IDA7XHJcbiAgICAgICAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgdG90YWxEaW1lbnMgKz0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/ICQodGhpcykub3V0ZXJXaWR0aCh0cnVlKSA6ICQodGhpcykub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHNwZWVkIHJhdGlvICh1c2VkIHRvIGRldGVybWluZSB0aGUgbmV3IHNwZWVkIHRvIGZpbmlzaCB0aGUgcGF1c2VkIGFuaW1hdGlvbilcclxuICAgICAgICAgICAgcmF0aW8gPSBzbGlkZXIuc2V0dGluZ3Muc3BlZWQgLyB0b3RhbERpbWVucztcclxuICAgICAgICAgICAgLy8gZGV0ZXJtaW5lIHdoaWNoIHByb3BlcnR5IHRvIHVzZVxyXG4gICAgICAgICAgICBwcm9wZXJ0eSA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAnbGVmdCcgOiAndG9wJztcclxuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBuZXcgc3BlZWRcclxuICAgICAgICAgICAgbmV3U3BlZWQgPSByYXRpbyAqICh0b3RhbERpbWVucyAtIChNYXRoLmFicyhwYXJzZUludChlbC5jc3MocHJvcGVydHkpKSkpKTtcclxuICAgICAgICAgICAgdGlja2VyTG9vcChuZXdTcGVlZCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLy8gc3RhcnQgdGhlIHRpY2tlciBsb29wXHJcbiAgICAgIHRpY2tlckxvb3AoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSdW5zIGEgY29udGludW91cyBsb29wLCBuZXdzIHRpY2tlci1zdHlsZVxyXG4gICAgICovXHJcbiAgICB2YXIgdGlja2VyTG9vcCA9IGZ1bmN0aW9uKHJlc3VtZVNwZWVkKSB7XHJcbiAgICAgIHZhciBzcGVlZCA9IHJlc3VtZVNwZWVkID8gcmVzdW1lU3BlZWQgOiBzbGlkZXIuc2V0dGluZ3Muc3BlZWQsXHJcbiAgICAgIHBvc2l0aW9uID0ge2xlZnQ6IDAsIHRvcDogMH0sXHJcbiAgICAgIHJlc2V0ID0ge2xlZnQ6IDAsIHRvcDogMH0sXHJcbiAgICAgIGFuaW1hdGVQcm9wZXJ0eSwgcmVzZXRWYWx1ZSwgcGFyYW1zO1xyXG5cclxuICAgICAgLy8gaWYgXCJuZXh0XCIgYW5pbWF0ZSBsZWZ0IHBvc2l0aW9uIHRvIGxhc3QgY2hpbGQsIHRoZW4gcmVzZXQgbGVmdCB0byAwXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RpcmVjdGlvbiA9PT0gJ25leHQnKSB7XHJcbiAgICAgICAgcG9zaXRpb24gPSBlbC5maW5kKCcuYngtY2xvbmUnKS5maXJzdCgpLnBvc2l0aW9uKCk7XHJcbiAgICAgIC8vIGlmIFwicHJldlwiIGFuaW1hdGUgbGVmdCBwb3NpdGlvbiB0byAwLCB0aGVuIHJlc2V0IGxlZnQgdG8gZmlyc3Qgbm9uLWNsb25lIGNoaWxkXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzZXQgPSBzbGlkZXIuY2hpbGRyZW4uZmlyc3QoKS5wb3NpdGlvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIGFuaW1hdGVQcm9wZXJ0eSA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAtcG9zaXRpb24ubGVmdCA6IC1wb3NpdGlvbi50b3A7XHJcbiAgICAgIHJlc2V0VmFsdWUgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLXJlc2V0LmxlZnQgOiAtcmVzZXQudG9wO1xyXG4gICAgICBwYXJhbXMgPSB7cmVzZXRWYWx1ZTogcmVzZXRWYWx1ZX07XHJcbiAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoYW5pbWF0ZVByb3BlcnR5LCAndGlja2VyJywgc3BlZWQsIHBhcmFtcyk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgaWYgZWwgaXMgb24gc2NyZWVuXHJcbiAgICAgKi9cclxuICAgIHZhciBpc09uU2NyZWVuID0gZnVuY3Rpb24oZWwpIHtcclxuICAgICAgdmFyIHdpbiA9ICQod2luZG93KSxcclxuICAgICAgdmlld3BvcnQgPSB7XHJcbiAgICAgICAgdG9wOiB3aW4uc2Nyb2xsVG9wKCksXHJcbiAgICAgICAgbGVmdDogd2luLnNjcm9sbExlZnQoKVxyXG4gICAgICB9LFxyXG4gICAgICBib3VuZHMgPSBlbC5vZmZzZXQoKTtcclxuXHJcbiAgICAgIHZpZXdwb3J0LnJpZ2h0ID0gdmlld3BvcnQubGVmdCArIHdpbi53aWR0aCgpO1xyXG4gICAgICB2aWV3cG9ydC5ib3R0b20gPSB2aWV3cG9ydC50b3AgKyB3aW4uaGVpZ2h0KCk7XHJcbiAgICAgIGJvdW5kcy5yaWdodCA9IGJvdW5kcy5sZWZ0ICsgZWwub3V0ZXJXaWR0aCgpO1xyXG4gICAgICBib3VuZHMuYm90dG9tID0gYm91bmRzLnRvcCArIGVsLm91dGVySGVpZ2h0KCk7XHJcblxyXG4gICAgICByZXR1cm4gKCEodmlld3BvcnQucmlnaHQgPCBib3VuZHMubGVmdCB8fCB2aWV3cG9ydC5sZWZ0ID4gYm91bmRzLnJpZ2h0IHx8IHZpZXdwb3J0LmJvdHRvbSA8IGJvdW5kcy50b3AgfHwgdmlld3BvcnQudG9wID4gYm91bmRzLmJvdHRvbSkpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemVzIGtleWJvYXJkIGV2ZW50c1xyXG4gICAgICovXHJcbiAgICB2YXIga2V5UHJlc3MgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgIHZhciBhY3RpdmVFbGVtZW50VGFnID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCksXHJcbiAgICAgIHRhZ0ZpbHRlcnMgPSAnaW5wdXR8dGV4dGFyZWEnLFxyXG4gICAgICBwID0gbmV3IFJlZ0V4cChhY3RpdmVFbGVtZW50VGFnLFsnaSddKSxcclxuICAgICAgcmVzdWx0ID0gcC5leGVjKHRhZ0ZpbHRlcnMpO1xyXG5cclxuICAgICAgaWYgKHJlc3VsdCA9PSBudWxsICYmIGlzT25TY3JlZW4oZWwpKSB7XHJcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMzkpIHtcclxuICAgICAgICAgIGNsaWNrTmV4dEJpbmQoZSk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT09IDM3KSB7XHJcbiAgICAgICAgICBjbGlja1ByZXZCaW5kKGUpO1xyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpemVzIHRvdWNoIGV2ZW50c1xyXG4gICAgICovXHJcbiAgICB2YXIgaW5pdFRvdWNoID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIC8vIGluaXRpYWxpemUgb2JqZWN0IHRvIGNvbnRhaW4gYWxsIHRvdWNoIHZhbHVlc1xyXG4gICAgICBzbGlkZXIudG91Y2ggPSB7XHJcbiAgICAgICAgc3RhcnQ6IHt4OiAwLCB5OiAwfSxcclxuICAgICAgICBlbmQ6IHt4OiAwLCB5OiAwfVxyXG4gICAgICB9O1xyXG4gICAgICBzbGlkZXIudmlld3BvcnQuYmluZCgndG91Y2hzdGFydCBNU1BvaW50ZXJEb3duIHBvaW50ZXJkb3duJywgb25Ub3VjaFN0YXJ0KTtcclxuXHJcbiAgICAgIC8vZm9yIGJyb3dzZXJzIHRoYXQgaGF2ZSBpbXBsZW1lbnRlZCBwb2ludGVyIGV2ZW50cyBhbmQgZmlyZSBhIGNsaWNrIGFmdGVyXHJcbiAgICAgIC8vZXZlcnkgcG9pbnRlcnVwIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBwb2ludGVydXAgaXMgb24gc2FtZSBzY3JlZW4gbG9jYXRpb24gYXMgcG9pbnRlcmRvd24gb3Igbm90XHJcbiAgICAgIHNsaWRlci52aWV3cG9ydC5vbignY2xpY2snLCAnLmJ4c2xpZGVyIGEnLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5oYXNDbGFzcygnY2xpY2stZGlzYWJsZWQnKSkge1xyXG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LnJlbW92ZUNsYXNzKCdjbGljay1kaXNhYmxlZCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgaGFuZGxlciBmb3IgXCJ0b3VjaHN0YXJ0XCJcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXHJcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIHZhciBvblRvdWNoU3RhcnQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgIC8vZGlzYWJsZSBzbGlkZXIgY29udHJvbHMgd2hpbGUgdXNlciBpcyBpbnRlcmFjdGluZyB3aXRoIHNsaWRlcyB0byBhdm9pZCBzbGlkZXIgZnJlZXplIHRoYXQgaGFwcGVucyBvbiB0b3VjaCBkZXZpY2VzIHdoZW4gYSBzbGlkZSBzd2lwZSBoYXBwZW5zIGltbWVkaWF0ZWx5IGFmdGVyIGludGVyYWN0aW5nIHdpdGggc2xpZGVyIGNvbnRyb2xzXHJcbiAgICAgIHNsaWRlci5jb250cm9scy5lbC5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuXHJcbiAgICAgIGlmIChzbGlkZXIud29ya2luZykge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gcmVjb3JkIHRoZSBvcmlnaW5hbCBwb3NpdGlvbiB3aGVuIHRvdWNoIHN0YXJ0c1xyXG4gICAgICAgIHNsaWRlci50b3VjaC5vcmlnaW5hbFBvcyA9IGVsLnBvc2l0aW9uKCk7XHJcbiAgICAgICAgdmFyIG9yaWcgPSBlLm9yaWdpbmFsRXZlbnQsXHJcbiAgICAgICAgdG91Y2hQb2ludHMgPSAodHlwZW9mIG9yaWcuY2hhbmdlZFRvdWNoZXMgIT09ICd1bmRlZmluZWQnKSA/IG9yaWcuY2hhbmdlZFRvdWNoZXMgOiBbb3JpZ107XHJcbiAgICAgICAgLy8gcmVjb3JkIHRoZSBzdGFydGluZyB0b3VjaCB4LCB5IGNvb3JkaW5hdGVzXHJcbiAgICAgICAgc2xpZGVyLnRvdWNoLnN0YXJ0LnggPSB0b3VjaFBvaW50c1swXS5wYWdlWDtcclxuICAgICAgICBzbGlkZXIudG91Y2guc3RhcnQueSA9IHRvdWNoUG9pbnRzWzBdLnBhZ2VZO1xyXG5cclxuICAgICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5zZXRQb2ludGVyQ2FwdHVyZSkge1xyXG4gICAgICAgICAgc2xpZGVyLnBvaW50ZXJJZCA9IG9yaWcucG9pbnRlcklkO1xyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5zZXRQb2ludGVyQ2FwdHVyZShzbGlkZXIucG9pbnRlcklkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gYmluZCBhIFwidG91Y2htb3ZlXCIgZXZlbnQgdG8gdGhlIHZpZXdwb3J0XHJcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmJpbmQoJ3RvdWNobW92ZSBNU1BvaW50ZXJNb3ZlIHBvaW50ZXJtb3ZlJywgb25Ub3VjaE1vdmUpO1xyXG4gICAgICAgIC8vIGJpbmQgYSBcInRvdWNoZW5kXCIgZXZlbnQgdG8gdGhlIHZpZXdwb3J0XHJcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmJpbmQoJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIG9uVG91Y2hFbmQpO1xyXG4gICAgICAgIHNsaWRlci52aWV3cG9ydC5iaW5kKCdNU1BvaW50ZXJDYW5jZWwgcG9pbnRlcmNhbmNlbCcsIG9uUG9pbnRlckNhbmNlbCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDYW5jZWwgUG9pbnRlciBmb3IgV2luZG93cyBQaG9uZVxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBlIChldmVudClcclxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcclxuICAgICAqL1xyXG4gICAgdmFyIG9uUG9pbnRlckNhbmNlbCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgLyogb25Qb2ludGVyQ2FuY2VsIGhhbmRsZXIgaXMgbmVlZGVkIHRvIGRlYWwgd2l0aCBzaXR1YXRpb25zIHdoZW4gYSB0b3VjaGVuZFxyXG4gICAgICBkb2Vzbid0IGZpcmUgYWZ0ZXIgYSB0b3VjaHN0YXJ0ICh0aGlzIGhhcHBlbnMgb24gd2luZG93cyBwaG9uZXMgb25seSkgKi9cclxuICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdCwgJ3Jlc2V0JywgMCk7XHJcblxyXG4gICAgICAvL3JlbW92ZSBoYW5kbGVyc1xyXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgIHNsaWRlci52aWV3cG9ydC51bmJpbmQoJ01TUG9pbnRlckNhbmNlbCBwb2ludGVyY2FuY2VsJywgb25Qb2ludGVyQ2FuY2VsKTtcclxuICAgICAgc2xpZGVyLnZpZXdwb3J0LnVuYmluZCgndG91Y2htb3ZlIE1TUG9pbnRlck1vdmUgcG9pbnRlcm1vdmUnLCBvblRvdWNoTW92ZSk7XHJcbiAgICAgIHNsaWRlci52aWV3cG9ydC51bmJpbmQoJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIG9uVG91Y2hFbmQpO1xyXG4gICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5yZWxlYXNlUG9pbnRlckNhcHR1cmUpIHtcclxuICAgICAgICBzbGlkZXIudmlld3BvcnQuZ2V0KDApLnJlbGVhc2VQb2ludGVyQ2FwdHVyZShzbGlkZXIucG9pbnRlcklkKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIFwidG91Y2htb3ZlXCJcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXHJcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XHJcbiAgICAgKi9cclxuICAgIHZhciBvblRvdWNoTW92ZSA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgdmFyIG9yaWcgPSBlLm9yaWdpbmFsRXZlbnQsXHJcbiAgICAgIHRvdWNoUG9pbnRzID0gKHR5cGVvZiBvcmlnLmNoYW5nZWRUb3VjaGVzICE9PSAndW5kZWZpbmVkJykgPyBvcmlnLmNoYW5nZWRUb3VjaGVzIDogW29yaWddLFxyXG4gICAgICAvLyBpZiBzY3JvbGxpbmcgb24geSBheGlzLCBkbyBub3QgcHJldmVudCBkZWZhdWx0XHJcbiAgICAgIHhNb3ZlbWVudCA9IE1hdGguYWJzKHRvdWNoUG9pbnRzWzBdLnBhZ2VYIC0gc2xpZGVyLnRvdWNoLnN0YXJ0LngpLFxyXG4gICAgICB5TW92ZW1lbnQgPSBNYXRoLmFicyh0b3VjaFBvaW50c1swXS5wYWdlWSAtIHNsaWRlci50b3VjaC5zdGFydC55KSxcclxuICAgICAgdmFsdWUgPSAwLFxyXG4gICAgICBjaGFuZ2UgPSAwO1xyXG5cclxuICAgICAgLy8geCBheGlzIHN3aXBlXHJcbiAgICAgIGlmICgoeE1vdmVtZW50ICogMykgPiB5TW92ZW1lbnQgJiYgc2xpZGVyLnNldHRpbmdzLnByZXZlbnREZWZhdWx0U3dpcGVYKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAvLyB5IGF4aXMgc3dpcGVcclxuICAgICAgfSBlbHNlIGlmICgoeU1vdmVtZW50ICogMykgPiB4TW92ZW1lbnQgJiYgc2xpZGVyLnNldHRpbmdzLnByZXZlbnREZWZhdWx0U3dpcGVZKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSAhPT0gJ2ZhZGUnICYmIHNsaWRlci5zZXR0aW5ncy5vbmVUb09uZVRvdWNoKSB7XHJcbiAgICAgICAgLy8gaWYgaG9yaXpvbnRhbCwgZHJhZyBhbG9uZyB4IGF4aXNcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xyXG4gICAgICAgICAgY2hhbmdlID0gdG91Y2hQb2ludHNbMF0ucGFnZVggLSBzbGlkZXIudG91Y2guc3RhcnQueDtcclxuICAgICAgICAgIHZhbHVlID0gc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zLmxlZnQgKyBjaGFuZ2U7XHJcbiAgICAgICAgLy8gaWYgdmVydGljYWwsIGRyYWcgYWxvbmcgeSBheGlzXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNoYW5nZSA9IHRvdWNoUG9pbnRzWzBdLnBhZ2VZIC0gc2xpZGVyLnRvdWNoLnN0YXJ0Lnk7XHJcbiAgICAgICAgICB2YWx1ZSA9IHNsaWRlci50b3VjaC5vcmlnaW5hbFBvcy50b3AgKyBjaGFuZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkodmFsdWUsICdyZXNldCcsIDApO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgaGFuZGxlciBmb3IgXCJ0b3VjaGVuZFwiXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxyXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxyXG4gICAgICovXHJcbiAgICB2YXIgb25Ub3VjaEVuZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgc2xpZGVyLnZpZXdwb3J0LnVuYmluZCgndG91Y2htb3ZlIE1TUG9pbnRlck1vdmUgcG9pbnRlcm1vdmUnLCBvblRvdWNoTW92ZSk7XHJcbiAgICAgIC8vZW5hYmxlIHNsaWRlciBjb250cm9scyBhcyBzb29uIGFzIHVzZXIgc3RvcHMgaW50ZXJhY2luZyB3aXRoIHNsaWRlc1xyXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgIHZhciBvcmlnICAgID0gZS5vcmlnaW5hbEV2ZW50LFxyXG4gICAgICB0b3VjaFBvaW50cyA9ICh0eXBlb2Ygb3JpZy5jaGFuZ2VkVG91Y2hlcyAhPT0gJ3VuZGVmaW5lZCcpID8gb3JpZy5jaGFuZ2VkVG91Y2hlcyA6IFtvcmlnXSxcclxuICAgICAgdmFsdWUgICAgICAgPSAwLFxyXG4gICAgICBkaXN0YW5jZSAgICA9IDA7XHJcbiAgICAgIC8vIHJlY29yZCBlbmQgeCwgeSBwb3NpdGlvbnNcclxuICAgICAgc2xpZGVyLnRvdWNoLmVuZC54ID0gdG91Y2hQb2ludHNbMF0ucGFnZVg7XHJcbiAgICAgIHNsaWRlci50b3VjaC5lbmQueSA9IHRvdWNoUG9pbnRzWzBdLnBhZ2VZO1xyXG4gICAgICAvLyBpZiBmYWRlIG1vZGUsIGNoZWNrIGlmIGFic29sdXRlIHggZGlzdGFuY2UgY2xlYXJzIHRoZSB0aHJlc2hvbGRcclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnZmFkZScpIHtcclxuICAgICAgICBkaXN0YW5jZSA9IE1hdGguYWJzKHNsaWRlci50b3VjaC5zdGFydC54IC0gc2xpZGVyLnRvdWNoLmVuZC54KTtcclxuICAgICAgICBpZiAoZGlzdGFuY2UgPj0gc2xpZGVyLnNldHRpbmdzLnN3aXBlVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICBpZiAoc2xpZGVyLnRvdWNoLnN0YXJ0LnggPiBzbGlkZXIudG91Y2guZW5kLngpIHtcclxuICAgICAgICAgICAgZWwuZ29Ub05leHRTbGlkZSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWwuc3RvcEF1dG8oKTtcclxuICAgICAgICB9XHJcbiAgICAgIC8vIG5vdCBmYWRlIG1vZGVcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBjYWxjdWxhdGUgZGlzdGFuY2UgYW5kIGVsJ3MgYW5pbWF0ZSBwcm9wZXJ0eVxyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XHJcbiAgICAgICAgICBkaXN0YW5jZSA9IHNsaWRlci50b3VjaC5lbmQueCAtIHNsaWRlci50b3VjaC5zdGFydC54O1xyXG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZGlzdGFuY2UgPSBzbGlkZXIudG91Y2guZW5kLnkgLSBzbGlkZXIudG91Y2guc3RhcnQueTtcclxuICAgICAgICAgIHZhbHVlID0gc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zLnRvcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaWYgbm90IGluZmluaXRlIGxvb3AgYW5kIGZpcnN0IC8gbGFzdCBzbGlkZSwgZG8gbm90IGF0dGVtcHQgYSBzbGlkZSB0cmFuc2l0aW9uXHJcbiAgICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmICgoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCAmJiBkaXN0YW5jZSA+IDApIHx8IChzbGlkZXIuYWN0aXZlLmxhc3QgJiYgZGlzdGFuY2UgPCAwKSkpIHtcclxuICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkodmFsdWUsICdyZXNldCcsIDIwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIC8vIGNoZWNrIGlmIGRpc3RhbmNlIGNsZWFycyB0aHJlc2hvbGRcclxuICAgICAgICAgIGlmIChNYXRoLmFicyhkaXN0YW5jZSkgPj0gc2xpZGVyLnNldHRpbmdzLnN3aXBlVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IDApIHtcclxuICAgICAgICAgICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsLnN0b3BBdXRvKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBlbC5hbmltYXRlKHByb3BlcnR5LCAyMDApO1xyXG4gICAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAncmVzZXQnLCAyMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBzbGlkZXIudmlld3BvcnQudW5iaW5kKCd0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXAnLCBvblRvdWNoRW5kKTtcclxuICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5nZXQoMCkucmVsZWFzZVBvaW50ZXJDYXB0dXJlKSB7XHJcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5yZWxlYXNlUG9pbnRlckNhcHR1cmUoc2xpZGVyLnBvaW50ZXJJZCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBXaW5kb3cgcmVzaXplIGV2ZW50IGNhbGxiYWNrXHJcbiAgICAgKi9cclxuICAgIHZhciByZXNpemVXaW5kb3cgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgIC8vIGRvbid0IGRvIGFueXRoaW5nIGlmIHNsaWRlciBpc24ndCBpbml0aWFsaXplZC5cclxuICAgICAgaWYgKCFzbGlkZXIuaW5pdGlhbGl6ZWQpIHsgcmV0dXJuOyB9XHJcbiAgICAgIC8vIERlbGF5IGlmIHNsaWRlciB3b3JraW5nLlxyXG4gICAgICBpZiAoc2xpZGVyLndvcmtpbmcpIHtcclxuICAgICAgICB3aW5kb3cuc2V0VGltZW91dChyZXNpemVXaW5kb3csIDEwKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBnZXQgdGhlIG5ldyB3aW5kb3cgZGltZW5zIChhZ2FpbiwgdGhhbmsgeW91IElFKVxyXG4gICAgICAgIHZhciB3aW5kb3dXaWR0aE5ldyA9ICQod2luZG93KS53aWR0aCgpLFxyXG4gICAgICAgIHdpbmRvd0hlaWdodE5ldyA9ICQod2luZG93KS5oZWlnaHQoKTtcclxuICAgICAgICAvLyBtYWtlIHN1cmUgdGhhdCBpdCBpcyBhIHRydWUgd2luZG93IHJlc2l6ZVxyXG4gICAgICAgIC8vICp3ZSBtdXN0IGNoZWNrIHRoaXMgYmVjYXVzZSBvdXIgZGlub3NhdXIgZnJpZW5kIElFIGZpcmVzIGEgd2luZG93IHJlc2l6ZSBldmVudCB3aGVuIGNlcnRhaW4gRE9NIGVsZW1lbnRzXHJcbiAgICAgICAgLy8gYXJlIHJlc2l6ZWQuIENhbiB5b3UganVzdCBkaWUgYWxyZWFkeT8qXHJcbiAgICAgICAgaWYgKHdpbmRvd1dpZHRoICE9PSB3aW5kb3dXaWR0aE5ldyB8fCB3aW5kb3dIZWlnaHQgIT09IHdpbmRvd0hlaWdodE5ldykge1xyXG4gICAgICAgICAgLy8gc2V0IHRoZSBuZXcgd2luZG93IGRpbWVuc1xyXG4gICAgICAgICAgd2luZG93V2lkdGggPSB3aW5kb3dXaWR0aE5ldztcclxuICAgICAgICAgIHdpbmRvd0hlaWdodCA9IHdpbmRvd0hlaWdodE5ldztcclxuICAgICAgICAgIC8vIHVwZGF0ZSBhbGwgZHluYW1pYyBlbGVtZW50c1xyXG4gICAgICAgICAgZWwucmVkcmF3U2xpZGVyKCk7XHJcbiAgICAgICAgICAvLyBDYWxsIHVzZXIgcmVzaXplIGhhbmRsZXJcclxuICAgICAgICAgIHNsaWRlci5zZXR0aW5ncy5vblNsaWRlclJlc2l6ZS5jYWxsKGVsLCBzbGlkZXIuYWN0aXZlLmluZGV4KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGRzIGFuIGFyaWEtaGlkZGVuPXRydWUgYXR0cmlidXRlIHRvIGVhY2ggZWxlbWVudFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzdGFydFZpc2libGVJbmRleCAoaW50KVxyXG4gICAgICogIC0gdGhlIGZpcnN0IHZpc2libGUgZWxlbWVudCdzIGluZGV4XHJcbiAgICAgKi9cclxuICAgIHZhciBhcHBseUFyaWFIaWRkZW5BdHRyaWJ1dGVzID0gZnVuY3Rpb24oc3RhcnRWaXNpYmxlSW5kZXgpIHtcclxuICAgICAgdmFyIG51bWJlck9mU2xpZGVzU2hvd2luZyA9IGdldE51bWJlclNsaWRlc1Nob3dpbmcoKTtcclxuICAgICAgLy8gb25seSBhcHBseSBhdHRyaWJ1dGVzIGlmIHRoZSBzZXR0aW5nIGlzIGVuYWJsZWQgYW5kIG5vdCBpbiB0aWNrZXIgbW9kZVxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFIaWRkZW4gJiYgIXNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHtcclxuICAgICAgICAvLyBhZGQgYXJpYS1oaWRkZW49dHJ1ZSB0byBhbGwgZWxlbWVudHNcclxuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uYXR0cignYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xyXG4gICAgICAgIC8vIGdldCB0aGUgdmlzaWJsZSBlbGVtZW50cyBhbmQgY2hhbmdlIHRvIGFyaWEtaGlkZGVuPWZhbHNlXHJcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLnNsaWNlKHN0YXJ0VmlzaWJsZUluZGV4LCBzdGFydFZpc2libGVJbmRleCArIG51bWJlck9mU2xpZGVzU2hvd2luZykuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgaW5kZXggYWNjb3JkaW5nIHRvIHByZXNlbnQgcGFnZSByYW5nZVxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzbGlkZU9uZGV4IChpbnQpXHJcbiAgICAgKiAgLSB0aGUgZGVzaXJlZCBzbGlkZSBpbmRleFxyXG4gICAgICovXHJcbiAgICB2YXIgc2V0U2xpZGVJbmRleCA9IGZ1bmN0aW9uKHNsaWRlSW5kZXgpIHtcclxuICAgICAgaWYgKHNsaWRlSW5kZXggPCAwKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcclxuICAgICAgICAgIHJldHVybiBnZXRQYWdlclF0eSgpIC0gMTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAvL3dlIGRvbid0IGdvIHRvIHVuZGVmaW5lZCBzbGlkZXNcclxuICAgICAgICAgIHJldHVybiBzbGlkZXIuYWN0aXZlLmluZGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgLy8gaWYgc2xpZGVJbmRleCBpcyBncmVhdGVyIHRoYW4gY2hpbGRyZW4gbGVuZ3RoLCBzZXQgYWN0aXZlIGluZGV4IHRvIDAgKHRoaXMgaGFwcGVucyBkdXJpbmcgaW5maW5pdGUgbG9vcClcclxuICAgICAgfSBlbHNlIGlmIChzbGlkZUluZGV4ID49IGdldFBhZ2VyUXR5KCkpIHtcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCkge1xyXG4gICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIC8vd2UgZG9uJ3QgbW92ZSB0byB1bmRlZmluZWQgcGFnZXNcclxuICAgICAgICAgIHJldHVybiBzbGlkZXIuYWN0aXZlLmluZGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgLy8gc2V0IGFjdGl2ZSBpbmRleCB0byByZXF1ZXN0ZWQgc2xpZGVcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gc2xpZGVJbmRleDtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAgKiA9IFBVQkxJQyBGVU5DVElPTlNcclxuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAgKi9cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBlcmZvcm1zIHNsaWRlIHRyYW5zaXRpb24gdG8gdGhlIHNwZWNpZmllZCBzbGlkZVxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzbGlkZUluZGV4IChpbnQpXHJcbiAgICAgKiAgLSB0aGUgZGVzdGluYXRpb24gc2xpZGUncyBpbmRleCAoemVyby1iYXNlZClcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGlyZWN0aW9uIChzdHJpbmcpXHJcbiAgICAgKiAgLSBJTlRFUk5BTCBVU0UgT05MWSAtIHRoZSBkaXJlY3Rpb24gb2YgdHJhdmVsIChcInByZXZcIiAvIFwibmV4dFwiKVxyXG4gICAgICovXHJcbiAgICBlbC5nb1RvU2xpZGUgPSBmdW5jdGlvbihzbGlkZUluZGV4LCBkaXJlY3Rpb24pIHtcclxuICAgICAgLy8gb25TbGlkZUJlZm9yZSwgb25TbGlkZU5leHQsIG9uU2xpZGVQcmV2IGNhbGxiYWNrc1xyXG4gICAgICAvLyBBbGxvdyB0cmFuc2l0aW9uIGNhbmNlbGluZyBiYXNlZCBvbiByZXR1cm5lZCB2YWx1ZVxyXG4gICAgICB2YXIgcGVyZm9ybVRyYW5zaXRpb24gPSB0cnVlLFxyXG4gICAgICBtb3ZlQnkgPSAwLFxyXG4gICAgICBwb3NpdGlvbiA9IHtsZWZ0OiAwLCB0b3A6IDB9LFxyXG4gICAgICBsYXN0Q2hpbGQgPSBudWxsLFxyXG4gICAgICBsYXN0U2hvd2luZ0luZGV4LCBlcSwgdmFsdWUsIHJlcXVlc3RFbDtcclxuICAgICAgLy8gc3RvcmUgdGhlIG9sZCBpbmRleFxyXG4gICAgICBzbGlkZXIub2xkSW5kZXggPSBzbGlkZXIuYWN0aXZlLmluZGV4O1xyXG4gICAgICAvL3NldCBuZXcgaW5kZXhcclxuICAgICAgc2xpZGVyLmFjdGl2ZS5pbmRleCA9IHNldFNsaWRlSW5kZXgoc2xpZGVJbmRleCk7XHJcblxyXG4gICAgICAvLyBpZiBwbHVnaW4gaXMgY3VycmVudGx5IGluIG1vdGlvbiwgaWdub3JlIHJlcXVlc3RcclxuICAgICAgaWYgKHNsaWRlci53b3JraW5nIHx8IHNsaWRlci5hY3RpdmUuaW5kZXggPT09IHNsaWRlci5vbGRJbmRleCkgeyByZXR1cm47IH1cclxuICAgICAgLy8gZGVjbGFyZSB0aGF0IHBsdWdpbiBpcyBpbiBtb3Rpb25cclxuICAgICAgc2xpZGVyLndvcmtpbmcgPSB0cnVlO1xyXG5cclxuICAgICAgcGVyZm9ybVRyYW5zaXRpb24gPSBzbGlkZXIuc2V0dGluZ3Mub25TbGlkZUJlZm9yZS5jYWxsKGVsLCBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCksIHNsaWRlci5vbGRJbmRleCwgc2xpZGVyLmFjdGl2ZS5pbmRleCk7XHJcblxyXG4gICAgICAvLyBJZiB0cmFuc2l0aW9ucyBjYW5jZWxlZCwgcmVzZXQgYW5kIHJldHVyblxyXG4gICAgICBpZiAodHlwZW9mIChwZXJmb3JtVHJhbnNpdGlvbikgIT09ICd1bmRlZmluZWQnICYmICFwZXJmb3JtVHJhbnNpdGlvbikge1xyXG4gICAgICAgIHNsaWRlci5hY3RpdmUuaW5kZXggPSBzbGlkZXIub2xkSW5kZXg7IC8vIHJlc3RvcmUgb2xkIGluZGV4XHJcbiAgICAgICAgc2xpZGVyLndvcmtpbmcgPSBmYWxzZTsgLy8gaXMgbm90IGluIG1vdGlvblxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ25leHQnKSB7XHJcbiAgICAgICAgLy8gUHJldmVudCBjYW5jZWxpbmcgaW4gZnV0dXJlIGZ1bmN0aW9ucyBvciBsYWNrIHRoZXJlLW9mIGZyb20gbmVnYXRpbmcgcHJldmlvdXMgY29tbWFuZHMgdG8gY2FuY2VsXHJcbiAgICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3Mub25TbGlkZU5leHQuY2FsbChlbCwgc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXgpLCBzbGlkZXIub2xkSW5kZXgsIHNsaWRlci5hY3RpdmUuaW5kZXgpKSB7XHJcbiAgICAgICAgICBwZXJmb3JtVHJhbnNpdGlvbiA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdwcmV2Jykge1xyXG4gICAgICAgIC8vIFByZXZlbnQgY2FuY2VsaW5nIGluIGZ1dHVyZSBmdW5jdGlvbnMgb3IgbGFjayB0aGVyZS1vZiBmcm9tIG5lZ2F0aW5nIHByZXZpb3VzIGNvbW1hbmRzIHRvIGNhbmNlbFxyXG4gICAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLm9uU2xpZGVQcmV2LmNhbGwoZWwsIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KSwgc2xpZGVyLm9sZEluZGV4LCBzbGlkZXIuYWN0aXZlLmluZGV4KSkge1xyXG4gICAgICAgICAgcGVyZm9ybVRyYW5zaXRpb24gPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIGNoZWNrIGlmIGxhc3Qgc2xpZGVcclxuICAgICAgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gc2xpZGVyLmFjdGl2ZS5pbmRleCA+PSBnZXRQYWdlclF0eSgpIC0gMTtcclxuICAgICAgLy8gdXBkYXRlIHRoZSBwYWdlciB3aXRoIGFjdGl2ZSBjbGFzc1xyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyIHx8IHNsaWRlci5zZXR0aW5ncy5wYWdlckN1c3RvbSkgeyB1cGRhdGVQYWdlckFjdGl2ZShzbGlkZXIuYWN0aXZlLmluZGV4KTsgfVxyXG4gICAgICAvLyAvLyBjaGVjayBmb3IgZGlyZWN0aW9uIGNvbnRyb2wgdXBkYXRlXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMpIHsgdXBkYXRlRGlyZWN0aW9uQ29udHJvbHMoKTsgfVxyXG4gICAgICAvLyBpZiBzbGlkZXIgaXMgc2V0IHRvIG1vZGU6IFwiZmFkZVwiXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2ZhZGUnKSB7XHJcbiAgICAgICAgLy8gaWYgYWRhcHRpdmVIZWlnaHQgaXMgdHJ1ZSBhbmQgbmV4dCBoZWlnaHQgaXMgZGlmZmVyZW50IGZyb20gY3VycmVudCBoZWlnaHQsIGFuaW1hdGUgdG8gdGhlIG5ldyBoZWlnaHRcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0ICYmIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoKSAhPT0gZ2V0Vmlld3BvcnRIZWlnaHQoKSkge1xyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmFuaW1hdGUoe2hlaWdodDogZ2V0Vmlld3BvcnRIZWlnaHQoKX0sIHNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodFNwZWVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZmFkZSBvdXQgdGhlIHZpc2libGUgY2hpbGQgYW5kIHJlc2V0IGl0cyB6LWluZGV4IHZhbHVlXHJcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmZpbHRlcignOnZpc2libGUnKS5mYWRlT3V0KHNsaWRlci5zZXR0aW5ncy5zcGVlZCkuY3NzKHt6SW5kZXg6IDB9KTtcclxuICAgICAgICAvLyBmYWRlIGluIHRoZSBuZXdseSByZXF1ZXN0ZWQgc2xpZGVcclxuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCkuY3NzKCd6SW5kZXgnLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVaSW5kZXggKyAxKS5mYWRlSW4oc2xpZGVyLnNldHRpbmdzLnNwZWVkLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICQodGhpcykuY3NzKCd6SW5kZXgnLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVaSW5kZXgpO1xyXG4gICAgICAgICAgdXBkYXRlQWZ0ZXJTbGlkZVRyYW5zaXRpb24oKTtcclxuICAgICAgICB9KTtcclxuICAgICAgLy8gc2xpZGVyIG1vZGUgaXMgbm90IFwiZmFkZVwiXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gaWYgYWRhcHRpdmVIZWlnaHQgaXMgdHJ1ZSBhbmQgbmV4dCBoZWlnaHQgaXMgZGlmZmVyZW50IGZyb20gY3VycmVudCBoZWlnaHQsIGFuaW1hdGUgdG8gdGhlIG5ldyBoZWlnaHRcclxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0ICYmIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoKSAhPT0gZ2V0Vmlld3BvcnRIZWlnaHQoKSkge1xyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmFuaW1hdGUoe2hlaWdodDogZ2V0Vmlld3BvcnRIZWlnaHQoKX0sIHNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodFNwZWVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaWYgY2Fyb3VzZWwgYW5kIG5vdCBpbmZpbml0ZSBsb29wXHJcbiAgICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmIHNsaWRlci5jYXJvdXNlbCAmJiBzbGlkZXIuYWN0aXZlLmxhc3QpIHtcclxuICAgICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XHJcbiAgICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBjaGlsZCBwb3NpdGlvblxyXG4gICAgICAgICAgICBsYXN0Q2hpbGQgPSBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICBwb3NpdGlvbiA9IGxhc3RDaGlsZC5wb3NpdGlvbigpO1xyXG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBsYXN0IHNsaWRlXHJcbiAgICAgICAgICAgIG1vdmVCeSA9IHNsaWRlci52aWV3cG9ydC53aWR0aCgpIC0gbGFzdENoaWxkLm91dGVyV2lkdGgoKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIGdldCBsYXN0IHNob3dpbmcgaW5kZXggcG9zaXRpb25cclxuICAgICAgICAgICAgbGFzdFNob3dpbmdJbmRleCA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xyXG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShsYXN0U2hvd2luZ0luZGV4KS5wb3NpdGlvbigpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gaG9yaXpvbnRhbCBjYXJvdXNlbCwgZ29pbmcgcHJldmlvdXMgd2hpbGUgb24gZmlyc3Qgc2xpZGUgKGluZmluaXRlTG9vcCBtb2RlKVxyXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmNhcm91c2VsICYmIHNsaWRlci5hY3RpdmUubGFzdCAmJiBkaXJlY3Rpb24gPT09ICdwcmV2Jykge1xyXG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNoaWxkIHBvc2l0aW9uXHJcbiAgICAgICAgICBlcSA9IHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzID09PSAxID8gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAtIGdldE1vdmVCeSgpIDogKChnZXRQYWdlclF0eSgpIC0gMSkgKiBnZXRNb3ZlQnkoKSkgLSAoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAtIHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpO1xyXG4gICAgICAgICAgbGFzdENoaWxkID0gZWwuY2hpbGRyZW4oJy5ieC1jbG9uZScpLmVxKGVxKTtcclxuICAgICAgICAgIHBvc2l0aW9uID0gbGFzdENoaWxkLnBvc2l0aW9uKCk7XHJcbiAgICAgICAgLy8gaWYgaW5maW5pdGUgbG9vcCBhbmQgXCJOZXh0XCIgaXMgY2xpY2tlZCBvbiB0aGUgbGFzdCBzbGlkZVxyXG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnbmV4dCcgJiYgc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkge1xyXG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNsb25lIHBvc2l0aW9uXHJcbiAgICAgICAgICBwb3NpdGlvbiA9IGVsLmZpbmQoJz4gLmJ4LWNsb25lJykuZXEoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcykucG9zaXRpb24oKTtcclxuICAgICAgICAgIHNsaWRlci5hY3RpdmUubGFzdCA9IGZhbHNlO1xyXG4gICAgICAgIC8vIG5vcm1hbCBub24temVybyByZXF1ZXN0c1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVJbmRleCA+PSAwKSB7XHJcbiAgICAgICAgICAvL3BhcnNlSW50IGlzIGFwcGxpZWQgdG8gYWxsb3cgZmxvYXRzIGZvciBzbGlkZXMvcGFnZVxyXG4gICAgICAgICAgcmVxdWVzdEVsID0gc2xpZGVJbmRleCAqIHBhcnNlSW50KGdldE1vdmVCeSgpKTtcclxuICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKHJlcXVlc3RFbCkucG9zaXRpb24oKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qIElmIHRoZSBwb3NpdGlvbiBkb2Vzbid0IGV4aXN0XHJcbiAgICAgICAgICogKGUuZy4gaWYgeW91IGRlc3Ryb3kgdGhlIHNsaWRlciBvbiBhIG5leHQgY2xpY2spLFxyXG4gICAgICAgICAqIGl0IGRvZXNuJ3QgdGhyb3cgYW4gZXJyb3IuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgaWYgKHR5cGVvZiAocG9zaXRpb24pICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLShwb3NpdGlvbi5sZWZ0IC0gbW92ZUJ5KSA6IC1wb3NpdGlvbi50b3A7XHJcbiAgICAgICAgICAvLyBwbHVnaW4gdmFsdWVzIHRvIGJlIGFuaW1hdGVkXHJcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAnc2xpZGUnLCBzbGlkZXIuc2V0dGluZ3Muc3BlZWQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzbGlkZXIud29ya2luZyA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFIaWRkZW4pIHsgYXBwbHlBcmlhSGlkZGVuQXR0cmlidXRlcyhzbGlkZXIuYWN0aXZlLmluZGV4ICogZ2V0TW92ZUJ5KCkpOyB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVHJhbnNpdGlvbnMgdG8gdGhlIG5leHQgc2xpZGUgaW4gdGhlIHNob3dcclxuICAgICAqL1xyXG4gICAgZWwuZ29Ub05leHRTbGlkZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAvLyBpZiBpbmZpbml0ZUxvb3AgaXMgZmFsc2UgYW5kIGxhc3QgcGFnZSBpcyBzaG93aW5nLCBkaXNyZWdhcmQgY2FsbFxyXG4gICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3AgJiYgc2xpZGVyLmFjdGl2ZS5sYXN0KSB7IHJldHVybjsgfVxyXG4gICAgICB2YXIgcGFnZXJJbmRleCA9IHBhcnNlSW50KHNsaWRlci5hY3RpdmUuaW5kZXgpICsgMTtcclxuICAgICAgZWwuZ29Ub1NsaWRlKHBhZ2VySW5kZXgsICduZXh0Jyk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVHJhbnNpdGlvbnMgdG8gdGhlIHByZXYgc2xpZGUgaW4gdGhlIHNob3dcclxuICAgICAqL1xyXG4gICAgZWwuZ29Ub1ByZXZTbGlkZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAvLyBpZiBpbmZpbml0ZUxvb3AgaXMgZmFsc2UgYW5kIGxhc3QgcGFnZSBpcyBzaG93aW5nLCBkaXNyZWdhcmQgY2FsbFxyXG4gICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3AgJiYgc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkgeyByZXR1cm47IH1cclxuICAgICAgdmFyIHBhZ2VySW5kZXggPSBwYXJzZUludChzbGlkZXIuYWN0aXZlLmluZGV4KSAtIDE7XHJcbiAgICAgIGVsLmdvVG9TbGlkZShwYWdlckluZGV4LCAncHJldicpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0YXJ0cyB0aGUgYXV0byBzaG93XHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHByZXZlbnRDb250cm9sVXBkYXRlIChib29sZWFuKVxyXG4gICAgICogIC0gaWYgdHJ1ZSwgYXV0byBjb250cm9scyBzdGF0ZSB3aWxsIG5vdCBiZSB1cGRhdGVkXHJcbiAgICAgKi9cclxuICAgIGVsLnN0YXJ0QXV0byA9IGZ1bmN0aW9uKHByZXZlbnRDb250cm9sVXBkYXRlKSB7XHJcbiAgICAgIC8vIGlmIGFuIGludGVydmFsIGFscmVhZHkgZXhpc3RzLCBkaXNyZWdhcmQgY2FsbFxyXG4gICAgICBpZiAoc2xpZGVyLmludGVydmFsKSB7IHJldHVybjsgfVxyXG4gICAgICAvLyBjcmVhdGUgYW4gaW50ZXJ2YWxcclxuICAgICAgc2xpZGVyLmludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcclxuICAgICAgICAgIGVsLmdvVG9OZXh0U2xpZGUoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgc2xpZGVyLnNldHRpbmdzLnBhdXNlKTtcclxuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBhcmUgZGlzcGxheWVkIGFuZCBwcmV2ZW50Q29udHJvbFVwZGF0ZSBpcyBub3QgdHJ1ZVxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scyAmJiBwcmV2ZW50Q29udHJvbFVwZGF0ZSAhPT0gdHJ1ZSkgeyB1cGRhdGVBdXRvQ29udHJvbHMoJ3N0b3AnKTsgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0b3BzIHRoZSBhdXRvIHNob3dcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcHJldmVudENvbnRyb2xVcGRhdGUgKGJvb2xlYW4pXHJcbiAgICAgKiAgLSBpZiB0cnVlLCBhdXRvIGNvbnRyb2xzIHN0YXRlIHdpbGwgbm90IGJlIHVwZGF0ZWRcclxuICAgICAqL1xyXG4gICAgZWwuc3RvcEF1dG8gPSBmdW5jdGlvbihwcmV2ZW50Q29udHJvbFVwZGF0ZSkge1xyXG4gICAgICAvLyBpZiBubyBpbnRlcnZhbCBleGlzdHMsIGRpc3JlZ2FyZCBjYWxsXHJcbiAgICAgIGlmICghc2xpZGVyLmludGVydmFsKSB7IHJldHVybjsgfVxyXG4gICAgICAvLyBjbGVhciB0aGUgaW50ZXJ2YWxcclxuICAgICAgY2xlYXJJbnRlcnZhbChzbGlkZXIuaW50ZXJ2YWwpO1xyXG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgICAvLyBpZiBhdXRvIGNvbnRyb2xzIGFyZSBkaXNwbGF5ZWQgYW5kIHByZXZlbnRDb250cm9sVXBkYXRlIGlzIG5vdCB0cnVlXHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzICYmIHByZXZlbnRDb250cm9sVXBkYXRlICE9PSB0cnVlKSB7IHVwZGF0ZUF1dG9Db250cm9scygnc3RhcnQnKTsgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgY3VycmVudCBzbGlkZSBpbmRleCAoemVyby1iYXNlZClcclxuICAgICAqL1xyXG4gICAgZWwuZ2V0Q3VycmVudFNsaWRlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiBzbGlkZXIuYWN0aXZlLmluZGV4O1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgY3VycmVudCBzbGlkZSBlbGVtZW50XHJcbiAgICAgKi9cclxuICAgIGVsLmdldEN1cnJlbnRTbGlkZUVsZW1lbnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgc2xpZGUgZWxlbWVudFxyXG4gICAgICogQHBhcmFtIGluZGV4IChpbnQpXHJcbiAgICAgKiAgLSBUaGUgaW5kZXggKHplcm8tYmFzZWQpIG9mIHRoZSBlbGVtZW50IHlvdSB3YW50IHJldHVybmVkLlxyXG4gICAgICovXHJcbiAgICBlbC5nZXRTbGlkZUVsZW1lbnQgPSBmdW5jdGlvbihpbmRleCkge1xyXG4gICAgICByZXR1cm4gc2xpZGVyLmNoaWxkcmVuLmVxKGluZGV4KTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIG51bWJlciBvZiBzbGlkZXMgaW4gc2hvd1xyXG4gICAgICovXHJcbiAgICBlbC5nZXRTbGlkZUNvdW50ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiBzbGlkZXIud29ya2luZyB2YXJpYWJsZVxyXG4gICAgICovXHJcbiAgICBlbC5pc1dvcmtpbmcgPSBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuIHNsaWRlci53b3JraW5nO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZSBhbGwgZHluYW1pYyBzbGlkZXIgZWxlbWVudHNcclxuICAgICAqL1xyXG4gICAgZWwucmVkcmF3U2xpZGVyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIC8vIHJlc2l6ZSBhbGwgY2hpbGRyZW4gaW4gcmF0aW8gdG8gbmV3IHNjcmVlbiBzaXplXHJcbiAgICAgIHNsaWRlci5jaGlsZHJlbi5hZGQoZWwuZmluZCgnLmJ4LWNsb25lJykpLm91dGVyV2lkdGgoZ2V0U2xpZGVXaWR0aCgpKTtcclxuICAgICAgLy8gYWRqdXN0IHRoZSBoZWlnaHRcclxuICAgICAgc2xpZGVyLnZpZXdwb3J0LmNzcygnaGVpZ2h0JywgZ2V0Vmlld3BvcnRIZWlnaHQoKSk7XHJcbiAgICAgIC8vIHVwZGF0ZSB0aGUgc2xpZGUgcG9zaXRpb25cclxuICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7IHNldFNsaWRlUG9zaXRpb24oKTsgfVxyXG4gICAgICAvLyBpZiBhY3RpdmUubGFzdCB3YXMgdHJ1ZSBiZWZvcmUgdGhlIHNjcmVlbiByZXNpemUsIHdlIHdhbnRcclxuICAgICAgLy8gdG8ga2VlcCBpdCBsYXN0IG5vIG1hdHRlciB3aGF0IHNjcmVlbiBzaXplIHdlIGVuZCBvblxyXG4gICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5sYXN0KSB7IHNsaWRlci5hY3RpdmUuaW5kZXggPSBnZXRQYWdlclF0eSgpIC0gMTsgfVxyXG4gICAgICAvLyBpZiB0aGUgYWN0aXZlIGluZGV4IChwYWdlKSBubyBsb25nZXIgZXhpc3RzIGR1ZSB0byB0aGUgcmVzaXplLCBzaW1wbHkgc2V0IHRoZSBpbmRleCBhcyBsYXN0XHJcbiAgICAgIGlmIChzbGlkZXIuYWN0aXZlLmluZGV4ID49IGdldFBhZ2VyUXR5KCkpIHsgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gdHJ1ZTsgfVxyXG4gICAgICAvLyBpZiBhIHBhZ2VyIGlzIGJlaW5nIGRpc3BsYXllZCBhbmQgYSBjdXN0b20gcGFnZXIgaXMgbm90IGJlaW5nIHVzZWQsIHVwZGF0ZSBpdFxyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyICYmICFzbGlkZXIuc2V0dGluZ3MucGFnZXJDdXN0b20pIHtcclxuICAgICAgICBwb3B1bGF0ZVBhZ2VyKCk7XHJcbiAgICAgICAgdXBkYXRlUGFnZXJBY3RpdmUoc2xpZGVyLmFjdGl2ZS5pbmRleCk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hcmlhSGlkZGVuKSB7IGFwcGx5QXJpYUhpZGRlbkF0dHJpYnV0ZXMoc2xpZGVyLmFjdGl2ZS5pbmRleCAqIGdldE1vdmVCeSgpKTsgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIERlc3Ryb3kgdGhlIGN1cnJlbnQgaW5zdGFuY2Ugb2YgdGhlIHNsaWRlciAocmV2ZXJ0IGV2ZXJ5dGhpbmcgYmFjayB0byBvcmlnaW5hbCBzdGF0ZSlcclxuICAgICAqL1xyXG4gICAgZWwuZGVzdHJveVNsaWRlciA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAvLyBkb24ndCBkbyBhbnl0aGluZyBpZiBzbGlkZXIgaGFzIGFscmVhZHkgYmVlbiBkZXN0cm95ZWRcclxuICAgICAgaWYgKCFzbGlkZXIuaW5pdGlhbGl6ZWQpIHsgcmV0dXJuOyB9XHJcbiAgICAgIHNsaWRlci5pbml0aWFsaXplZCA9IGZhbHNlO1xyXG4gICAgICAkKCcuYngtY2xvbmUnLCB0aGlzKS5yZW1vdmUoKTtcclxuICAgICAgc2xpZGVyLmNoaWxkcmVuLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKCQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJykgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgJCh0aGlzKS5hdHRyKCdzdHlsZScsICQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJykpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkKHRoaXMpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgaWYgKCQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJykgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHRoaXMuYXR0cignc3R5bGUnLCAkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkKHRoaXMpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcbiAgICAgIH1cclxuICAgICAgJCh0aGlzKS51bndyYXAoKS51bndyYXAoKTtcclxuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5lbCkgeyBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlKCk7IH1cclxuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5uZXh0KSB7IHNsaWRlci5jb250cm9scy5uZXh0LnJlbW92ZSgpOyB9XHJcbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMucHJldikgeyBzbGlkZXIuY29udHJvbHMucHJldi5yZW1vdmUoKTsgfVxyXG4gICAgICBpZiAoc2xpZGVyLnBhZ2VyRWwgJiYgc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzICYmICFzbGlkZXIuc2V0dGluZ3MucGFnZXJDdXN0b20pIHsgc2xpZGVyLnBhZ2VyRWwucmVtb3ZlKCk7IH1cclxuICAgICAgJCgnLmJ4LWNhcHRpb24nLCB0aGlzKS5yZW1vdmUoKTtcclxuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5hdXRvRWwpIHsgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5yZW1vdmUoKTsgfVxyXG4gICAgICBjbGVhckludGVydmFsKHNsaWRlci5pbnRlcnZhbCk7XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucmVzcG9uc2l2ZSkgeyAkKHdpbmRvdykudW5iaW5kKCdyZXNpemUnLCByZXNpemVXaW5kb3cpOyB9XHJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Mua2V5Ym9hcmRFbmFibGVkKSB7ICQoZG9jdW1lbnQpLnVuYmluZCgna2V5ZG93bicsIGtleVByZXNzKTsgfVxyXG4gICAgICAvL3JlbW92ZSBzZWxmIHJlZmVyZW5jZSBpbiBkYXRhXHJcbiAgICAgICQodGhpcykucmVtb3ZlRGF0YSgnYnhTbGlkZXInKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWxvYWQgdGhlIHNsaWRlciAocmV2ZXJ0IGFsbCBET00gY2hhbmdlcywgYW5kIHJlLWluaXRpYWxpemUpXHJcbiAgICAgKi9cclxuICAgIGVsLnJlbG9hZFNsaWRlciA9IGZ1bmN0aW9uKHNldHRpbmdzKSB7XHJcbiAgICAgIGlmIChzZXR0aW5ncyAhPT0gdW5kZWZpbmVkKSB7IG9wdGlvbnMgPSBzZXR0aW5nczsgfVxyXG4gICAgICBlbC5kZXN0cm95U2xpZGVyKCk7XHJcbiAgICAgIGluaXQoKTtcclxuICAgICAgLy9zdG9yZSByZWZlcmVuY2UgdG8gc2VsZiBpbiBvcmRlciB0byBhY2Nlc3MgcHVibGljIGZ1bmN0aW9ucyBsYXRlclxyXG4gICAgICAkKGVsKS5kYXRhKCdieFNsaWRlcicsIHRoaXMpO1xyXG4gICAgfTtcclxuXHJcbiAgICBpbml0KCk7XHJcblxyXG4gICAgJChlbCkuZGF0YSgnYnhTbGlkZXInLCB0aGlzKTtcclxuXHJcbiAgICAvLyByZXR1cm5zIHRoZSBjdXJyZW50IGpRdWVyeSBvYmplY3RcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcblxyXG59KShqUXVlcnkpO1xyXG5cclxuJChmdW5jdGlvbigpIHtcclxuXHJcblx0dmFyICRzaWRlYmFyID0gJCgnLnNpZGViYXInKTtcclxuXHR2YXIgJG5hdmJhciA9ICQoJy5uYXZiYXJfX2xpbmtzJyk7XHJcblx0dmFyICRidXJnZXIgPSAkKCcjYnVyZ2VyJyk7XHJcblx0dmFyICRsaW5rSXRlbSA9ICQoJy5saW5rc19faXRlbScpO1xyXG5cclxuXHJcblx0JHNpZGViYXIuY2xpY2soZnVuY3Rpb24oKSB7XHJcblx0XHQkbmF2YmFyLnRvZ2dsZUNsYXNzKCctLXZpc2libGUnKTtcclxuXHRcdCRzaWRlYmFyLnRvZ2dsZUNsYXNzKCctLW9uJyk7XHJcblx0XHQkYnVyZ2VyLnRvZ2dsZUNsYXNzKCdjbG9zZScpLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcclxuXHR9KTtcclxuXHQkXHJcblxyXG5cdC8vIHBvcC11cFxyXG5cclxuXHR2YXIgJHdoaXRlUGFwcGVyID0gJCgnI3Nob3ctcG9wLXVwJyk7XHJcbiAgdmFyICR3aGl0ZVBhcHBlckJ0biA9ICQoJy53cGJ0bi1mb290ZXInKTtcclxuXHR2YXIgJG92ZXJsYXkgPSAkKCcuY292ZXInKTtcclxuICB2YXIgJGNsb3NlQnRuID0gJCgnLmNsb3NlLWJ1dHRvbicpO1xyXG5cdHZhciAkcG9wVXBXaGl0ZXBhcHBlciA9ICQoJy53aGl0ZXBhcHBlcicpO1xyXG4gIHZhciAkZmVlZGJhY2sgPSAkKCcjc2hvdy1mZWVkYmFjaycpO1xyXG4gIHZhciAkcG9wVXBGZWVkYmFjayA9ICQoJy5mZWVkYmFjay13cmFwJyk7XHJcbiAgdmFyICRjbG9zZVNwYWNlID0gJCgnLnNwYWNlLWNsb3NlJyk7XHJcbiAgdmFyICRxcldlQ2hhdCA9ICQoJyNxci13ZWNoYXQnKTtcclxuICB2YXIgJGxpbmtXZUNoYXQgPSAkKCcjbGluay13ZWNoYXQnKTtcclxuICB2YXIgJGZlZWRiYWNrTGlua3MgPSAkKCcuZmVlZGJhY2staWNvJyk7XHJcblxyXG4gICRxcldlQ2hhdC5oaWRlKCkuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAkcXJXZUNoYXQuZmFkZVRvZ2dsZSg2MDApO1xyXG4gICAgJGZlZWRiYWNrTGlua3MuZGVsYXkoNjAwKS5mYWRlVG9nZ2xlKDQwMCk7XHJcbiAgfSk7XHJcbiAgJGxpbmtXZUNoYXQuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgJHFyV2VDaGF0LmRlbGF5KDQwMCkuZmFkZVRvZ2dsZSg2MDApO1xyXG4gICAgJGZlZWRiYWNrTGlua3MuZmFkZVRvZ2dsZSg0MDApO1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgJGZlZWRiYWNrLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICRwb3BVcEZlZWRiYWNrLmZhZGVUb2dnbGUoJzQwMCcpO1xyXG4gICAgJGZlZWRiYWNrLnRvZ2dsZUNsYXNzKCd3aGl0ZScpO1xyXG4gICAgJGNsb3NlU3BhY2UudG9nZ2xlKDQwMCk7XHJcbiAgfSk7XHJcblxyXG5cclxuICAkY2xvc2VTcGFjZS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICRwb3BVcEZlZWRiYWNrLmZhZGVPdXQoNDAwKTtcclxuICAgICRmZWVkYmFjay5yZW1vdmVDbGFzcygnd2hpdGUnKTtcclxuICAgICRjbG9zZVNwYWNlLmhpZGUoKTtcclxuICB9KTtcclxuXHJcblxyXG5cclxuICAkd2hpdGVQYXBwZXIuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAkb3ZlcmxheS5mYWRlSW4oNDAwKTtcclxuICAgICRwb3BVcFdoaXRlcGFwcGVyLmZhZGVJbig0MDApO1xyXG4gIH0pO1xyXG5cclxuICAkd2hpdGVQYXBwZXJCdG4uY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAkb3ZlcmxheS5mYWRlSW4oNDAwKTtcclxuICAgICRwb3BVcFdoaXRlcGFwcGVyLmZhZGVJbig0MDApO1xyXG4gIH0pO1xyXG5cclxuXHJcblx0JGNsb3NlQnRuLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cdFx0JG92ZXJsYXkuZmFkZU91dCg0MDApO1xyXG5cdFx0JHBvcFVwV2hpdGVwYXBwZXIuZmFkZU91dCg0MDApO1xyXG5cdH0pO1xyXG5cdCRvdmVybGF5LmNsaWNrKGZ1bmN0aW9uKCkge1xyXG5cdFx0JG92ZXJsYXkuZmFkZU91dCg0MDApO1xyXG5cdFx0JHBvcFVwV2hpdGVwYXBwZXIuZmFkZU91dCg0MDApO1xyXG5cdH0pO1xyXG5cclxuXHJcblx0XHRcclxuXHQvLyBSb2FkbWFwXHJcblxyXG5cclxuXHJcblx0dmFyICRoZXhhZ29uZSA9ICQoJy5oZXhvZ29uJyk7XHJcblx0dmFyICRsaW5lQ29ubmVjdCA9ICQoJy5saW5lJyk7XHJcblx0dmFyICR0ZXh0UG9pbnRzID0gJCgnZy50ZXh0Jyk7XHJcblxyXG5cdHZhciAkcm9hZG1hcCA9ICQoJy5yb2FkbWFwJyk7XHJcblxyXG5cdCRsaW5lQ29ubmVjdC5oaWRlKCk7XHJcblx0JHRleHRQb2ludHMuaGlkZSgpO1xyXG5cdCRoZXhhZ29uZS5jbGljayhmdW5jdGlvbigpIHtcclxuXHRcdCRyb2FkbWFwLmFkZENsYXNzKCdzdGVwMScpO1xyXG5cdFx0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCRyb2FkbWFwLmFkZENsYXNzKCdzdGVwMicpO1xyXG5cdFx0fSwgMTIwMCk7XHJcblx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0JGxpbmVDb25uZWN0LmZhZGVJbignMTAwMCcpO1xyXG5cdFx0XHQkdGV4dFBvaW50cy5kZWxheSgxMDAwKS5mYWRlSW4oJzQwMCcpO1xyXG5cdFx0fSwyMDAwKVxyXG5cdH0pO1xyXG5cclxuIC8vIExhbmd1YWdlIHN3aXRjaFxyXG5cclxuICB2YXIgJGxhbmdJdGVtID0gJCgnYS5sYW5nJylcclxuICB2YXIgJGVuZyA9ICQoJyNsYW5nLXVzJyk7XHJcbiAgdmFyICRjbiA9ICQoJyNsYW5nLWNuJyk7XHJcbiAgdmFyICRpbmQgPSAkKCcjbGFuZy1pbicpO1xyXG5cclxuICB2YXIgJGxhbmdCdG4gPSAkKCcubGFuZ3N3aXRjaC13cmFwJyk7XHJcbiAgdmFyICRsYW5nU3dpdGNoID0gJCgnLmxhbmdzd2l0Y2gnKTtcclxuICB2YXIgJGxhbmdTd2l0Y2hDYXJ1c2VsID0gJCgnLmxhbmdzd2l0Y2gtY2FydXNlbCcpO1xyXG5cclxuICAkbGFuZ0J0bi5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICRsYW5nU3dpdGNoLnRvZ2dsZSg0MDApO1xyXG4gICAgJCgnLmxpbmtzX19pdGVtJykudG9nZ2xlQ2xhc3MoJ2hpZGVkJyk7XHJcbiAgfSk7XHJcblxyXG4gICRsYW5nU3dpdGNoQ2FydXNlbC5ieFNsaWRlcih7XHJcbiAgICBhdXRvOiB0cnVlLFxyXG4gICAgY29udHJvbHM6IGZhbHNlLFxyXG4gICAgcGF1c2U6IDIwMDAsXHJcbiAgICBwYWdlcjogZmFsc2UsXHJcbiAgfSlcclxuXHJcblxyXG5cclxuICAvLyBjbi5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgLy8gICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgLy8gICAkKCdib2R5JykuYWRkQ2xhc3MoJ2JsdXInKTtcclxuXHJcbiAgLy8gICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gIC8vICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICdpbmRleC1jbi5odG1sJztcclxuICAvLyAgIH0sIDE1MDApO1xyXG5cclxuICAvLyB9KTtcclxuICAvLyBlbmcuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gIC8vICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIC8vICAgJCgnYm9keScpLmFkZENsYXNzKCdibHVyJyk7XHJcblxyXG4gIC8vICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAvLyAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnaW5kZXguaHRtbCc7XHJcbiAgLy8gICB9LCAxNTAwKTtcclxuXHJcbiAgLy8gfSk7XHJcblxyXG5cclxuIC8vIHZpZGVvIHBvcC11cFxyXG5cclxuXHJcbiAgdmFyICRwb3BVcFZpZGVvQ29udGFpbmVyID0gJChcIi5wb3AtdXAtdmlkZW9cIik7XHJcbiAgdmFyICRwb3BVcFZpZGVvQnRuID0gJCgnI3BsYXktdmlkZW8tZW5nLWJ0bicpO1xyXG4gIHZhciAkcG9wVXBWaWRlb0NuQnRuID0gJCgnI3BsYXktdmlkZW8tY24tYnRuJyk7XHJcblxyXG5cclxuICAkcG9wVXBWaWRlb0J0bi5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgJHBvcFVwVmlkZW9Db250YWluZXIuYXBwZW5kKCc8aWZyYW1lIGlkPVwidmlkZW9cIiBzcmM9XCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9wMVlpREtsU2U4az9yZWw9MCZhdXRvcGxheT0xXCIgZnJhbWVib3JkZXI9XCIwXCIgd2Via2l0YWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+Jyk7XHJcbiAgICAgICRwb3BVcFZpZGVvQ29udGFpbmVyLmZhZGVJbig3MDApO1xyXG4gIH0pO1xyXG5cclxuICAkcG9wVXBWaWRlb0NuQnRuLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAkcG9wVXBWaWRlb0NvbnRhaW5lci5hcHBlbmQoJzx2aWRlbyBpZD1cInZpZGVvXCIgY29udHJvbHMgYXV0b3BsYXk+PHNvdXJjZSBzcmM9XCJodHRwOi8vb25wbGFjZS5pby9pbWcvdmlkZW8vb25wbGFjZS1jaGluYS1zdWJ0aXRsZS5tcDRcIiB0eXBlPVwidmlkZW8vbXA0XCIvPjwvdmlkZW8+Jyk7XHJcbiAgICAgICRwb3BVcFZpZGVvQ29udGFpbmVyLmZhZGVJbig3MDApO1xyXG4gIH0pXHJcblxyXG4gICQoJy5jbG9zZS1idXR0b24tdmlkZW8nKS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICB2YXIgJHZpZGVvID0gJCgnI3ZpZGVvJyk7XHJcbiAgICB2YXIgJHZpZGVvU2NyZWVuID0gJCgnI3ZpZGVvLXBvcC11cCcpO1xyXG4gICAgXHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAkcG9wVXBWaWRlb0NvbnRhaW5lci5oaWRlKDcwMCk7XHJcbiAgICAkdmlkZW9TY3JlZW4ucmVtb3ZlKCk7XHJcbiAgICAkdmlkZW8ucmVtb3ZlKCk7XHJcblxyXG4gIH0pO1xyXG5cclxuICAvLyBtYWluIHRlYW0gcGFnZSBcclxuXHJcbiAgdmFyIHBpY3R1cmVzID0geyAgXHJcbiAgICBFbXB0eTogJCgnI3BpY3R1cmUtZW1wdHknKSxcclxuICAgIEVkd2FyZDogJCgnI3BpY3R1cmUtRWR3YXJkJyksXHJcbiAgICBBbmRyZWk6ICQoJyNwaWN0dXJlLUFuZHJlaScpLFxyXG4gICAgRG1pdHJpeTogJCgnI3BpY3R1cmUtRG1pdHJpeScpLFxyXG4gICAgSWx5YTogJCgnI3BpY3R1cmUtSWx5YScpLFxyXG4gICAgTWlrZTogJCgnI3BpY3R1cmUtTWlrZScpLFxyXG4gICAgT2xlZzogJCgnI3BpY3R1cmUtT2xlZycpLFxyXG4gICAgTWljaGFlbDogJCgnI3BpY3R1cmUtTWljaGFlbCcpLFxyXG4gICAgRXVnZW5lOiAkKCcjcGljdHVyZS1FdWdlbmUnKVxyXG4gIH1cclxuXHJcbiAgdmFyIGRlc2NyaXB0aW9uID0ge1xyXG4gICAgdGVhbTogJCgnI3RlYW0tZGVzY3JpcHRpb24nKSxcclxuICAgIEVkd2FyZDogJCgnI0Vkd2FyZC1kZXNjcmlwdGlvbicpLFxyXG4gICAgQW5kcmVpOiAkKCcjQW5kcmVpLWRlc2NyaXB0aW9uJyksXHJcbiAgICBEbWl0cml5OiAkKCcjRG1pdHJpeS1kZXNjcmlwdGlvbicpLFxyXG4gICAgSWx5YTogJCgnI0lseWEtZGVzY3JpcHRpb24nKSxcclxuICAgIE1pa2U6ICQoJyNNaWtlLWRlc2NyaXB0aW9uJyksXHJcbiAgICBPbGVnOiAkKCcjT2xlZy1kZXNjcmlwdGlvbicpLFxyXG4gICAgTWljaGFlbDogJCgnI01pY2hhZWwtZGVzY3JpcHRpb24nKSxcclxuICAgIEV1Z2VuZTogJCgnI0V1Z2VuZS1kZXNjcmlwdGlvbicpXHJcbiAgfVxyXG5cclxuICB2YXIgYmFja2dyb3VuZHMgPSB7XHJcbiAgICB0b3RhbDogJCgnLmJhY2tncm91bmRzLWl0ZW0nKSxcclxuICAgIEVkd2FyZDogJCgnI0Vkd2FyZC1iYWNrZ3JvdW5kJyksXHJcbiAgICBBbmRyZWk6ICQoJyNBbmRyZWktYmFja2dyb3VuZCcpLFxyXG4gICAgTWlrZTogJCgnI01pa2UtYmFja2dyb3VuZCcpLFxyXG4gICAgRG1pdHJpeTogJCgnI0RtaXRyaXktYmFja2dyb3VuZCcpLFxyXG4gICAgSWx5YTogJCgnI0lseWEtYmFja2dyb3VuZCcpLFxyXG4gICAgT2xlZzogJCgnI09sZWctYmFja2dyb3VuZCcpLFxyXG4gICAgTWljaGFlbDogJCgnI01pY2hhZWwtYmFja2dyb3VuZCcpLFxyXG4gICAgRXVnZW5lOiAkKCcjRXVnZW5lLWJhY2tncm91bmQnKVxyXG4gIH1cclxuXHJcbiAgdmFyIGhleG9saW5rcyA9ICQoJy5tZW1iZXItcGljdHVyZScpO1xyXG4gIHZhciBibHVlaGV4ZXMgPSAkKCcuYmx1ZV9wb2x5Z29ucycpO1xyXG4gIHZhciB0ZWFtU2VjdGlvbiA9ICQoJy50ZWFtJyk7XHJcblxyXG4gIGRlc2NyaXB0aW9uLnRlYW0uc2hvdygpO1xyXG5cclxuICBoZXhvbGlua3MuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgYmx1ZWhleGVzLmZhZGVPdXQoODAwKTtcclxuICAgIHRlYW1TZWN0aW9uLmFkZENsYXNzKCd3aGl0ZScpO1xyXG5cclxuICB9KTtcclxuXHJcbiAgcGljdHVyZXMuRW1wdHkuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgYmFja2dyb3VuZHMudG90YWwuZmFkZU91dCg4MDApO1xyXG4gICAgZGVzY3JpcHRpb24udGVhbS5mYWRlSW4oODAwKS5zaWJsaW5ncygpLmZhZGVPdXQoODAwKVxyXG4gICAgYmx1ZWhleGVzLmZhZGVJbig4MDApO1xyXG4gICAgdGVhbVNlY3Rpb24ucmVtb3ZlQ2xhc3MoJ3doaXRlJylcclxuXHJcbiAgfSk7XHJcbiAgXHJcblxyXG4gIHBpY3R1cmVzLkFuZHJlaS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBiYWNrZ3JvdW5kcy5BbmRyZWkuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgICBkZXNjcmlwdGlvbi5BbmRyZWkuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgfSk7XHJcblxyXG4gIHBpY3R1cmVzLkVkd2FyZC5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBiYWNrZ3JvdW5kcy5FZHdhcmQuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgICBkZXNjcmlwdGlvbi5FZHdhcmQuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgfSk7XHJcbiAgcGljdHVyZXMuRG1pdHJpeS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBiYWNrZ3JvdW5kcy5EbWl0cml5LmZhZGVJbig4MDApLnNpYmxpbmdzKCkuZmFkZU91dCg4MDApO1xyXG4gICAgZGVzY3JpcHRpb24uRG1pdHJpeS5mYWRlSW4oODAwKS5zaWJsaW5ncygpLmZhZGVPdXQoODAwKTtcclxuICB9KTtcclxuICBwaWN0dXJlcy5JbHlhLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGJhY2tncm91bmRzLklseWEuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgICBkZXNjcmlwdGlvbi5JbHlhLmZhZGVJbig4MDApLnNpYmxpbmdzKCkuZmFkZU91dCg4MDApO1xyXG4gIH0pO1xyXG4gIHBpY3R1cmVzLk1pa2UuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgYmFja2dyb3VuZHMuTWlrZS5mYWRlSW4oODAwKS5zaWJsaW5ncygpLmZhZGVPdXQoODAwKTtcclxuICAgIGRlc2NyaXB0aW9uLk1pa2UuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgfSk7XHJcbiAgcGljdHVyZXMuT2xlZy5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBiYWNrZ3JvdW5kcy5PbGVnLmZhZGVJbig4MDApLnNpYmxpbmdzKCkuZmFkZU91dCg4MDApO1xyXG4gICAgZGVzY3JpcHRpb24uT2xlZy5mYWRlSW4oODAwKS5zaWJsaW5ncygpLmZhZGVPdXQoODAwKTtcclxuICB9KTtcclxuICBwaWN0dXJlcy5NaWNoYWVsLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGJhY2tncm91bmRzLk1pY2hhZWwuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgICBkZXNjcmlwdGlvbi5NaWNoYWVsLmZhZGVJbig4MDApLnNpYmxpbmdzKCkuZmFkZU91dCg4MDApO1xyXG4gIH0pO1xyXG4gIHBpY3R1cmVzLkV1Z2VuZS5jbGljayhmdW5jdGlvbihlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBiYWNrZ3JvdW5kcy5FdWdlbmUuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgICBkZXNjcmlwdGlvbi5FdWdlbmUuZmFkZUluKDgwMCkuc2libGluZ3MoKS5mYWRlT3V0KDgwMCk7XHJcbiAgfSk7XHJcblxyXG4gIHZhciBkaXNhYmxlZExpbmsgPSAkKCcuZGlzYWJsZWQnKTtcclxuXHJcbiAgZGlzYWJsZWRMaW5rLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICB9KTtcclxuXHJcbiAgLy8gc2Nyb2xsIGRyYXdpbmdcclxuXHJcbiAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpIHtcclxuICAgIHZhciBzdCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XHJcblxyXG4gICAgYmFja2dyb3VuZHMudG90YWwuY3NzKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlKDBweCwgLScgKyBzdC8zICsncHgpJ30pO1xyXG4gIH0pO1xyXG4gIFxyXG4gIC8vIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgPHBhdGg+XHJcbiAgLy8gdmFyIHBhdGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGluZScpO1xyXG5cclxuICAvLyAvLyBHZXQgbGVuZ3RoIG9mIHBhdGguLi4gfjE2NjhweFxyXG4gIC8vIHZhciBwYXRoTGVuZ3RoID0gcGF0aC5nZXRUb3RhbExlbmd0aCgpO1xyXG5cclxuICAvLyAvLyBNYWtlIHZlcnkgbG9uZyBkYXNoZXMgKHRoZSBsZW5ndGggb2YgdGhlIHBhdGggaXRzZWxmKVxyXG4gIC8vIHBhdGguc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gcGF0aExlbmd0aCArICcgJyArIHBhdGhMZW5ndGg7XHJcblxyXG4gIC8vIC8vIE9mZnNldCB0aGUgZGFzaGVzIHNvIHRoZSBpdCBhcHBlYXJzIGhpZGRlbiBlbnRpcmVseVxyXG4gIC8vIHBhdGguc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IHBhdGhMZW5ndGg7XHJcblxyXG4gIC8vIC8vIFdoZW4gdGhlIHBhZ2Ugc2Nyb2xscy4uLlxyXG4gIC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgXHJcbiAgLy8gICAvLyBXaGF0ICUgZG93biBpcyBpdD8gXHJcbiAgLy8gICB2YXIgc2Nyb2xsUGVyY2VudGFnZSA9IChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICsgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3ApIC8gKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgLSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KTtcclxuICAgICAgXHJcbiAgLy8gICAvLyBMZW5ndGggdG8gb2Zmc2V0IHRoZSBkYXNoZXNcclxuICAvLyAgIHZhciBkcmF3TGVuZ3RoID0gcGF0aExlbmd0aCAqIHNjcm9sbFBlcmNlbnRhZ2U7XHJcbiAgICBcclxuICAvLyAgIC8vIERyYXcgaW4gcmV2ZXJzZVxyXG4gIC8vICAgcGF0aC5zdHlsZS5zdHJva2VEYXNob2Zmc2V0ID0gcGF0aExlbmd0aCAtIGRyYXdMZW5ndGg7XHJcbiAgICBcclxuICAgIFxyXG59KTsiXX0=
