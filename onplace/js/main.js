!function(e){var t={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,slideZIndex:50,wrapperClass:"bx-wrapper",touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,ariaLive:!0,ariaHidden:!0,keyboardEnabled:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",stopAutoOnClick:!1,autoHover:!1,autoDelay:0,autoSlideForOnePage:!1,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,shrinkItems:!1,onSliderLoad:function(){return!0},onSlideBefore:function(){return!0},onSlideAfter:function(){return!0},onSlideNext:function(){return!0},onSlidePrev:function(){return!0},onSliderResize:function(){return!0}};e.fn.bxSlider=function(n){if(0===this.length)return this;if(this.length>1)return this.each(function(){e(this).bxSlider(n)}),this;var s={},o=this,r=e(window).width(),a=e(window).height();if(!e(o).data("bxSlider")){var l=function(){e(o).data("bxSlider")||(s.settings=e.extend({},t,n),s.settings.slideWidth=parseInt(s.settings.slideWidth),s.children=o.children(s.settings.slideSelector),s.children.length<s.settings.minSlides&&(s.settings.minSlides=s.children.length),s.children.length<s.settings.maxSlides&&(s.settings.maxSlides=s.children.length),s.settings.randomStart&&(s.settings.startSlide=Math.floor(Math.random()*s.children.length)),s.active={index:s.settings.startSlide},s.carousel=s.settings.minSlides>1||s.settings.maxSlides>1,s.carousel&&(s.settings.preloadImages="all"),s.minThreshold=s.settings.minSlides*s.settings.slideWidth+(s.settings.minSlides-1)*s.settings.slideMargin,s.maxThreshold=s.settings.maxSlides*s.settings.slideWidth+(s.settings.maxSlides-1)*s.settings.slideMargin,s.working=!1,s.controls={},s.interval=null,s.animProp="vertical"===s.settings.mode?"top":"left",s.usingCSS=s.settings.useCSS&&"fade"!==s.settings.mode&&function(){for(var e=document.createElement("div"),t=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"],i=0;i<t.length;i++)if(void 0!==e.style[t[i]])return s.cssPrefix=t[i].replace("Perspective","").toLowerCase(),s.animProp="-"+s.cssPrefix+"-transform",!0;return!1}(),"vertical"===s.settings.mode&&(s.settings.maxSlides=s.settings.minSlides),o.data("origStyle",o.attr("style")),o.children(s.settings.slideSelector).each(function(){e(this).data("origStyle",e(this).attr("style"))}),d())},d=function(){var t=s.children.eq(s.settings.startSlide);o.wrap('<div class="'+s.settings.wrapperClass+'"><div class="bx-viewport"></div></div>'),s.viewport=o.parent(),s.settings.ariaLive&&!s.settings.ticker&&s.viewport.attr("aria-live","polite"),s.loader=e('<div class="bx-loading" />'),s.viewport.prepend(s.loader),o.css({width:"horizontal"===s.settings.mode?1e3*s.children.length+215+"%":"auto",position:"relative"}),s.usingCSS&&s.settings.easing?o.css("-"+s.cssPrefix+"-transition-timing-function",s.settings.easing):s.settings.easing||(s.settings.easing="swing"),s.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),s.viewport.parent().css({maxWidth:p()}),s.children.css({"float":"horizontal"===s.settings.mode?"left":"none",listStyle:"none",position:"relative"}),s.children.css("width",h()),"horizontal"===s.settings.mode&&s.settings.slideMargin>0&&s.children.css("marginRight",s.settings.slideMargin),"vertical"===s.settings.mode&&s.settings.slideMargin>0&&s.children.css("marginBottom",s.settings.slideMargin),"fade"===s.settings.mode&&(s.children.css({position:"absolute",zIndex:0,display:"none"}),s.children.eq(s.settings.startSlide).css({zIndex:s.settings.slideZIndex,display:"block"})),s.controls.el=e('<div class="bx-controls" />'),s.settings.captions&&y(),s.active.last=s.settings.startSlide===f()-1,s.settings.video&&o.fitVids(),("all"===s.settings.preloadImages||s.settings.ticker)&&(t=s.children),s.settings.ticker?s.settings.pager=!1:(s.settings.controls&&k(),s.settings.auto&&s.settings.autoControls&&C(),s.settings.pager&&w(),(s.settings.controls||s.settings.autoControls||s.settings.pager)&&s.viewport.after(s.controls.el)),c(t,g)},c=function(t,i){var n=t.find('img:not([src=""]), iframe').length,s=0;return 0===n?void i():void t.find('img:not([src=""]), iframe').each(function(){e(this).one("load error",function(){++s===n&&i()}).each(function(){this.complete&&e(this).trigger("load")})})},g=function(){if(s.settings.infiniteLoop&&"fade"!==s.settings.mode&&!s.settings.ticker){var t="vertical"===s.settings.mode?s.settings.minSlides:s.settings.maxSlides,i=s.children.slice(0,t).clone(!0).addClass("bx-clone"),n=s.children.slice(-t).clone(!0).addClass("bx-clone");s.settings.ariaHidden&&(i.attr("aria-hidden",!0),n.attr("aria-hidden",!0)),o.append(i).prepend(n)}s.loader.remove(),x(),"vertical"===s.settings.mode&&(s.settings.adaptiveHeight=!0),s.viewport.height(u()),o.redrawSlider(),s.settings.onSliderLoad.call(o,s.active.index),s.initialized=!0,s.settings.responsive&&e(window).bind("resize",_),s.settings.auto&&s.settings.autoStart&&(f()>1||s.settings.autoSlideForOnePage)&&A(),s.settings.ticker&&q(),s.settings.pager&&P(s.settings.startSlide),s.settings.controls&&z(),s.settings.touchEnabled&&!s.settings.ticker&&V(),s.settings.keyboardEnabled&&!s.settings.ticker&&e(document).keydown(L)},u=function(){var t=0,n=e();if("vertical"===s.settings.mode||s.settings.adaptiveHeight)if(s.carousel){var o=1===s.settings.moveSlides?s.active.index:s.active.index*m();for(n=s.children.eq(o),i=1;i<=s.settings.maxSlides-1;i++)n=o+i>=s.children.length?n.add(s.children.eq(i-1)):n.add(s.children.eq(o+i))}else n=s.children.eq(s.active.index);else n=s.children;return"vertical"===s.settings.mode?(n.each(function(i){t+=e(this).outerHeight()}),s.settings.slideMargin>0&&(t+=s.settings.slideMargin*(s.settings.minSlides-1))):t=Math.max.apply(Math,n.map(function(){return e(this).outerHeight(!1)}).get()),"border-box"===s.viewport.css("box-sizing")?t+=parseFloat(s.viewport.css("padding-top"))+parseFloat(s.viewport.css("padding-bottom"))+parseFloat(s.viewport.css("border-top-width"))+parseFloat(s.viewport.css("border-bottom-width")):"padding-box"===s.viewport.css("box-sizing")&&(t+=parseFloat(s.viewport.css("padding-top"))+parseFloat(s.viewport.css("padding-bottom"))),t},p=function(){var e="100%";return s.settings.slideWidth>0&&(e="horizontal"===s.settings.mode?s.settings.maxSlides*s.settings.slideWidth+(s.settings.maxSlides-1)*s.settings.slideMargin:s.settings.slideWidth),e},h=function(){var e=s.settings.slideWidth,t=s.viewport.width();if(0===s.settings.slideWidth||s.settings.slideWidth>t&&!s.carousel||"vertical"===s.settings.mode)e=t;else if(s.settings.maxSlides>1&&"horizontal"===s.settings.mode){if(t>s.maxThreshold)return e;t<s.minThreshold?e=(t-s.settings.slideMargin*(s.settings.minSlides-1))/s.settings.minSlides:s.settings.shrinkItems&&(e=Math.floor((t+s.settings.slideMargin)/Math.ceil((t+s.settings.slideMargin)/(e+s.settings.slideMargin))-s.settings.slideMargin))}return e},v=function(){var e=1,t=null;return"horizontal"===s.settings.mode&&s.settings.slideWidth>0?s.viewport.width()<s.minThreshold?e=s.settings.minSlides:s.viewport.width()>s.maxThreshold?e=s.settings.maxSlides:(t=s.children.first().width()+s.settings.slideMargin,e=Math.floor((s.viewport.width()+s.settings.slideMargin)/t)):"vertical"===s.settings.mode&&(e=s.settings.minSlides),e},f=function(){var e=0,t=0,i=0;if(s.settings.moveSlides>0)if(s.settings.infiniteLoop)e=Math.ceil(s.children.length/m());else for(;t<s.children.length;)++e,t=i+v(),i+=s.settings.moveSlides<=v()?s.settings.moveSlides:v();else e=Math.ceil(s.children.length/v());return e},m=function(){return s.settings.moveSlides>0&&s.settings.moveSlides<=v()?s.settings.moveSlides:v()},x=function(){var e,t,i;s.children.length>s.settings.maxSlides&&s.active.last&&!s.settings.infiniteLoop?"horizontal"===s.settings.mode?(t=s.children.last(),e=t.position(),b(-(e.left-(s.viewport.width()-t.outerWidth())),"reset",0)):"vertical"===s.settings.mode&&(i=s.children.length-s.settings.minSlides,e=s.children.eq(i).position(),b(-e.top,"reset",0)):(e=s.children.eq(s.active.index*m()).position(),s.active.index===f()-1&&(s.active.last=!0),void 0!==e&&("horizontal"===s.settings.mode?b(-e.left,"reset",0):"vertical"===s.settings.mode&&b(-e.top,"reset",0)))},b=function(t,i,n,r){var a,l;s.usingCSS?(l="vertical"===s.settings.mode?"translate3d(0, "+t+"px, 0)":"translate3d("+t+"px, 0, 0)",o.css("-"+s.cssPrefix+"-transition-duration",n/1e3+"s"),"slide"===i?(o.css(s.animProp,l),0!==n?o.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(t){e(t.target).is(o)&&(o.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),O())}):O()):"reset"===i?o.css(s.animProp,l):"ticker"===i&&(o.css("-"+s.cssPrefix+"-transition-timing-function","linear"),o.css(s.animProp,l),0!==n?o.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(t){e(t.target).is(o)&&(o.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),b(r.resetValue,"reset",0),H())}):(b(r.resetValue,"reset",0),H()))):(a={},a[s.animProp]=t,"slide"===i?o.animate(a,n,s.settings.easing,function(){O()}):"reset"===i?o.css(s.animProp,t):"ticker"===i&&o.animate(a,n,"linear",function(){b(r.resetValue,"reset",0),H()}))},S=function(){for(var t="",i="",n=f(),o=0;o<n;o++)i="",s.settings.buildPager&&e.isFunction(s.settings.buildPager)||s.settings.pagerCustom?(i=s.settings.buildPager(o),s.pagerEl.addClass("bx-custom-pager")):(i=o+1,s.pagerEl.addClass("bx-default-pager")),t+='<div class="bx-pager-item"><a href="" data-slide-index="'+o+'" class="bx-pager-link">'+i+"</a></div>";s.pagerEl.html(t)},w=function(){s.settings.pagerCustom?s.pagerEl=e(s.settings.pagerCustom):(s.pagerEl=e('<div class="bx-pager" />'),s.settings.pagerSelector?e(s.settings.pagerSelector).html(s.pagerEl):s.controls.el.addClass("bx-has-pager").append(s.pagerEl),S()),s.pagerEl.on("click touchend","a",T)},k=function(){s.controls.next=e('<a class="bx-next" href="">'+s.settings.nextText+"</a>"),s.controls.prev=e('<a class="bx-prev" href="">'+s.settings.prevText+"</a>"),s.controls.next.bind("click touchend",I),s.controls.prev.bind("click touchend",E),s.settings.nextSelector&&e(s.settings.nextSelector).append(s.controls.next),s.settings.prevSelector&&e(s.settings.prevSelector).append(s.controls.prev),s.settings.nextSelector||s.settings.prevSelector||(s.controls.directionEl=e('<div class="bx-controls-direction" />'),s.controls.directionEl.append(s.controls.prev).append(s.controls.next),s.controls.el.addClass("bx-has-controls-direction").append(s.controls.directionEl))},C=function(){s.controls.start=e('<div class="bx-controls-auto-item"><a class="bx-start" href="">'+s.settings.startText+"</a></div>"),s.controls.stop=e('<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+s.settings.stopText+"</a></div>"),s.controls.autoEl=e('<div class="bx-controls-auto" />'),s.controls.autoEl.on("click",".bx-start",$),s.controls.autoEl.on("click",".bx-stop",M),s.settings.autoControlsCombine?s.controls.autoEl.append(s.controls.start):s.controls.autoEl.append(s.controls.start).append(s.controls.stop),s.settings.autoControlsSelector?e(s.settings.autoControlsSelector).html(s.controls.autoEl):s.controls.el.addClass("bx-has-controls-auto").append(s.controls.autoEl),D(s.settings.autoStart?"stop":"start")},y=function(){s.children.each(function(t){var i=e(this).find("img:first").attr("title");void 0!==i&&(""+i).length&&e(this).append('<div class="bx-caption"><span>'+i+"</span></div>")})},I=function(e){e.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),o.goToNextSlide())},E=function(e){e.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),o.goToPrevSlide())},$=function(e){o.startAuto(),e.preventDefault()},M=function(e){o.stopAuto(),e.preventDefault()},T=function(t){var i,n;t.preventDefault(),s.controls.el.hasClass("disabled")||(s.settings.auto&&s.settings.stopAutoOnClick&&o.stopAuto(),i=e(t.currentTarget),void 0!==i.attr("data-slide-index")&&(n=parseInt(i.attr("data-slide-index")),n!==s.active.index&&o.goToSlide(n)))},P=function(t){var i=s.children.length;return"short"===s.settings.pagerType?(s.settings.maxSlides>1&&(i=Math.ceil(s.children.length/s.settings.maxSlides)),void s.pagerEl.html(t+1+s.settings.pagerShortSeparator+i)):(s.pagerEl.find("a").removeClass("active"),void s.pagerEl.each(function(i,n){e(n).find("a").eq(t).addClass("active")}))},O=function(){if(s.settings.infiniteLoop){var e="";0===s.active.index?e=s.children.eq(0).position():s.active.index===f()-1&&s.carousel?e=s.children.eq((f()-1)*m()).position():s.active.index===s.children.length-1&&(e=s.children.eq(s.children.length-1).position()),e&&("horizontal"===s.settings.mode?b(-e.left,"reset",0):"vertical"===s.settings.mode&&b(-e.top,"reset",0))}s.working=!1,s.settings.onSlideAfter.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)},D=function(e){s.settings.autoControlsCombine?s.controls.autoEl.html(s.controls[e]):(s.controls.autoEl.find("a").removeClass("active"),s.controls.autoEl.find("a:not(.bx-"+e+")").addClass("active"))},z=function(){1===f()?(s.controls.prev.addClass("disabled"),s.controls.next.addClass("disabled")):!s.settings.infiniteLoop&&s.settings.hideControlOnEnd&&(0===s.active.index?(s.controls.prev.addClass("disabled"),s.controls.next.removeClass("disabled")):s.active.index===f()-1?(s.controls.next.addClass("disabled"),s.controls.prev.removeClass("disabled")):(s.controls.prev.removeClass("disabled"),s.controls.next.removeClass("disabled")))},A=function(){if(s.settings.autoDelay>0){setTimeout(o.startAuto,s.settings.autoDelay)}else o.startAuto(),e(window).focus(function(){o.startAuto()}).blur(function(){o.stopAuto()});s.settings.autoHover&&o.hover(function(){s.interval&&(o.stopAuto(!0),s.autoPaused=!0)},function(){s.autoPaused&&(o.startAuto(!0),s.autoPaused=null)})},q=function(){var t,i,n,r,a,l,d,c,g=0;"next"===s.settings.autoDirection?o.append(s.children.clone().addClass("bx-clone")):(o.prepend(s.children.clone().addClass("bx-clone")),t=s.children.first().position(),g="horizontal"===s.settings.mode?-t.left:-t.top),b(g,"reset",0),s.settings.pager=!1,s.settings.controls=!1,s.settings.autoControls=!1,s.settings.tickerHover&&(s.usingCSS?(r="horizontal"===s.settings.mode?4:5,s.viewport.hover(function(){i=o.css("-"+s.cssPrefix+"-transform"),n=parseFloat(i.split(",")[r]),b(n,"reset",0)},function(){c=0,s.children.each(function(t){c+="horizontal"===s.settings.mode?e(this).outerWidth(!0):e(this).outerHeight(!0)}),a=s.settings.speed/c,l="horizontal"===s.settings.mode?"left":"top",d=a*(c-Math.abs(parseInt(n))),H(d)})):s.viewport.hover(function(){o.stop()},function(){c=0,s.children.each(function(t){c+="horizontal"===s.settings.mode?e(this).outerWidth(!0):e(this).outerHeight(!0)}),a=s.settings.speed/c,l="horizontal"===s.settings.mode?"left":"top",d=a*(c-Math.abs(parseInt(o.css(l)))),H(d)})),H()},H=function(e){var t,i,n,r=e?e:s.settings.speed,a={left:0,top:0},l={left:0,top:0};"next"===s.settings.autoDirection?a=o.find(".bx-clone").first().position():l=s.children.first().position(),t="horizontal"===s.settings.mode?-a.left:-a.top,i="horizontal"===s.settings.mode?-l.left:-l.top,n={resetValue:i},b(t,"ticker",r,n)},W=function(t){var i=e(window),n={top:i.scrollTop(),left:i.scrollLeft()},s=t.offset();return n.right=n.left+i.width(),n.bottom=n.top+i.height(),s.right=s.left+t.outerWidth(),s.bottom=s.top+t.outerHeight(),!(n.right<s.left||n.left>s.right||n.bottom<s.top||n.top>s.bottom)},L=function(e){var t=document.activeElement.tagName.toLowerCase(),i="input|textarea",n=new RegExp(t,["i"]),s=n.exec(i);if(null==s&&W(o)){if(39===e.keyCode)return I(e),!1;if(37===e.keyCode)return E(e),!1}},V=function(){s.touch={start:{x:0,y:0},end:{x:0,y:0}},s.viewport.bind("touchstart MSPointerDown pointerdown",R),s.viewport.on("click",".bxslider a",function(e){s.viewport.hasClass("click-disabled")&&(e.preventDefault(),s.viewport.removeClass("click-disabled"))})},R=function(e){if(s.controls.el.addClass("disabled"),s.working)e.preventDefault(),s.controls.el.removeClass("disabled");else{s.touch.originalPos=o.position();var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t];s.touch.start.x=i[0].pageX,s.touch.start.y=i[0].pageY,s.viewport.get(0).setPointerCapture&&(s.pointerId=t.pointerId,s.viewport.get(0).setPointerCapture(s.pointerId)),s.viewport.bind("touchmove MSPointerMove pointermove",N),s.viewport.bind("touchend MSPointerUp pointerup",Y),s.viewport.bind("MSPointerCancel pointercancel",F)}},F=function(e){b(s.touch.originalPos.left,"reset",0),s.controls.el.removeClass("disabled"),s.viewport.unbind("MSPointerCancel pointercancel",F),s.viewport.unbind("touchmove MSPointerMove pointermove",N),s.viewport.unbind("touchend MSPointerUp pointerup",Y),s.viewport.get(0).releasePointerCapture&&s.viewport.get(0).releasePointerCapture(s.pointerId)},N=function(e){var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t],n=Math.abs(i[0].pageX-s.touch.start.x),o=Math.abs(i[0].pageY-s.touch.start.y),r=0,a=0;3*n>o&&s.settings.preventDefaultSwipeX?e.preventDefault():3*o>n&&s.settings.preventDefaultSwipeY&&e.preventDefault(),"fade"!==s.settings.mode&&s.settings.oneToOneTouch&&("horizontal"===s.settings.mode?(a=i[0].pageX-s.touch.start.x,r=s.touch.originalPos.left+a):(a=i[0].pageY-s.touch.start.y,r=s.touch.originalPos.top+a),b(r,"reset",0))},Y=function(e){s.viewport.unbind("touchmove MSPointerMove pointermove",N),s.controls.el.removeClass("disabled");var t=e.originalEvent,i="undefined"!=typeof t.changedTouches?t.changedTouches:[t],n=0,r=0;s.touch.end.x=i[0].pageX,s.touch.end.y=i[0].pageY,"fade"===s.settings.mode?(r=Math.abs(s.touch.start.x-s.touch.end.x),r>=s.settings.swipeThreshold&&(s.touch.start.x>s.touch.end.x?o.goToNextSlide():o.goToPrevSlide(),o.stopAuto())):("horizontal"===s.settings.mode?(r=s.touch.end.x-s.touch.start.x,n=s.touch.originalPos.left):(r=s.touch.end.y-s.touch.start.y,n=s.touch.originalPos.top),!s.settings.infiniteLoop&&(0===s.active.index&&r>0||s.active.last&&r<0)?b(n,"reset",200):Math.abs(r)>=s.settings.swipeThreshold?(r<0?o.goToNextSlide():o.goToPrevSlide(),o.stopAuto()):b(n,"reset",200)),s.viewport.unbind("touchend MSPointerUp pointerup",Y),s.viewport.get(0).releasePointerCapture&&s.viewport.get(0).releasePointerCapture(s.pointerId)},_=function(t){if(s.initialized)if(s.working)window.setTimeout(_,10);else{var i=e(window).width(),n=e(window).height();r===i&&a===n||(r=i,a=n,o.redrawSlider(),s.settings.onSliderResize.call(o,s.active.index))}},X=function(e){var t=v();s.settings.ariaHidden&&!s.settings.ticker&&(s.children.attr("aria-hidden","true"),s.children.slice(e,e+t).attr("aria-hidden","false"))},Z=function(e){return e<0?s.settings.infiniteLoop?f()-1:s.active.index:e>=f()?s.settings.infiniteLoop?0:s.active.index:e};return o.goToSlide=function(t,i){var n,r,a,l,d=!0,c=0,g={left:0,top:0},p=null;if(s.oldIndex=s.active.index,s.active.index=Z(t),!s.working&&s.active.index!==s.oldIndex){if(s.working=!0,d=s.settings.onSlideBefore.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index),"undefined"!=typeof d&&!d)return s.active.index=s.oldIndex,void(s.working=!1);"next"===i?s.settings.onSlideNext.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)||(d=!1):"prev"===i&&(s.settings.onSlidePrev.call(o,s.children.eq(s.active.index),s.oldIndex,s.active.index)||(d=!1)),s.active.last=s.active.index>=f()-1,(s.settings.pager||s.settings.pagerCustom)&&P(s.active.index),s.settings.controls&&z(),"fade"===s.settings.mode?(s.settings.adaptiveHeight&&s.viewport.height()!==u()&&s.viewport.animate({height:u()},s.settings.adaptiveHeightSpeed),s.children.filter(":visible").fadeOut(s.settings.speed).css({zIndex:0}),s.children.eq(s.active.index).css("zIndex",s.settings.slideZIndex+1).fadeIn(s.settings.speed,function(){e(this).css("zIndex",s.settings.slideZIndex),O()})):(s.settings.adaptiveHeight&&s.viewport.height()!==u()&&s.viewport.animate({height:u()},s.settings.adaptiveHeightSpeed),!s.settings.infiniteLoop&&s.carousel&&s.active.last?"horizontal"===s.settings.mode?(p=s.children.eq(s.children.length-1),g=p.position(),c=s.viewport.width()-p.outerWidth()):(n=s.children.length-s.settings.minSlides,g=s.children.eq(n).position()):s.carousel&&s.active.last&&"prev"===i?(r=1===s.settings.moveSlides?s.settings.maxSlides-m():(f()-1)*m()-(s.children.length-s.settings.maxSlides),p=o.children(".bx-clone").eq(r),g=p.position()):"next"===i&&0===s.active.index?(g=o.find("> .bx-clone").eq(s.settings.maxSlides).position(),s.active.last=!1):t>=0&&(l=t*parseInt(m()),g=s.children.eq(l).position()),"undefined"!=typeof g?(a="horizontal"===s.settings.mode?-(g.left-c):-g.top,b(a,"slide",s.settings.speed)):s.working=!1),s.settings.ariaHidden&&X(s.active.index*m())}},o.goToNextSlide=function(){if(s.settings.infiniteLoop||!s.active.last){var e=parseInt(s.active.index)+1;o.goToSlide(e,"next")}},o.goToPrevSlide=function(){if(s.settings.infiniteLoop||0!==s.active.index){var e=parseInt(s.active.index)-1;o.goToSlide(e,"prev")}},o.startAuto=function(e){s.interval||(s.interval=setInterval(function(){"next"===s.settings.autoDirection?o.goToNextSlide():o.goToPrevSlide()},s.settings.pause),s.settings.autoControls&&e!==!0&&D("stop"))},o.stopAuto=function(e){s.interval&&(clearInterval(s.interval),s.interval=null,s.settings.autoControls&&e!==!0&&D("start"))},o.getCurrentSlide=function(){return s.active.index},o.getCurrentSlideElement=function(){return s.children.eq(s.active.index)},o.getSlideElement=function(e){return s.children.eq(e)},o.getSlideCount=function(){return s.children.length},o.isWorking=function(){return s.working},o.redrawSlider=function(){s.children.add(o.find(".bx-clone")).outerWidth(h()),s.viewport.css("height",u()),s.settings.ticker||x(),s.active.last&&(s.active.index=f()-1),s.active.index>=f()&&(s.active.last=!0),s.settings.pager&&!s.settings.pagerCustom&&(S(),P(s.active.index)),s.settings.ariaHidden&&X(s.active.index*m())},o.destroySlider=function(){s.initialized&&(s.initialized=!1,e(".bx-clone",this).remove(),s.children.each(function(){void 0!==e(this).data("origStyle")?e(this).attr("style",e(this).data("origStyle")):e(this).removeAttr("style")}),void 0!==e(this).data("origStyle")?this.attr("style",e(this).data("origStyle")):e(this).removeAttr("style"),e(this).unwrap().unwrap(),s.controls.el&&s.controls.el.remove(),s.controls.next&&s.controls.next.remove(),s.controls.prev&&s.controls.prev.remove(),s.pagerEl&&s.settings.controls&&!s.settings.pagerCustom&&s.pagerEl.remove(),e(".bx-caption",this).remove(),s.controls.autoEl&&s.controls.autoEl.remove(),clearInterval(s.interval),s.settings.responsive&&e(window).unbind("resize",_),s.settings.keyboardEnabled&&e(document).unbind("keydown",L),e(this).removeData("bxSlider"))},o.reloadSlider=function(t){void 0!==t&&(n=t),o.destroySlider(),l(),e(o).data("bxSlider",this)},l(),e(o).data("bxSlider",this),this}}}(jQuery),$(function(){var e=$(".sidebar"),t=$(".navbar__links"),i=$(".navbar"),n=$("#burger");$(".links__item"),$(".sidebarlayout");e.click(function(){t.toggleClass("--visible"),e.toggleClass("--on"),n.toggleClass("close").toggleClass("opened")}),i.siblings().click(function(){t.removeClass("--visible"),e.removeClass("--on"),n.addClass("close").removeClass("opened")});var s=$("#show-pop-up"),o=$(".wpbtn-footer"),r=$(".cover"),a=$(".close-button"),l=$(".whitepapper"),d=$("#show-feedback"),c=$(".feedback-wrap"),g=$(".space-close"),u=$("#qr-wechat"),p=$("#link-wechat"),h=$(".feedback-ico");u.hide().click(function(){u.fadeToggle(600),h.delay(600).fadeToggle(400)}),p.click(function(e){e.preventDefault(),u.delay(400).fadeToggle(600),h.fadeToggle(400)}),d.click(function(e){e.preventDefault(),c.fadeToggle("400"),d.toggleClass("white"),g.toggle(400)}),g.click(function(){c.fadeOut(400),d.removeClass("white"),g.hide()}),s.click(function(e){e.preventDefault(),r.fadeIn(400),l.fadeIn(400)}),o.click(function(e){e.preventDefault(),r.fadeIn(400),l.fadeIn(400)}),a.click(function(){r.fadeOut(400),l.fadeOut(400)}),r.click(function(){r.fadeOut(400),l.fadeOut(400)});var v=$(".hexogon"),f=$(".line"),m=$("g.text"),x=$(".roadmap");f.hide(),m.hide(),v.click(function(){x.addClass("step1"),setTimeout(function(){x.addClass("step2")},1200),setTimeout(function(){f.fadeIn("1000"),m.delay(1e3).fadeIn("400")},2e3)});var b=($("a.lang"),$("#lang-us"),$("#lang-cn"),$("#lang-in"),$(".langswitch-wrap")),S=$(".langswitch"),w=$(".langswitch-carusel");b.click(function(){S.toggle(400),$(".links__item").toggleClass("hided")}),w.bxSlider({auto:!0,controls:!1,pause:2e3,pager:!1});var k=$(".pop-up-video"),C=$("#play-video-eng-btn"),y=$("#play-video-cn-btn");C.click(function(){k.append('<iframe id="video" src="https://www.youtube.com/embed/p1YiDKlSe8k?rel=0&autoplay=1" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'),k.fadeIn(700)}),y.click(function(){k.append('<video id="video" controls autoplay><source src="http://onplace.io/img/video/onplace-china-subtitle.mp4" type="video/mp4"/></video>'),k.fadeIn(700)}),$(".close-button-video").click(function(e){var t=$("#video"),i=$("#video-pop-up");e.preventDefault(),k.hide(700),i.remove(),t.remove()}),$(".partners-carousel").bxSlider({auto:!0,controls:!1,pause:3e3,pager:!1});var I={Empty:$("#picture-empty"),Edward:$("#picture-Edward"),Andrei:$("#picture-Andrei"),Dmitriy:$("#picture-Dmitriy"),Ilya:$("#picture-Ilya"),Mike:$("#picture-Mike"),Oleg:$("#picture-Oleg"),Michael:$("#picture-Michael"),Eugene:$("#picture-Eugene"),Ruslan:$("#picture-Ruslan"),Vladimir:$("#picture-Vladimir")},E={team:$("#team-description"),Edward:$("#Edward-description"),Andrei:$("#Andrei-description"),Dmitriy:$("#Dmitriy-description"),Ilya:$("#Ilya-description"),Mike:$("#Mike-description"),Oleg:$("#Oleg-description"),Michael:$("#Michael-description"),Eugene:$("#Eugene-description"),Ruslan:$("#Ruslan-description"),Vladimir:$("#Vladimir-description")},M={total:$(".backgrounds-item"),Edward:$("#Edward-background"),Andrei:$("#Andrei-background"),Mike:$("#Mike-background"),Dmitriy:$("#Dmitriy-background"),Ilya:$("#Ilya-background"),Oleg:$("#Oleg-background"),Michael:$("#Michael-background"),Eugene:$("#Eugene-background"),Ruslan:$("#Ruslan-background"),Vladimir:$("#Vladimir-background")},T=$(".member-picture"),P=$(".blue_polygons"),O=$(".team");E.team.show(),T.click(function(){P.fadeOut(800),O.addClass("white")}),I.Empty.click(function(e){e.preventDefault(),M.total.fadeOut(800),E.team.fadeIn(800).siblings().fadeOut(800),P.fadeIn(800),O.removeClass("white")}),I.Andrei.click(function(e){e.preventDefault(),M.Andrei.fadeIn(800).siblings().fadeOut(800),E.Andrei.fadeIn(800).siblings().fadeOut(800)}),I.Edward.click(function(e){e.preventDefault(),M.Edward.fadeIn(800).siblings().fadeOut(800),E.Edward.fadeIn(800).siblings().fadeOut(800)}),I.Dmitriy.click(function(e){e.preventDefault(),M.Dmitriy.fadeIn(800).siblings().fadeOut(800),E.Dmitriy.fadeIn(800).siblings().fadeOut(800)}),I.Ilya.click(function(e){e.preventDefault(),M.Ilya.fadeIn(800).siblings().fadeOut(800),E.Ilya.fadeIn(800).siblings().fadeOut(800)}),I.Mike.click(function(e){e.preventDefault(),M.Mike.fadeIn(800).siblings().fadeOut(800),E.Mike.fadeIn(800).siblings().fadeOut(800)}),I.Oleg.click(function(e){e.preventDefault(),M.Oleg.fadeIn(800).siblings().fadeOut(800),E.Oleg.fadeIn(800).siblings().fadeOut(800)}),I.Michael.click(function(e){e.preventDefault(),M.Michael.fadeIn(800).siblings().fadeOut(800),E.Michael.fadeIn(800).siblings().fadeOut(800)}),I.Eugene.click(function(e){e.preventDefault(),M.Eugene.fadeIn(800).siblings().fadeOut(800),E.Eugene.fadeIn(800).siblings().fadeOut(800)}),I.Ruslan.click(function(e){e.preventDefault(),M.Ruslan.fadeIn(800).siblings().fadeOut(800),E.Ruslan.fadeIn(800).siblings().fadeOut(800)}),I.Vladimir.click(function(e){e.preventDefault(),M.Vladimir.fadeIn(800).siblings().fadeOut(800),E.Vladimir.fadeIn(800).siblings().fadeOut(800)}),$(window).scroll(function(){var e=$(this).scrollTop();M.total.css({transform:"translate(0px, -"+e/3+"px)"})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
